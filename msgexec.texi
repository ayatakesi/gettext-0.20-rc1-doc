@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This file is part of the GNU gettext manual.
@c Copyright (C) 1995-2019 Free Software Foundation, Inc.
@c See the file gettext.texi for copying conditions.

@pindex msgexec
@cindex @code{msgexec} program, usage
@example
msgexec [@var{option}] @var{command} [@var{command-option}]
@end example

@cindex apply command to all translations in a catalog
@code{msgexec}は、翻訳カタログ内のすべての翻訳に、コマンドを適用するためのプログラムです。@var{command}には、標準入力から翻訳を読み込む任意のプログラムを指定できます。呼び出しは、それぞれの翻訳について1回行われます。コマンドの出力は、msgexecの出力となります。@code{msgexec}自体の戻り値は、すべての呼び出しにおける最大の戻り値となります。

@cindex @code{xargs}, and output from @code{msgexec}
@samp{0}という、特別なビルトインコマンドを呼び出すと、NULL終端された翻訳が出力されます。@samp{msgexec
0}の出力は、@samp{xargs -0}の入力として適しています。

@table @samp
@item --newline
@opindex --newline@r{, @code{msgfilter} option}
各入力行の最後に改行を追加します。

@end table

@vindex MSGEXEC_MSGCTXT@r{, environment variable}
@vindex MSGEXEC_MSGID@r{, environment variable}
@vindex MSGEXEC_MSGID_PLURAL@r{, environment variable}
@vindex MSGEXEC_LOCATION@r{, environment variable}
@vindex MSGEXEC_PLURAL_FORM@r{, environment variable}
@vindex MSGEXEC_PREV_MSGCTXT@r{, environment variable}
@vindex MSGEXEC_PREV_MSGID@r{, environment variable}
@vindex MSGEXEC_PREV_MSGID_PLURAL@r{, environment variable}
各@var{command}呼び出しの間、環境変数@code{MSGEXEC_MSGID}がそのメッセージのmsgid、環境変数@code{MSGEXEC_LOCATION}がそのメッセージのPOファイル内での位置にバインドされます。そのメッセージがコンテキストをもつ場合、環境変数@code{MSGEXEC_MSGCTXT}にそのメッセージのmsgctxtがバインドされます(それ以外はバインドされません)。そのメッセージがplural
formをもつ場合、環境変数@code{MSGEXEC_MSGID_PLURAL}にそのメッセージのmsgid_plural、@code{MSGEXEC_PLURAL_FORM}には実際に処理sqあれたpluralの順番(0から開始)がバインドされます(それ以外では両方ともバインドされません)。そのメッセージが(@code{msgmerge}により追加された)以前のmsgidをもつ場合、環境変数@code{MSGEXEC_PREV_MSGCTXT}にそのメッセージの以前のmsgctxt、@code{MSGEXEC_PREV_MSGID}に以前のmsgid、@code{MSGEXEC_PREV_MSGID_PLURAL}に以前のmsgid_pluralがバインドされます。

@cindex catalog encoding and @code{msgexec} output
注意:
@var{command}が翻訳カタログ内の翻訳のエンコーディングに対処できるようにするのは、あなたの責任です。@var{command}が特定のエンコーディングを期待する場合、@samp{msgexec}を呼び出す前に、@samp{msgconv}プログラムで、翻訳カタログをそのエンコーディングに変換するのが最初のステップとなります。@var{command}がlocaleのエンコーディングを期待しているが、あなたはlocaleのエンコーディングを無視したいときには、最初に@samp{msgconv}で翻訳カタログをUTF-8に変換してから、環境変数@code{LC_ALL}を指定して、@samp{msgexec}がUTF-8を処理するようにできます。

@subsection 入力ファイルの位置

@table @samp
@item -i @var{inputfile}
@itemx --input=@var{inputfile}
@opindex -i@r{, @code{msgexec} option}
@opindex --input@r{, @code{msgexec} option}
入力となるPOファイルです。

@item -D @var{directory}
@itemx --directory=@var{directory}
@opindex -D@r{, @code{msgexec} option}
@opindex --directory@r{, @code{msgexec} option}
ディレクトリーのリストに@var{directory}を追加します。このディレクトリーのリストよりソースファイルを検索します。しかし@file{.po}ファイルが出力されるのは、カレントディレクトリーです。

@end table

@var{inputfile}が指定されていないか、@samp{-}が指定された場合は、標準入力から読み込みます。

@subsection 入力ファイルの構文

@table @samp
@item -P
@itemx --properties-input
@opindex -P@r{, @code{msgexec} option}
@opindex --properties-input@r{, @code{msgexec} option}
入力ファイルがPOファイルの構文ではなく、Javaの@code{.properties}の構文にのっとったJava
ResourceBundleファイルだとみなします。

@item --stringtable-input
@opindex --stringtable-input@r{, @code{msgexec} option}
入力ファイルがPOファイルの構文ではなく、NeXTstep/GNUstepのlocalized
resourceの@code{.strings}の構文にのっとったファイルだとみなします。

@end table

@subsection 情報的な出力

@table @samp
@item -h
@itemx --help
@opindex -h@r{, @code{msgexec} option}
@opindex --help@r{, @code{msgexec} option}
このヘルプを表示して終了します。

@item -V
@itemx --version
@opindex -V@r{, @code{msgexec} option}
@opindex --version@r{, @code{msgexec} option}
バージョン情報を表示して終了します。

@end table
