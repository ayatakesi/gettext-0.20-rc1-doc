# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-04-14 22:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: ifset
#: original_texis/gettext.texi:15
msgid "@documentencoding UTF-8"
msgstr ""

#. type: top
#: original_texis/gettext.texi:16 original_texis/gettext.texi:144
#, no-wrap
msgid "GNU @code{gettext} utilities"
msgstr ""

#. type: ifclear
#: original_texis/gettext.texi:44
msgid "@firstparagraphindent insert"
msgstr ""

#. type: include
#: original_texis/gettext.texi:47
#, no-wrap
msgid "version.texi"
msgstr ""

#. type: dircategory
#: original_texis/gettext.texi:50
#, no-wrap
msgid "GNU Gettext Utilities"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "gettext: (gettext)"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "GNU gettext utilities."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "autopoint: (gettext)autopoint Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Copy gettext infrastructure."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "envsubst: (gettext)envsubst Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Expand environment variables."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "gettextize: (gettext)gettextize Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Prepare a package for gettext."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgattrib: (gettext)msgattrib Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Select part of a PO file."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgcat: (gettext)msgcat Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Combine several PO files."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgcmp: (gettext)msgcmp Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Compare a PO file and template."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgcomm: (gettext)msgcomm Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Match two PO files."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgconv: (gettext)msgconv Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Convert PO file to encoding."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgen: (gettext)msgen Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Create an English PO file."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgexec: (gettext)msgexec Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Process a PO file."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgfilter: (gettext)msgfilter Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Pipe a PO file through a filter."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgfmt: (gettext)msgfmt Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Make MO files out of PO files."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msggrep: (gettext)msggrep Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msginit: (gettext)msginit Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Create a fresh PO file."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgmerge: (gettext)msgmerge Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Update a PO file from template."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msgunfmt: (gettext)msgunfmt Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Uncompile MO file into PO file."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "msguniq: (gettext)msguniq Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Unify duplicates for PO file."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "ngettext: (gettext)ngettext Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Translate a message with plural."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "xgettext: (gettext)xgettext Invocation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "Extract strings into a PO file."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "ISO639: (gettext)Language Codes"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "ISO 639 language codes."
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "ISO3166: (gettext)Country Codes"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:74
msgid "ISO 3166 country codes."
msgstr ""

#. type: ifinfo
#: original_texis/gettext.texi:80
msgid ""
"This file provides documentation for GNU @code{gettext} utilities.  It also "
"serves as a reference for the free Translation Project."
msgstr ""

#. type: ifnothtml
#: original_texis/gettext.texi:83 original_texis/gettext.texi:118
msgid "Copyright (C) 1995-1998, 2001-2019 Free Software Foundation, Inc."
msgstr ""

#. type: ifnothtml
#: original_texis/gettext.texi:87 original_texis/gettext.texi:122
msgid ""
"This manual is free documentation.  It is dually licensed under the GNU FDL "
"and the GNU GPL.  This means that you can redistribute this manual under "
"either of these two licenses, at your choice."
msgstr ""

#. type: ifnothtml
#: original_texis/gettext.texi:95 original_texis/gettext.texi:130
msgid ""
"This manual is covered by the GNU FDL.  Permission is granted to copy, "
"distribute and/or modify this document under the terms of the GNU Free "
"Documentation License (FDL), either version 1.2 of the License, or (at your "
"option) any later version published by the Free Software Foundation (FSF); "
"with no Invariant Sections, with no Front-Cover Text, and with no Back-Cover "
"Texts.  A copy of the license is included in @ref{GNU FDL}."
msgstr ""

#. type: ifnothtml
#: original_texis/gettext.texi:101 original_texis/gettext.texi:136
msgid ""
"This manual is covered by the GNU GPL.  You can redistribute it and/or "
"modify it under the terms of the GNU General Public License (GPL), either "
"version 2 of the License, or (at your option) any later version published by "
"the Free Software Foundation (FSF).  A copy of the license is included in "
"@ref{GNU GPL}."
msgstr ""

#. type: title
#: original_texis/gettext.texi:105
#, no-wrap
msgid "GNU gettext tools, version @value{VERSION}"
msgstr ""

#. type: subtitle
#: original_texis/gettext.texi:106
#, no-wrap
msgid "Native Language Support Library and Tools"
msgstr ""

#. type: subtitle
#: original_texis/gettext.texi:107
#, no-wrap
msgid "Edition @value{EDITION}, @value{UPDATED}"
msgstr ""

#. type: author
#: original_texis/gettext.texi:108
#, no-wrap
msgid "Ulrich Drepper"
msgstr ""

#. type: author
#: original_texis/gettext.texi:109
#, no-wrap
msgid "Jim Meyering"
msgstr ""

#. type: author
#: original_texis/gettext.texi:110
#, no-wrap
msgid "Fran@,{c}ois Pinard"
msgstr ""

#. type: author
#: original_texis/gettext.texi:111
#, no-wrap
msgid "Bruno Haible"
msgstr ""

#. type: node
#: original_texis/gettext.texi:143
#, no-wrap
msgid "Top"
msgstr ""

#. type: ifnottex
#: original_texis/gettext.texi:148
msgid ""
"This manual documents the GNU gettext tools and the GNU libintl library, "
"version @value{VERSION}."
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:183 original_texis/gettext.texi:525 original_texis/gettext.texi:526
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:1144
#, no-wrap
msgid "Users"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:191 original_texis/gettext.texi:1145
#, no-wrap
msgid "The User's View"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:1406
#, no-wrap
msgid "PO Files"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:1407
#, no-wrap
msgid "The Format of PO Files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:1822
#, no-wrap
msgid "Sources"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:204 original_texis/gettext.texi:1823
#, no-wrap
msgid "Preparing Program Sources"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:2907
#, no-wrap
msgid "Template"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:217 original_texis/gettext.texi:2908
#, no-wrap
msgid "Making the PO Template File"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:2932
#, no-wrap
msgid "Creating"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:221 original_texis/gettext.texi:2933
#, no-wrap
msgid "Creating a New PO File"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:3188
#, no-wrap
msgid "Updating"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:226 original_texis/gettext.texi:3189
#, no-wrap
msgid "Updating Existing PO Files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:3200
#, no-wrap
msgid "Editing"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:167 original_texis/gettext.texi:230 original_texis/gettext.texi:3201 original_texis/gettext.texi:3202
#, no-wrap
msgid "Editing PO Files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:4664
#, no-wrap
msgid "Manipulating"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:258 original_texis/gettext.texi:4665
#, no-wrap
msgid "Manipulating PO Files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:5354
#, no-wrap
msgid "Binaries"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:282 original_texis/gettext.texi:5355
#, no-wrap
msgid "Producing Binary MO Files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:5533
#, no-wrap
msgid "Programmers"
msgstr ""

#. type: section
#: original_texis/gettext.texi:167 original_texis/gettext.texi:288 original_texis/gettext.texi:387 original_texis/gettext.texi:5534 original_texis/gettext.texi:8847 original_texis/gettext.texi:8949
#, no-wrap
msgid "The Programmer's View"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:6964
#, no-wrap
msgid "Translators"
msgstr ""

#. type: section
#: original_texis/gettext.texi:167 original_texis/gettext.texi:319 original_texis/gettext.texi:387 original_texis/gettext.texi:389 original_texis/gettext.texi:6965 original_texis/gettext.texi:8847 original_texis/gettext.texi:8959
#, no-wrap
msgid "The Translator's View"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:7610
#, no-wrap
msgid "Maintainers"
msgstr ""

#. type: section
#: original_texis/gettext.texi:167 original_texis/gettext.texi:340 original_texis/gettext.texi:387 original_texis/gettext.texi:7611 original_texis/gettext.texi:8847 original_texis/gettext.texi:9290
#, no-wrap
msgid "The Maintainer's View"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:8803
#, no-wrap
msgid "Installers"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:8804
#, no-wrap
msgid "The Installer's and Distributor's View"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:8832
#, no-wrap
msgid "Programming Languages"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:381 original_texis/gettext.texi:8833
#, no-wrap
msgid "Other Programming Languages"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:12209
#, no-wrap
msgid "Data Formats"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:468 original_texis/gettext.texi:12210
#, no-wrap
msgid "Other Data Formats"
msgstr ""

#. type: node
#: original_texis/gettext.texi:167 original_texis/gettext.texi:12660
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: chapter
#: original_texis/gettext.texi:167 original_texis/gettext.texi:504 original_texis/gettext.texi:12661
#, no-wrap
msgid "Concluding Remarks"
msgstr ""

#. type: appendix
#: original_texis/gettext.texi:171 original_texis/gettext.texi:510 original_texis/gettext.texi:12804 original_texis/gettext.texi:12805
#, no-wrap
msgid "Language Codes"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:171
msgid "ISO 639 language codes"
msgstr ""

#. type: appendix
#: original_texis/gettext.texi:171 original_texis/gettext.texi:12840 original_texis/gettext.texi:12841
#, no-wrap
msgid "Country Codes"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:171
msgid "ISO 3166 country codes"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:171 original_texis/gettext.texi:515 original_texis/gettext.texi:12853 original_texis/gettext.texi:12854 original_texis/gettext.texi:12855
#, no-wrap
msgid "Licenses"
msgstr ""

#. type: unnumbered
#: original_texis/gettext.texi:178 original_texis/gettext.texi:12916 original_texis/gettext.texi:12917
#, no-wrap
msgid "Program Index"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:178
msgid "Index of Programs"
msgstr ""

#. type: unnumbered
#: original_texis/gettext.texi:178 original_texis/gettext.texi:12921 original_texis/gettext.texi:12922
#, no-wrap
msgid "Option Index"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:178
msgid "Index of Command-Line Options"
msgstr ""

#. type: unnumbered
#: original_texis/gettext.texi:178 original_texis/gettext.texi:12926 original_texis/gettext.texi:12927
#, no-wrap
msgid "Variable Index"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:178
msgid "Index of Environment Variables"
msgstr ""

#. type: unnumbered
#: original_texis/gettext.texi:178 original_texis/gettext.texi:12931 original_texis/gettext.texi:12932
#, no-wrap
msgid "PO Mode Index"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:178
msgid "Index of Emacs PO Mode Commands"
msgstr ""

#. type: unnumbered
#: original_texis/gettext.texi:178 original_texis/gettext.texi:12936 original_texis/gettext.texi:12937
#, no-wrap
msgid "Autoconf Macro Index"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:178
msgid "Index of Autoconf Macros"
msgstr ""

#. type: node
#: original_texis/gettext.texi:178 original_texis/gettext.texi:12941
#, no-wrap
msgid "Index"
msgstr ""

#. type: unnumbered
#: original_texis/gettext.texi:178 original_texis/gettext.texi:12942
#, no-wrap
msgid "General Index"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:181
msgid "--- The Detailed Node Listing ---"
msgstr ""

#. type: node
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:571
#, no-wrap
msgid "Why"
msgstr ""

#. type: section
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:572
#, no-wrap
msgid "The Purpose of GNU @code{gettext}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:645
#, no-wrap
msgid "Concepts"
msgstr ""

#. type: section
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:646
#, no-wrap
msgid "I18n, L10n, and Such"
msgstr ""

#. type: node
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:711
#, no-wrap
msgid "Aspects"
msgstr ""

#. type: section
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:712
#, no-wrap
msgid "Aspects in Native Language Support"
msgstr ""

#. type: node
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:873
#, no-wrap
msgid "Files"
msgstr ""

#. type: section
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:874
#, no-wrap
msgid "Files Conveying Translations"
msgstr ""

#. type: node
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:908
#, no-wrap
msgid "Overview"
msgstr ""

#. type: section
#: original_texis/gettext.texi:189 original_texis/gettext.texi:569 original_texis/gettext.texi:909
#, no-wrap
msgid "Overview of GNU @code{gettext}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161 original_texis/gettext.texi:1163
#, no-wrap
msgid "System Installation"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161
msgid "Questions During Operating System Installation"
msgstr ""

#. type: node
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161 original_texis/gettext.texi:1193
#, no-wrap
msgid "Setting the GUI Locale"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161
msgid "How to Specify the Locale Used by GUI Programs"
msgstr ""

#. type: node
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161 original_texis/gettext.texi:1218
#, no-wrap
msgid "Setting the POSIX Locale"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161
msgid "How to Specify the Locale According to POSIX"
msgstr ""

#. type: node
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161 original_texis/gettext.texi:1378
#, no-wrap
msgid "Installing Localizations"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:196 original_texis/gettext.texi:1161
msgid "How to Install Additional Translations"
msgstr ""

#. type: section
#: original_texis/gettext.texi:198 original_texis/gettext.texi:1219
#, no-wrap
msgid "Setting the Locale through Environment Variables"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:202 original_texis/gettext.texi:1235 original_texis/gettext.texi:1237 original_texis/gettext.texi:1238
#, no-wrap
msgid "Locale Names"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:202 original_texis/gettext.texi:1235
msgid "How a Locale Specification Looks Like"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:202 original_texis/gettext.texi:1235 original_texis/gettext.texi:1285 original_texis/gettext.texi:1286
#, no-wrap
msgid "Locale Environment Variables"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:202 original_texis/gettext.texi:1235
msgid "Which Environment Variable Specfies What"
msgstr ""

#. type: node
#: original_texis/gettext.texi:202 original_texis/gettext.texi:1235 original_texis/gettext.texi:1344
#, no-wrap
msgid "The LANGUAGE variable"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:202 original_texis/gettext.texi:1235
msgid "How to Specify a Priority List of Languages"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:1849
#, no-wrap
msgid "Importing"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:1850
#, no-wrap
msgid "Importing the @code{gettext} declaration"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:1870
#, no-wrap
msgid "Triggering"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:1871
#, no-wrap
msgid "Triggering @code{gettext} Operations"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:1964
#, no-wrap
msgid "Preparing Strings"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:1965
#, no-wrap
msgid "Preparing Translatable Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2234
#, no-wrap
msgid "Mark Keywords"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2235
#, no-wrap
msgid "How Marks Appear in Sources"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2320
#, no-wrap
msgid "Marking"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2321
#, no-wrap
msgid "Marking Translatable Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2476
#, no-wrap
msgid "c-format Flag"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847
msgid "Telling something about the following string"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2568
#, no-wrap
msgid "Special cases"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2569
#, no-wrap
msgid "Special Cases of Translatable Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2662
#, no-wrap
msgid "Bug Report Address"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2663
#, no-wrap
msgid "Letting Users Report Translation Bugs"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2716
#, no-wrap
msgid "Names"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2717
#, no-wrap
msgid "Marking Proper Names for Translation"
msgstr ""

#. type: node
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2807
#, no-wrap
msgid "Libraries"
msgstr ""

#. type: section
#: original_texis/gettext.texi:215 original_texis/gettext.texi:1847 original_texis/gettext.texi:2808
#, no-wrap
msgid "Preparing Library Sources"
msgstr ""

#. type: node
#: original_texis/gettext.texi:219 original_texis/gettext.texi:2925 original_texis/gettext.texi:2927
#, no-wrap
msgid "xgettext Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:219 original_texis/gettext.texi:2925 original_texis/gettext.texi:2928
#, no-wrap
msgid "Invoking the @code{xgettext} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:224 original_texis/gettext.texi:2958 original_texis/gettext.texi:2960
#, no-wrap
msgid "msginit Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:224 original_texis/gettext.texi:2958 original_texis/gettext.texi:2961
#, no-wrap
msgid "Invoking the @code{msginit} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:224 original_texis/gettext.texi:2958 original_texis/gettext.texi:2965
#, no-wrap
msgid "Header Entry"
msgstr ""

#. type: section
#: original_texis/gettext.texi:224 original_texis/gettext.texi:2958 original_texis/gettext.texi:2966
#, no-wrap
msgid "Filling in the Header Entry"
msgstr ""

#. type: node
#: original_texis/gettext.texi:228 original_texis/gettext.texi:3193 original_texis/gettext.texi:3195
#, no-wrap
msgid "msgmerge Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:228 original_texis/gettext.texi:3193 original_texis/gettext.texi:3196
#, no-wrap
msgid "Invoking the @code{msgmerge} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:235 original_texis/gettext.texi:3209 original_texis/gettext.texi:3211
#, no-wrap
msgid "KBabel"
msgstr ""

#. type: section
#: original_texis/gettext.texi:235 original_texis/gettext.texi:3209 original_texis/gettext.texi:3212
#, no-wrap
msgid "KDE's PO File Editor"
msgstr ""

#. type: node
#: original_texis/gettext.texi:235 original_texis/gettext.texi:3209 original_texis/gettext.texi:3215
#, no-wrap
msgid "Gtranslator"
msgstr ""

#. type: section
#: original_texis/gettext.texi:235 original_texis/gettext.texi:3209 original_texis/gettext.texi:3216
#, no-wrap
msgid "GNOME's PO File Editor"
msgstr ""

#. type: node
#: original_texis/gettext.texi:235 original_texis/gettext.texi:3209 original_texis/gettext.texi:3219
#, no-wrap
msgid "PO Mode"
msgstr ""

#. type: section
#: original_texis/gettext.texi:235 original_texis/gettext.texi:237 original_texis/gettext.texi:3209 original_texis/gettext.texi:3220
#, no-wrap
msgid "Emacs's PO File Editor"
msgstr ""

#. type: node
#: original_texis/gettext.texi:235 original_texis/gettext.texi:3209 original_texis/gettext.texi:4532
#, no-wrap
msgid "Compendium"
msgstr ""

#. type: section
#: original_texis/gettext.texi:235 original_texis/gettext.texi:253 original_texis/gettext.texi:3209 original_texis/gettext.texi:4533
#, no-wrap
msgid "Using Translation Compendia"
msgstr ""

#. type: node
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3256
#, no-wrap
msgid "Installation"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3257
#, no-wrap
msgid "Completing GNU @code{gettext} Installation"
msgstr ""

#. type: node
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3306
#, no-wrap
msgid "Main PO Commands"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254
msgid "Main Commands"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3441 original_texis/gettext.texi:3442
#, no-wrap
msgid "Entry Positioning"
msgstr ""

#. type: node
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3585
#, no-wrap
msgid "Normalizing"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3586
#, no-wrap
msgid "Normalizing Strings in Entries"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3693 original_texis/gettext.texi:3694
#, no-wrap
msgid "Translated Entries"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3734 original_texis/gettext.texi:3735
#, no-wrap
msgid "Fuzzy Entries"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3820 original_texis/gettext.texi:3821
#, no-wrap
msgid "Untranslated Entries"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3877 original_texis/gettext.texi:3878
#, no-wrap
msgid "Obsolete Entries"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:3958 original_texis/gettext.texi:3959
#, no-wrap
msgid "Modifying Translations"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:4135 original_texis/gettext.texi:4136
#, no-wrap
msgid "Modifying Comments"
msgstr ""

#. type: node
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:4241
#, no-wrap
msgid "Subedit"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254
msgid "Mode for Editing Translations"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:4330 original_texis/gettext.texi:4331
#, no-wrap
msgid "C Sources Context"
msgstr ""

#. type: node
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:4448
#, no-wrap
msgid "Auxiliary"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:251 original_texis/gettext.texi:3254 original_texis/gettext.texi:4449
#, no-wrap
msgid "Consulting Auxiliary PO Files"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:256 original_texis/gettext.texi:4546 original_texis/gettext.texi:4548 original_texis/gettext.texi:4549
#, no-wrap
msgid "Creating Compendia"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:256 original_texis/gettext.texi:4546
msgid "Merging translations for later use"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:256 original_texis/gettext.texi:4546 original_texis/gettext.texi:4636 original_texis/gettext.texi:4637
#, no-wrap
msgid "Using Compendia"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:256 original_texis/gettext.texi:4546
msgid "Using older translations if they fit"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4750
#, no-wrap
msgid "msgcat Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4751
#, no-wrap
msgid "Invoking the @code{msgcat} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4755
#, no-wrap
msgid "msgconv Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4756
#, no-wrap
msgid "Invoking the @code{msgconv} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4760
#, no-wrap
msgid "msggrep Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4761
#, no-wrap
msgid "Invoking the @code{msggrep} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4765
#, no-wrap
msgid "msgfilter Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4766
#, no-wrap
msgid "Invoking the @code{msgfilter} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4770
#, no-wrap
msgid "msguniq Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4771
#, no-wrap
msgid "Invoking the @code{msguniq} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4775
#, no-wrap
msgid "msgcomm Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4776
#, no-wrap
msgid "Invoking the @code{msgcomm} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4780
#, no-wrap
msgid "msgcmp Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4781
#, no-wrap
msgid "Invoking the @code{msgcmp} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4785
#, no-wrap
msgid "msgattrib Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4786
#, no-wrap
msgid "Invoking the @code{msgattrib} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4790
#, no-wrap
msgid "msgen Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4791
#, no-wrap
msgid "Invoking the @code{msgen} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4795
#, no-wrap
msgid "msgexec Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4796
#, no-wrap
msgid "Invoking the @code{msgexec} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:4800
#, no-wrap
msgid "Colorizing"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:274 original_texis/gettext.texi:4748 original_texis/gettext.texi:4801
#, no-wrap
msgid "Highlighting parts of PO files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:5202
#, no-wrap
msgid "Other tools"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:5203
#, no-wrap
msgid "Other tools for manipulating PO files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:5226
#, no-wrap
msgid "libgettextpo"
msgstr ""

#. type: section
#: original_texis/gettext.texi:272 original_texis/gettext.texi:4748 original_texis/gettext.texi:5227
#, no-wrap
msgid "Writing your own programs that process PO files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:4823
#, no-wrap
msgid "The --color option"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821
msgid "Triggering colorized output"
msgstr ""

#. type: node
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:4875
#, no-wrap
msgid "The TERM variable"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:4876
#, no-wrap
msgid "The environment variable @code{TERM}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:4911
#, no-wrap
msgid "The --style option"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:4912
#, no-wrap
msgid "The @code{--style} option"
msgstr ""

#. type: node
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:4951
#, no-wrap
msgid "Style rules"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:4952
#, no-wrap
msgid "Style rules for PO files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:5147
#, no-wrap
msgid "Customizing less"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:280 original_texis/gettext.texi:4821 original_texis/gettext.texi:5148
#, no-wrap
msgid "Customizing @code{less} for viewing PO files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:286 original_texis/gettext.texi:5363 original_texis/gettext.texi:5365
#, no-wrap
msgid "msgfmt Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:286 original_texis/gettext.texi:5363 original_texis/gettext.texi:5366
#, no-wrap
msgid "Invoking the @code{msgfmt} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:286 original_texis/gettext.texi:5363 original_texis/gettext.texi:5370
#, no-wrap
msgid "msgunfmt Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:286 original_texis/gettext.texi:5363 original_texis/gettext.texi:5371
#, no-wrap
msgid "Invoking the @code{msgunfmt} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:286 original_texis/gettext.texi:5363 original_texis/gettext.texi:5375
#, no-wrap
msgid "MO Files"
msgstr ""

#. type: section
#: original_texis/gettext.texi:286 original_texis/gettext.texi:5363 original_texis/gettext.texi:5376
#, no-wrap
msgid "The Format of GNU MO Files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:5558
#, no-wrap
msgid "catgets"
msgstr ""

#. type: section
#: original_texis/gettext.texi:295 original_texis/gettext.texi:297 original_texis/gettext.texi:5556 original_texis/gettext.texi:5559
#, no-wrap
msgid "About @code{catgets}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:5665 original_texis/gettext.texi:9474 original_texis/gettext.texi:10056 original_texis/gettext.texi:11246 original_texis/gettext.texi:12241 original_texis/gettext.texi:12244
#, no-wrap
msgid "gettext"
msgstr ""

#. type: section
#: original_texis/gettext.texi:295 original_texis/gettext.texi:302 original_texis/gettext.texi:5556 original_texis/gettext.texi:5666
#, no-wrap
msgid "About @code{gettext}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:6641
#, no-wrap
msgid "Comparison"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556
msgid "Comparing the two interfaces"
msgstr ""

#. type: node
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:6759
#, no-wrap
msgid "Using libintl.a"
msgstr ""

#. type: section
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:6760
#, no-wrap
msgid "Using libintl.a in own programs"
msgstr ""

#. type: node
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:6767
#, no-wrap
msgid "gettext grok"
msgstr ""

#. type: section
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:6768
#, no-wrap
msgid "Being a @code{gettext} grok"
msgstr ""

#. type: node
#: original_texis/gettext.texi:295 original_texis/gettext.texi:5556 original_texis/gettext.texi:6845
#, no-wrap
msgid "Temp Programmers"
msgstr ""

#. type: section
#: original_texis/gettext.texi:295 original_texis/gettext.texi:312 original_texis/gettext.texi:5556 original_texis/gettext.texi:6846
#, no-wrap
msgid "Temporary Notes for the Programmers Chapter"
msgstr ""

#. type: node
#: original_texis/gettext.texi:300 original_texis/gettext.texi:5586 original_texis/gettext.texi:5588
#, no-wrap
msgid "Interface to catgets"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:300 original_texis/gettext.texi:310 original_texis/gettext.texi:5586 original_texis/gettext.texi:5694
msgid "The interface"
msgstr ""

#. type: node
#: original_texis/gettext.texi:300 original_texis/gettext.texi:5586 original_texis/gettext.texi:5649
#, no-wrap
msgid "Problems with catgets"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:300 original_texis/gettext.texi:5586
msgid "Problems with the @code{catgets} interface?!"
msgstr ""

#. type: node
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:5696
#, no-wrap
msgid "Interface to gettext"
msgstr ""

#. type: node
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:5750
#, no-wrap
msgid "Ambiguities"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694
msgid "Solving ambiguities"
msgstr ""

#. type: node
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:5812
#, no-wrap
msgid "Locating Catalogs"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694
msgid "Locating message catalog files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:5849
#, no-wrap
msgid "Charset conversion"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694
msgid "How to request conversion to Unicode"
msgstr ""

#. type: node
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:5897
#, no-wrap
msgid "Contexts"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694
msgid "Solving ambiguities in GUI programs"
msgstr ""

#. type: node
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:6039
#, no-wrap
msgid "Plural forms"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694
msgid "Additional functions for handling plurals"
msgstr ""

#. type: node
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:6593
#, no-wrap
msgid "Optimized gettext"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:310 original_texis/gettext.texi:5694 original_texis/gettext.texi:6594
#, no-wrap
msgid "Optimization of the *gettext functions"
msgstr ""

#. type: node
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6858
#, no-wrap
msgid "Temp Implementations"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6859
#, no-wrap
msgid "Temporary - Two Possible Implementations"
msgstr ""

#. type: node
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6883
#, no-wrap
msgid "Temp catgets"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6884
#, no-wrap
msgid "Temporary - About @code{catgets}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6917
#, no-wrap
msgid "Temp WSI"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6918
#, no-wrap
msgid "Temporary - Why a single implementation"
msgstr ""

#. type: node
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6953
#, no-wrap
msgid "Temp Notes"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:317 original_texis/gettext.texi:6856 original_texis/gettext.texi:6954
#, no-wrap
msgid "Temporary - Notes"
msgstr ""

#. type: node
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:6979
#, no-wrap
msgid "Trans Intro 0"
msgstr ""

#. type: section
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:6980
#, no-wrap
msgid "Introduction 0"
msgstr ""

#. type: node
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:7043
#, no-wrap
msgid "Trans Intro 1"
msgstr ""

#. type: section
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:7044
#, no-wrap
msgid "Introduction 1"
msgstr ""

#. type: section
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:7083 original_texis/gettext.texi:7084
#, no-wrap
msgid "Discussions"
msgstr ""

#. type: section
#: original_texis/gettext.texi:327 original_texis/gettext.texi:329 original_texis/gettext.texi:6977 original_texis/gettext.texi:7160 original_texis/gettext.texi:7161
#, no-wrap
msgid "Organization"
msgstr ""

#. type: section
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:7361 original_texis/gettext.texi:7362
#, no-wrap
msgid "Information Flow"
msgstr ""

#. type: section
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:7402 original_texis/gettext.texi:7403
#, no-wrap
msgid "Translating plural forms"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977
msgid "How to fill in @code{msgstr[0]}, @code{msgstr[1]}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977 original_texis/gettext.texi:7499
#, no-wrap
msgid "Prioritizing messages"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:327 original_texis/gettext.texi:6977
msgid "How to find which messages to translate first"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:333 original_texis/gettext.texi:7201 original_texis/gettext.texi:7203 original_texis/gettext.texi:7204
#, no-wrap
msgid "Central Coordination"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:333 original_texis/gettext.texi:335 original_texis/gettext.texi:7201 original_texis/gettext.texi:7223 original_texis/gettext.texi:7224
#, no-wrap
msgid "National Teams"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:333 original_texis/gettext.texi:7201 original_texis/gettext.texi:7321 original_texis/gettext.texi:7322
#, no-wrap
msgid "Mailing Lists"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:338 original_texis/gettext.texi:7273 original_texis/gettext.texi:7275 original_texis/gettext.texi:7276
#, no-wrap
msgid "Sub-Cultures"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:338 original_texis/gettext.texi:7273 original_texis/gettext.texi:7292 original_texis/gettext.texi:7293
#, no-wrap
msgid "Organizational Ideas"
msgstr ""

#. type: node
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:7650
#, no-wrap
msgid "Flat and Non-Flat"
msgstr ""

#. type: section
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:7651
#, no-wrap
msgid "Flat or Non-Flat Directory Structures"
msgstr ""

#. type: node
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:7676
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: section
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:7677
#, no-wrap
msgid "Prerequisite Works"
msgstr ""

#. type: node
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:7760
#, no-wrap
msgid "gettextize Invocation"
msgstr ""

#. type: section
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:7761
#, no-wrap
msgid "Invoking the @code{gettextize} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:7765
#, no-wrap
msgid "Adjusting Files"
msgstr ""

#. type: section
#: original_texis/gettext.texi:348 original_texis/gettext.texi:350 original_texis/gettext.texi:7648 original_texis/gettext.texi:7766
#, no-wrap
msgid "Files You Must Create or Alter"
msgstr ""

#. type: node
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:8375
#, no-wrap
msgid "autoconf macros"
msgstr ""

#. type: section
#: original_texis/gettext.texi:348 original_texis/gettext.texi:365 original_texis/gettext.texi:7648 original_texis/gettext.texi:8376
#, no-wrap
msgid "Autoconf macros for use in @file{configure.ac}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:8597
#, no-wrap
msgid "Version Control Issues"
msgstr ""

#. type: node
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:8785
#, no-wrap
msgid "Release Management"
msgstr ""

#. type: section
#: original_texis/gettext.texi:348 original_texis/gettext.texi:7648 original_texis/gettext.texi:8786
#, no-wrap
msgid "Creating a Distribution Tarball"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7799
#, no-wrap
msgid "po/POTFILES.in"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7800
#, no-wrap
msgid "@file{POTFILES.in} in @file{po/}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7838
#, no-wrap
msgid "po/LINGUAS"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7839
#, no-wrap
msgid "@file{LINGUAS} in @file{po/}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7878
#, no-wrap
msgid "po/Makevars"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7879
#, no-wrap
msgid "@file{Makevars} in @file{po/}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7898
#, no-wrap
msgid "po/Rules-*"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7899
#, no-wrap
msgid "Extending @file{Makefile} in @file{po/}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7928
#, no-wrap
msgid "configure.ac"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7929
#, no-wrap
msgid "@file{configure.ac} at top level"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7992
#, no-wrap
msgid "config.guess"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:7993
#, no-wrap
msgid "@file{config.guess}, @file{config.sub} at top level"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8022
#, no-wrap
msgid "mkinstalldirs"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8023
#, no-wrap
msgid "@file{mkinstalldirs} at top level"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8030
#, no-wrap
msgid "aclocal"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8031
#, no-wrap
msgid "@file{aclocal.m4} at top level"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8082
#, no-wrap
msgid "config.h.in"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8083
#, no-wrap
msgid "@file{config.h.in} at top level"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8103
#, no-wrap
msgid "Makefile"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8104
#, no-wrap
msgid "@file{Makefile.in} at top level"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8167
#, no-wrap
msgid "src/Makefile"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8168
#, no-wrap
msgid "@file{Makefile.in} in @file{src/}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8315
#, no-wrap
msgid "lib/gettext.h"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:363 original_texis/gettext.texi:7797 original_texis/gettext.texi:8316
#, no-wrap
msgid "@file{gettext.h} in @file{lib/}"
msgstr ""

#. type: amindex
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8393 original_texis/gettext.texi:8396
#, no-wrap
msgid "AM_GNU_GETTEXT"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8394
#, no-wrap
msgid "AM_GNU_GETTEXT in @file{gettext.m4}"
msgstr ""

#. type: amindex
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8473 original_texis/gettext.texi:8476
#, no-wrap
msgid "AM_GNU_GETTEXT_VERSION"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8474
#, no-wrap
msgid "AM_GNU_GETTEXT_VERSION in @file{gettext.m4}"
msgstr ""

#. type: amindex
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8483 original_texis/gettext.texi:8486
#, no-wrap
msgid "AM_GNU_GETTEXT_NEED"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8484
#, no-wrap
msgid "AM_GNU_GETTEXT_NEED in @file{gettext.m4}"
msgstr ""

#. type: amindex
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8506 original_texis/gettext.texi:8509
#, no-wrap
msgid "AM_PO_SUBDIRS"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8507
#, no-wrap
msgid "AM_PO_SUBDIRS in @file{po.m4}"
msgstr ""

#. type: amindex
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8522 original_texis/gettext.texi:8525
#, no-wrap
msgid "AM_XGETTEXT_OPTION"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8523
#, no-wrap
msgid "AM_XGETTEXT_OPTION in @file{po.m4}"
msgstr ""

#. type: amindex
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8545 original_texis/gettext.texi:8548
#, no-wrap
msgid "AM_ICONV"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:372 original_texis/gettext.texi:8391 original_texis/gettext.texi:8546
#, no-wrap
msgid "AM_ICONV in @file{iconv.m4}"
msgstr ""

#. type: section
#: original_texis/gettext.texi:374 original_texis/gettext.texi:8598
#, no-wrap
msgid "Integrating with Version Control Systems"
msgstr ""

#. type: node
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8612
#, no-wrap
msgid "Distributed Development"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8613
#, no-wrap
msgid "Avoiding version mismatch in distributed development"
msgstr ""

#. type: node
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8651
#, no-wrap
msgid "Files under Version Control"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8652
#, no-wrap
msgid "Files to put under version control"
msgstr ""

#. type: node
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8731
#, no-wrap
msgid "Translations under Version Control"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8732
#, no-wrap
msgid "Put PO Files under Version Control"
msgstr ""

#. type: node
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8780
#, no-wrap
msgid "autopoint Invocation"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:379 original_texis/gettext.texi:8610 original_texis/gettext.texi:8781
#, no-wrap
msgid "Invoking the @code{autopoint} Program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:387 original_texis/gettext.texi:8847 original_texis/gettext.texi:8849
#, no-wrap
msgid "Language Implementors"
msgstr ""

#. type: section
#: original_texis/gettext.texi:387 original_texis/gettext.texi:8847 original_texis/gettext.texi:8850
#, no-wrap
msgid "The Language Implementor's View"
msgstr ""

#. type: node
#: original_texis/gettext.texi:387 original_texis/gettext.texi:8847 original_texis/gettext.texi:8948
#, no-wrap
msgid "Programmers for other Languages"
msgstr ""

#. type: node
#: original_texis/gettext.texi:387 original_texis/gettext.texi:8847 original_texis/gettext.texi:8958
#, no-wrap
msgid "Translators for other Languages"
msgstr ""

#. type: node
#: original_texis/gettext.texi:387 original_texis/gettext.texi:8847 original_texis/gettext.texi:9289
#, no-wrap
msgid "Maintainers for other Languages"
msgstr ""

#. type: node
#: original_texis/gettext.texi:387 original_texis/gettext.texi:8847 original_texis/gettext.texi:9307
#, no-wrap
msgid "List of Programming Languages"
msgstr ""

#. type: section
#: original_texis/gettext.texi:387 original_texis/gettext.texi:417 original_texis/gettext.texi:8847 original_texis/gettext.texi:9308
#, no-wrap
msgid "Individual Programming Languages"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1507 original_texis/gettext.texi:8993 original_texis/gettext.texi:8995
#, no-wrap
msgid "c-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:8996
#, no-wrap
msgid "C Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1525 original_texis/gettext.texi:8993 original_texis/gettext.texi:9040
#, no-wrap
msgid "objc-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9041
#, no-wrap
msgid "Objective C Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1531 original_texis/gettext.texi:8993 original_texis/gettext.texi:9047
#, no-wrap
msgid "sh-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9048
#, no-wrap
msgid "Shell Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1537 original_texis/gettext.texi:8993 original_texis/gettext.texi:9066
#, no-wrap
msgid "python-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9067
#, no-wrap
msgid "Python Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1549 original_texis/gettext.texi:8993 original_texis/gettext.texi:9084
#, no-wrap
msgid "lisp-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9085
#, no-wrap
msgid "Lisp Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1555 original_texis/gettext.texi:8993 original_texis/gettext.texi:9091
#, no-wrap
msgid "elisp-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9092
#, no-wrap
msgid "Emacs Lisp Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1561 original_texis/gettext.texi:8993 original_texis/gettext.texi:9100
#, no-wrap
msgid "librep-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9101
#, no-wrap
msgid "librep Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1567 original_texis/gettext.texi:8993 original_texis/gettext.texi:9108
#, no-wrap
msgid "scheme-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9109
#, no-wrap
msgid "Scheme Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1573 original_texis/gettext.texi:8993 original_texis/gettext.texi:9114
#, no-wrap
msgid "smalltalk-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9115
#, no-wrap
msgid "Smalltalk Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1579 original_texis/gettext.texi:8993 original_texis/gettext.texi:9124
#, no-wrap
msgid "java-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9125
#, no-wrap
msgid "Java Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1585 original_texis/gettext.texi:8993 original_texis/gettext.texi:9133
#, no-wrap
msgid "csharp-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9134
#, no-wrap
msgid "C# Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1591 original_texis/gettext.texi:8993 original_texis/gettext.texi:9140
#, no-wrap
msgid "awk-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9141
#, no-wrap
msgid "awk Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1597 original_texis/gettext.texi:8993 original_texis/gettext.texi:9147
#, no-wrap
msgid "object-pascal-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9148
#, no-wrap
msgid "Object Pascal Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1603 original_texis/gettext.texi:8993 original_texis/gettext.texi:9154
#, no-wrap
msgid "ycp-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9155
#, no-wrap
msgid "YCP Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1609 original_texis/gettext.texi:8993 original_texis/gettext.texi:9162
#, no-wrap
msgid "tcl-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9163
#, no-wrap
msgid "Tcl Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1615 original_texis/gettext.texi:8993 original_texis/gettext.texi:9168
#, no-wrap
msgid "perl-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9169
#, no-wrap
msgid "Perl Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1627 original_texis/gettext.texi:8993 original_texis/gettext.texi:9185
#, no-wrap
msgid "php-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9186
#, no-wrap
msgid "PHP Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1633 original_texis/gettext.texi:8993 original_texis/gettext.texi:9192
#, no-wrap
msgid "gcc-internal-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9193
#, no-wrap
msgid "GCC internal Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1639 original_texis/gettext.texi:8993 original_texis/gettext.texi:9210
#, no-wrap
msgid "gfc-internal-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9211
#, no-wrap
msgid "GFC internal Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1645 original_texis/gettext.texi:8993 original_texis/gettext.texi:9222
#, no-wrap
msgid "qt-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9223 original_texis/gettext.texi:9231
#, no-wrap
msgid "Qt Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1651 original_texis/gettext.texi:8993 original_texis/gettext.texi:9230
#, no-wrap
msgid "qt-plural-format"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993
msgid "Qt Plural Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1657 original_texis/gettext.texi:8993 original_texis/gettext.texi:9237
#, no-wrap
msgid "kde-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9238
#, no-wrap
msgid "KDE Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1663 original_texis/gettext.texi:8993 original_texis/gettext.texi:9257
#, no-wrap
msgid "boost-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9258
#, no-wrap
msgid "Boost Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1669 original_texis/gettext.texi:8993 original_texis/gettext.texi:9268
#, no-wrap
msgid "lua-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9269
#, no-wrap
msgid "Lua Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:415 original_texis/gettext.texi:1675 original_texis/gettext.texi:8993 original_texis/gettext.texi:9274
#, no-wrap
msgid "javascript-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:415 original_texis/gettext.texi:8993 original_texis/gettext.texi:9275
#, no-wrap
msgid "JavaScript Format Strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9390
#, no-wrap
msgid "C"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9391
#, no-wrap
msgid "C, C++, Objective C"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9453 original_texis/gettext.texi:9466
#, no-wrap
msgid "sh"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:444 original_texis/gettext.texi:9388 original_texis/gettext.texi:9454
#, no-wrap
msgid "sh - Shell Script"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9746 original_texis/gettext.texi:9748
#, no-wrap
msgid "bash"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9747
#, no-wrap
msgid "bash - Bourne-Again Shell Script"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9785 original_texis/gettext.texi:9786 original_texis/gettext.texi:9787
#, no-wrap
msgid "Python"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9875 original_texis/gettext.texi:9877
#, no-wrap
msgid "Common Lisp"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9876
#, no-wrap
msgid "GNU clisp - Common Lisp"
msgstr ""

#. type: node
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9930
#, no-wrap
msgid "clisp C"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9931
#, no-wrap
msgid "GNU clisp C sources"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:9983 original_texis/gettext.texi:9984 original_texis/gettext.texi:9985
#, no-wrap
msgid "Emacs Lisp"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10034 original_texis/gettext.texi:10035
#, no-wrap
msgid "librep"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10087 original_texis/gettext.texi:10089
#, no-wrap
msgid "Scheme"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10088
#, no-wrap
msgid "GNU guile - Scheme"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10143 original_texis/gettext.texi:10145
#, no-wrap
msgid "Smalltalk"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10144
#, no-wrap
msgid "GNU Smalltalk"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10199 original_texis/gettext.texi:10200 original_texis/gettext.texi:10201
#, no-wrap
msgid "Java"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10398 original_texis/gettext.texi:10399 original_texis/gettext.texi:10400
#, no-wrap
msgid "C#"
msgstr ""

#. type: table
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10664 original_texis/gettext.texi:10667 original_texis/gettext.texi:10675
#, no-wrap
msgid "gawk"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10665
#, no-wrap
msgid "GNU awk"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10722 original_texis/gettext.texi:10724
#, no-wrap
msgid "Pascal"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10723
#, no-wrap
msgid "Pascal - Free Pascal Compiler"
msgstr ""

#. type: node
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10784
#, no-wrap
msgid "wxWidgets"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10785
#, no-wrap
msgid "wxWidgets library"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10837 original_texis/gettext.texi:10839
#, no-wrap
msgid "YCP"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10838
#, no-wrap
msgid "YCP - YaST2 scripting language"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10891 original_texis/gettext.texi:10893
#, no-wrap
msgid "Tcl"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:10892
#, no-wrap
msgid "Tcl - Tk's scripting language"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:456 original_texis/gettext.texi:9388 original_texis/gettext.texi:10958 original_texis/gettext.texi:10959 original_texis/gettext.texi:10960
#, no-wrap
msgid "Perl"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:11825 original_texis/gettext.texi:11827
#, no-wrap
msgid "PHP"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:11826
#, no-wrap
msgid "PHP Hypertext Preprocessor"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:11879 original_texis/gettext.texi:11880 original_texis/gettext.texi:11881
#, no-wrap
msgid "Pike"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:11930 original_texis/gettext.texi:11932
#, no-wrap
msgid "GCC-source"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:11931
#, no-wrap
msgid "GNU Compiler Collection sources"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:11982 original_texis/gettext.texi:11983
#, no-wrap
msgid "Lua"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:12053 original_texis/gettext.texi:12054
#, no-wrap
msgid "JavaScript"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:442 original_texis/gettext.texi:9388 original_texis/gettext.texi:12112 original_texis/gettext.texi:12113
#, no-wrap
msgid "Vala"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9524
#, no-wrap
msgid "Preparing Shell Scripts"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9525
#, no-wrap
msgid "Preparing Shell Scripts for Internationalization"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9643
#, no-wrap
msgid "gettext.sh"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9644
#, no-wrap
msgid "Contents of @code{gettext.sh}"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9667
#, no-wrap
msgid "gettext Invocation"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9668
#, no-wrap
msgid "Invoking the @code{gettext} program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9676
#, no-wrap
msgid "ngettext Invocation"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9677
#, no-wrap
msgid "Invoking the @code{ngettext} program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9685
#, no-wrap
msgid "envsubst Invocation"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9686
#, no-wrap
msgid "Invoking the @code{envsubst} program"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9690
#, no-wrap
msgid "eval_gettext Invocation"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9691
#, no-wrap
msgid "Invoking the @code{eval_gettext} function"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9703
#, no-wrap
msgid "eval_ngettext Invocation"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9704
#, no-wrap
msgid "Invoking the @code{eval_ngettext} function"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9717
#, no-wrap
msgid "eval_pgettext Invocation"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9718
#, no-wrap
msgid "Invoking the @code{eval_pgettext} function"
msgstr ""

#. type: node
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9731
#, no-wrap
msgid "eval_npgettext Invocation"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:454 original_texis/gettext.texi:9522 original_texis/gettext.texi:9732
#, no-wrap
msgid "Invoking the @code{eval_npgettext} function"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11078
#, no-wrap
msgid "General Problems"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11079
#, no-wrap
msgid "General Problems Parsing Perl Code"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11236
#, no-wrap
msgid "Default Keywords"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076
msgid "Which Keywords Will xgettext Look For?"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11310
#, no-wrap
msgid "Special Keywords"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11311
#, no-wrap
msgid "How to Extract Hash Keys"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11350
#, no-wrap
msgid "Quote-like Expressions"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11351
#, no-wrap
msgid "What are Strings And Quote-like Expressions?"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11434
#, no-wrap
msgid "Interpolation I"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076
msgid "Invalid String Interpolation"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11541
#, no-wrap
msgid "Interpolation II"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076
msgid "Valid String Interpolation"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11608
#, no-wrap
msgid "Parentheses"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11609
#, no-wrap
msgid "When To Use Parentheses"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11650
#, no-wrap
msgid "Long Lines"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11651
#, no-wrap
msgid "How To Grok with Long Lines"
msgstr ""

#. type: node
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076 original_texis/gettext.texi:11712
#, no-wrap
msgid "Perl Pitfalls"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:466 original_texis/gettext.texi:11076
msgid "Bugs, Pitfalls, and Things That Do Not Work"
msgstr ""

#. type: node
#: original_texis/gettext.texi:471 original_texis/gettext.texi:12218 original_texis/gettext.texi:12220
#, no-wrap
msgid "Internationalizable Data"
msgstr ""

#. type: section
#: original_texis/gettext.texi:471 original_texis/gettext.texi:473 original_texis/gettext.texi:12218 original_texis/gettext.texi:12221
#, no-wrap
msgid "Internationalizable Data Formats"
msgstr ""

#. type: node
#: original_texis/gettext.texi:471 original_texis/gettext.texi:12218 original_texis/gettext.texi:12511
#, no-wrap
msgid "Localized Data"
msgstr ""

#. type: section
#: original_texis/gettext.texi:471 original_texis/gettext.texi:482 original_texis/gettext.texi:12218 original_texis/gettext.texi:12512
#, no-wrap
msgid "Localized Data Formats"
msgstr ""

#. type: node
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12235
#, no-wrap
msgid "POT"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12236
#, no-wrap
msgid "POT - Portable Object Template"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12252 original_texis/gettext.texi:12254
#, no-wrap
msgid "RST"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12253
#, no-wrap
msgid "Resource String Table"
msgstr ""

#. type: node
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12275
#, no-wrap
msgid "Glade"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12276
#, no-wrap
msgid "Glade - GNOME user interface description"
msgstr ""

#. type: node
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12292
#, no-wrap
msgid "GSettings"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12293
#, no-wrap
msgid "GSettings - GNOME user configuration schema"
msgstr ""

#. type: node
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12309
#, no-wrap
msgid "AppData"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12310
#, no-wrap
msgid "AppData - freedesktop.org application description"
msgstr ""

#. type: node
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12329
#, no-wrap
msgid "Preparing ITS Rules"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:480 original_texis/gettext.texi:12233 original_texis/gettext.texi:12330
#, no-wrap
msgid "Preparing Rules for XML Internationalization"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:487 original_texis/gettext.texi:489 original_texis/gettext.texi:12522 original_texis/gettext.texi:12524 original_texis/gettext.texi:12525
#, no-wrap
msgid "Editable Message Catalogs"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:487 original_texis/gettext.texi:495 original_texis/gettext.texi:12522 original_texis/gettext.texi:12564 original_texis/gettext.texi:12565
#, no-wrap
msgid "Compiled Message Catalogs"
msgstr ""

#. type: node
#: original_texis/gettext.texi:487 original_texis/gettext.texi:12522 original_texis/gettext.texi:12642
#, no-wrap
msgid "Desktop Entry"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:487 original_texis/gettext.texi:12522 original_texis/gettext.texi:12643
#, no-wrap
msgid "Desktop Entry files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:487 original_texis/gettext.texi:12522 original_texis/gettext.texi:12654
#, no-wrap
msgid "XML"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:487 original_texis/gettext.texi:12522 original_texis/gettext.texi:12655
#, no-wrap
msgid "XML files"
msgstr ""

#. type: node
#: original_texis/gettext.texi:493 original_texis/gettext.texi:12538 original_texis/gettext.texi:12540
#, no-wrap
msgid "PO"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:493 original_texis/gettext.texi:12538 original_texis/gettext.texi:12541
#, no-wrap
msgid "PO - Portable Object"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:493 original_texis/gettext.texi:12538 original_texis/gettext.texi:12548 original_texis/gettext.texi:12549
#, no-wrap
msgid "Java .properties"
msgstr ""

#. type: node
#: original_texis/gettext.texi:493 original_texis/gettext.texi:12538 original_texis/gettext.texi:12556
#, no-wrap
msgid "GNUstep .strings"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:493 original_texis/gettext.texi:12538 original_texis/gettext.texi:12557
#, no-wrap
msgid "NeXTstep/GNUstep .strings"
msgstr ""

#. type: node
#: original_texis/gettext.texi:502 original_texis/gettext.texi:12577 original_texis/gettext.texi:12579
#, no-wrap
msgid "MO"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:502 original_texis/gettext.texi:12577 original_texis/gettext.texi:12580
#, no-wrap
msgid "MO - Machine Object"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:502 original_texis/gettext.texi:12577 original_texis/gettext.texi:12589 original_texis/gettext.texi:12590
#, no-wrap
msgid "Java ResourceBundle"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:502 original_texis/gettext.texi:12577 original_texis/gettext.texi:12600 original_texis/gettext.texi:12601
#, no-wrap
msgid "C# Satellite Assembly"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:502 original_texis/gettext.texi:12577 original_texis/gettext.texi:12610 original_texis/gettext.texi:12611
#, no-wrap
msgid "C# Resource"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:502 original_texis/gettext.texi:12577 original_texis/gettext.texi:12620 original_texis/gettext.texi:12621
#, no-wrap
msgid "Tcl message catalog"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:502 original_texis/gettext.texi:12577 original_texis/gettext.texi:12631 original_texis/gettext.texi:12632
#, no-wrap
msgid "Qt message catalog"
msgstr ""

#. type: node
#: original_texis/gettext.texi:508 original_texis/gettext.texi:12672 original_texis/gettext.texi:12674
#, no-wrap
msgid "History"
msgstr ""

#. type: section
#: original_texis/gettext.texi:508 original_texis/gettext.texi:12672 original_texis/gettext.texi:12675
#, no-wrap
msgid "History of GNU @code{gettext}"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:508 original_texis/gettext.texi:12672
msgid "The original ABOUT-NLS"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:508 original_texis/gettext.texi:12672
msgid "Historical introduction"
msgstr ""

#. type: node
#: original_texis/gettext.texi:508 original_texis/gettext.texi:12672 original_texis/gettext.texi:12755
#, no-wrap
msgid "References"
msgstr ""

#. type: section
#: original_texis/gettext.texi:508 original_texis/gettext.texi:12672 original_texis/gettext.texi:12756
#, no-wrap
msgid "Related Readings"
msgstr ""

#. type: appendixsec
#: original_texis/gettext.texi:513 original_texis/gettext.texi:12817 original_texis/gettext.texi:12819 original_texis/gettext.texi:12820
#, no-wrap
msgid "Usual Language Codes"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:513 original_texis/gettext.texi:12817
msgid "Two-letter ISO 639 language codes"
msgstr ""

#. type: appendixsec
#: original_texis/gettext.texi:513 original_texis/gettext.texi:12817 original_texis/gettext.texi:12829 original_texis/gettext.texi:12830
#, no-wrap
msgid "Rare Language Codes"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:513 original_texis/gettext.texi:12817
msgid "Three-letter ISO 639 language codes"
msgstr ""

#. type: node
#: original_texis/gettext.texi:519 original_texis/gettext.texi:12895 original_texis/gettext.texi:12898
#, no-wrap
msgid "GNU GPL"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:519 original_texis/gettext.texi:12895
msgid "GNU General Public License"
msgstr ""

#. type: node
#: original_texis/gettext.texi:519 original_texis/gettext.texi:12895 original_texis/gettext.texi:12904
#, no-wrap
msgid "GNU LGPL"
msgstr ""

#. type: menuentry
#: original_texis/gettext.texi:519 original_texis/gettext.texi:12895
msgid "GNU Lesser General Public License"
msgstr ""

#. type: node
#: original_texis/gettext.texi:519 original_texis/gettext.texi:12895 original_texis/gettext.texi:12910
#, no-wrap
msgid "GNU FDL"
msgstr ""

#. type: appendixsec
#: original_texis/gettext.texi:519 original_texis/gettext.texi:12895 original_texis/gettext.texi:12911
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:537
msgid ""
"This chapter explains the goals sought in the creation of GNU @code{gettext} "
"and the free Translation Project.  Then, it explains a few broad concepts "
"around Native Language Support, and positions message translation with "
"regard to other aspects of national and cultural variance, as they apply to "
"programs.  It also surveys those files used to convey the translations.  It "
"explains how the various tools interact in the initial generation of these "
"files, and later, how the maintenance cycle should usually operate."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:538
#, no-wrap
msgid "sex"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:539
#, no-wrap
msgid "he, she, and they"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:540
#, no-wrap
msgid "she, he, and they"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:549
msgid ""
"In this manual, we use @emph{he} when speaking of the programmer or "
"maintainer, @emph{she} when speaking of the translator, and @emph{they} when "
"speaking of the installers or end users of the translated program.  This is "
"only a convenience for clarifying the documentation.  It is "
"@emph{absolutely} not meant to imply that some roles are more appropriate to "
"males or females.  Besides, as you might guess, GNU @code{gettext} is meant "
"to be useful for people using computers, whatever their sex, race, religion "
"or nationality!"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:550
#, no-wrap
msgid "bug report address"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:552
msgid "Please send suggestions and corrections to:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:557
#, no-wrap
msgid ""
"@r{Internet address:}\n"
"    bug-gnu-gettext@@gnu.org\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:562
msgid "Please include the manual's edition number and update date in your messages."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:584
msgid ""
"Usually, programs are written and documented in English, and use English at "
"execution time to interact with users.  This is true not only of GNU "
"software, but also of a great deal of proprietary and free software.  Using "
"a common language is quite handy for communication between developers, "
"maintainers and users from all countries.  On the other hand, most people "
"are less comfortable with English than with their own native language, and "
"would prefer to use their mother tongue for day to day's work, as far as "
"possible.  Many would simply @emph{love} to see their computer screen "
"showing a lot less of English, and far more of their own language."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:585
#, no-wrap
msgid "Translation Project"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:593
msgid ""
"However, to many people, this dream might appear so far fetched that they "
"may believe it is not even worth spending time thinking about it.  They have "
"no confidence at all that the dream might ever become true.  Yet some have "
"not lost hope, and have organized themselves.  The Translation Project is a "
"formalization of this hope into a workable structure, which has a good "
"chance to get all of us nearer the achievement of a truly multi-lingual set "
"of programs."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:601
msgid ""
"GNU @code{gettext} is an important step for the Translation Project, as it "
"is an asset on which we may build many other steps.  This package offers to "
"programmers, translators and even users, a well integrated set of tools and "
"documentation.  Specifically, the GNU @code{gettext} utilities are a set of "
"tools that provides a framework within which other free packages may produce "
"multi-lingual messages.  These tools include"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:606
msgid ""
"A set of conventions about how programs should be written to support message "
"catalogs."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:610
msgid ""
"A directory and file naming organization for the message catalogs "
"themselves."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:613
msgid "A runtime library supporting the retrieval of translated messages."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:617
msgid ""
"A few stand-alone programs to massage in various ways the sets of "
"translatable strings, or already translated strings."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:621
msgid ""
"A library supporting the parsing and creation of files containing translated "
"messages."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:627
msgid ""
"A special mode for Emacs@footnote{In this manual, all mentions of Emacs "
"refers to either GNU Emacs or to XEmacs, which people sometimes call FSF "
"Emacs and Lucid Emacs, respectively.} which helps preparing these sets and "
"bringing them up to date."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:634
msgid ""
"GNU @code{gettext} is designed to minimize the impact of "
"internationalization on program sources, keeping this impact as small and "
"hardly noticeable as possible.  Internationalization has better chances of "
"succeeding if it is very light weighted, or at least, appear to be so, when "
"looking at program sources."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:644
msgid ""
"The Translation Project also uses the GNU @code{gettext} distribution as a "
"vehicle for documenting its structure and methods.  This goes beyond the "
"strict technicalities of documenting the GNU @code{gettext} proper.  By so "
"doing, translators will find in a single place, as far as possible, all they "
"need to know for properly doing their translating work.  Also, this "
"supplemental documentation might also help programmers, and even curious "
"users, in understanding how GNU @code{gettext} is related to the remainder "
"of the Translation Project, and consequently, have a glimpse at the "
"@emph{big picture}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:648
#, no-wrap
msgid "i18n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:649
#, no-wrap
msgid "l10n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:660
msgid ""
"Two long words appear all the time when we discuss support of native "
"language in programs, and these words have a precise meaning, worth being "
"explained here, once and for all in this document.  The words are "
"@emph{internationalization} and @emph{localization}.  Many people, tired of "
"writing these long words over and over again, took the habit of writing "
"@dfn{i18n} and @dfn{l10n} instead, quoting the first and last letter of each "
"word, and replacing the run of intermediate letters by a number merely "
"telling how many such letters there are.  But in this manual, in the sake of "
"clarity, we will patiently write the names in full, each time@dots{}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:661
#, no-wrap
msgid "internationalization"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:670
msgid ""
"By @dfn{internationalization}, one refers to the operation by which a "
"program, or a set of programs turned into a package, is made aware of and "
"able to support multiple languages.  This is a generalization process, by "
"which the programs are untied from calling only English strings or other "
"English specific habits, and connected to generic ways of doing the same, "
"instead.  Program developers may use various techniques to internationalize "
"their programs.  Some of these have been standardized.  GNU @code{gettext} "
"offers one of these standards.  @xref{Programmers}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:671
#, no-wrap
msgid "localization"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:686
msgid ""
"By @dfn{localization}, one means the operation by which, in a set of "
"programs already internationalized, one gives the program all needed "
"information so that it can adapt itself to handle its input and output in a "
"fashion which is correct for some native language and cultural habits.  This "
"is a particularisation process, by which generic methods already implemented "
"in an internationalized program are used in specific ways.  The programming "
"environment puts several functions to the programmers disposal which allow "
"this runtime configuration.  The formal description of specific set of "
"cultural habits for some country, together with all associated translations "
"targeted to the same native language, is called the @dfn{locale} for this "
"language or country.  Users achieve localization of programs by setting "
"proper values to special environment variables, prior to executing those "
"programs, identifying which locale should be used."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:696
msgid ""
"In fact, locale message support is only one component of the cultural data "
"that makes up a particular locale.  There are a whole host of routines and "
"functions provided to aid programmers in developing internationalized "
"software and which allow them to access the data stored in a particular "
"locale.  When someone presently refers to a particular locale, they are "
"obviously referring to the data stored within that particular locale.  "
"Similarly, if a programmer is referring to ``accessing the locale "
"routines'', they are referring to the complete suite of routines that access "
"all of the locale's information."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:697
#, no-wrap
msgid "NLS"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:698
#, no-wrap
msgid "Native Language Support"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:699
#, no-wrap
msgid "Natural Language Support"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:706
msgid ""
"One uses the expression @dfn{Native Language Support}, or merely NLS, for "
"speaking of the overall activity or feature encompassing both "
"internationalization and localization, allowing for multi-lingual "
"interactions in a program.  In a nutshell, one could say that "
"internationalization is the operation by which further localizations are "
"made possible."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:710
msgid ""
"Also, very roughly said, when it comes to multi-lingual messages, "
"internationalization is usually taken care of by programmers, and "
"localization is usually taken care of by translators."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:714
#, no-wrap
msgid "translation aspects"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:717
msgid ""
"For a totally multi-lingual distribution, there are many things to translate "
"beyond output messages."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:725
msgid ""
"As of today, GNU @code{gettext} offers a complete toolset for translating "
"messages output by C programs.  Perl scripts and shell scripts will also "
"need to be translated.  Even if there are today some hooks by which this can "
"be done, these hooks are not integrated as well as they should be."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:735
msgid ""
"Some programs, like @code{autoconf} or @code{bison}, are able to produce "
"other programs (or scripts).  Even if the generating programs themselves are "
"internationalized, the generated programs they produce may need "
"internationalization on their own, and this indirect internationalization "
"could be automated right from the generating program.  In fact, quite "
"usually, generating and generated programs could be internationalized "
"independently, as the effort needed is fairly orthogonal."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:744
msgid ""
"A few programs include textual tables which might need translation "
"themselves, independently of the strings contained in the program itself.  "
"For example, @w{RFC 1345} gives an English description for each character "
"which the @code{recode} program is able to reconstruct at execution.  Since "
"these descriptions are extracted from the RFC by mechanical means, "
"translating them properly would require a prior translation of the RFC "
"itself."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:749
msgid ""
"Almost all programs accept options, which are often worded out so to be "
"descriptive for the English readers; one might want to consider offering "
"translated versions for program options as well."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:760
msgid ""
"Many programs read, interpret, compile, or are somewhat driven by input "
"files which are texts containing keywords, identifiers, or replies which are "
"inherently translatable.  For example, one may want @code{gcc} to allow "
"diacriticized characters in identifiers or use translated keywords; @samp{rm "
"-i} might accept something else than @samp{y} or @samp{n} for replies, etc.  "
"Even if the program will eventually make most of its output in the foreign "
"languages, one has to decide whether the input syntax, option values, etc., "
"are to be localized or not."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:766
msgid ""
"The manual accompanying a package, as well as all documentation files in the "
"distribution, could surely be translated, too.  Translating a manual, with "
"the intent of later keeping up with updates, is a major undertaking in "
"itself, generally."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:778
msgid ""
"As we already stressed, translation is only one aspect of locales.  Other "
"internationalization aspects are system services and are handled in GNU "
"@code{libc}.  There are many attributes that are needed to define a "
"country's cultural conventions.  These attributes include beside the "
"country's native language, the formatting of the date and time, the "
"representation of numbers, the symbols for currency, etc.  These local "
"@dfn{rules} are termed the country's locale.  The locale represents the "
"knowledge needed to support the country's native attributes."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:779 original_texis/gettext.texi:855
#, no-wrap
msgid "locale categories"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:784
msgid ""
"There are a few major areas which may vary between countries and hence, "
"define what a locale must describe.  The following list helps putting "
"multi-lingual messages into the proper context of other tasks related to "
"locales.  See the GNU @code{libc} manual for details."
msgstr ""

#. type: item
#: original_texis/gettext.texi:787
#, no-wrap
msgid "Characters and Codesets"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:788
#, no-wrap
msgid "codeset"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:789
#, no-wrap
msgid "encoding"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:790
#, no-wrap
msgid "character encoding"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:791 original_texis/gettext.texi:1896 original_texis/gettext.texi:1932
#, no-wrap
msgid "locale category, LC_CTYPE"
msgstr ""

#. type: table
#: original_texis/gettext.texi:803
msgid ""
"The codeset most commonly used through out the USA and most English speaking "
"parts of the world is the ASCII codeset.  However, there are many characters "
"needed by various locales that are not found within this codeset.  The 8-bit "
"@w{ISO 8859-1} code set has most of the special characters needed to handle "
"the major European languages.  However, in many cases, choosing @w{ISO "
"8859-1} is nevertheless not adequate: it doesn't even handle the major "
"European currency.  Hence each locale will need to specify which codeset "
"they need to use and will need to have the appropriate character handling "
"routines to cope with the codeset."
msgstr ""

#. type: item
#: original_texis/gettext.texi:804
#, no-wrap
msgid "Currency"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:805
#, no-wrap
msgid "currency symbols"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:806 original_texis/gettext.texi:1934
#, no-wrap
msgid "locale category, LC_MONETARY"
msgstr ""

#. type: table
#: original_texis/gettext.texi:811
msgid ""
"The symbols used vary from country to country as does the position used by "
"the symbol.  Software needs to be able to transparently display currency "
"figures in the native mode for each locale."
msgstr ""

#. type: item
#: original_texis/gettext.texi:812
#, no-wrap
msgid "Dates"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:813
#, no-wrap
msgid "date format"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:814 original_texis/gettext.texi:1936
#, no-wrap
msgid "locale category, LC_TIME"
msgstr ""

#. type: table
#: original_texis/gettext.texi:819
msgid ""
"The format of date varies between locales.  For example, Christmas day in "
"1994 is written as 12/25/94 in the USA and as 25/12/94 in Australia.  Other "
"countries might use @w{ISO 8601} dates, etc."
msgstr ""

#. type: table
#: original_texis/gettext.texi:824
msgid ""
"Time of the day may be noted as @var{hh}:@var{mm}, @var{hh}.@var{mm}, or "
"otherwise.  Some locales require time to be specified in 24-hour mode rather "
"than as AM or PM.  Further, the nature and yearly extent of the Daylight "
"Saving correction vary widely between countries."
msgstr ""

#. type: item
#: original_texis/gettext.texi:825
#, no-wrap
msgid "Numbers"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:826
#, no-wrap
msgid "number format"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:827 original_texis/gettext.texi:1935
#, no-wrap
msgid "locale category, LC_NUMERIC"
msgstr ""

#. type: table
#: original_texis/gettext.texi:832
msgid ""
"Numbers can be represented differently in different locales.  For example, "
"the following numbers are all written correctly for their respective "
"locales:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:838
#, no-wrap
msgid ""
"12,345.67       English\n"
"12.345,67       German\n"
" 12345,67       French\n"
"1,2345.67       Asia\n"
msgstr ""

#. type: table
#: original_texis/gettext.texi:843
msgid ""
"Some programs could go further and use different unit systems, like English "
"units or Metric units, or even take into account variants about how numbers "
"are spelled in full."
msgstr ""

#. type: item
#: original_texis/gettext.texi:844
#, no-wrap
msgid "Messages"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:845
#, no-wrap
msgid "messages"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:846 original_texis/gettext.texi:1937
#, no-wrap
msgid "locale category, LC_MESSAGES"
msgstr ""

#. type: table
#: original_texis/gettext.texi:852
msgid ""
"The most obvious area is the language support within a locale.  This is "
"where GNU @code{gettext} provides the means for developers and users to "
"easily change the language that the software uses to communicate to the "
"user."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:865
msgid ""
"These areas of cultural conventions are called @emph{locale categories}.  It "
"is an unfortunate term; @emph{locale aspects} or @emph{locale feature "
"categories} would be a better term, because each ``locale category'' "
"describes an area or task that requires localization.  The concrete data "
"that describes the cultural conventions for such an area and for a "
"particular culture is also called a @emph{locale category}.  In this sense, "
"a locale is composed of several locale categories: the locale category "
"describing the codeset, the locale category describing the formatting of "
"numbers, the locale category containing the translated messages, and so on."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:866 original_texis/gettext.texi:1014 original_texis/gettext.texi:3110
#, no-wrap
msgid "Linux"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:872
msgid ""
"Components of locale outside of message handling are standardized in the ISO "
"C standard and the POSIX:2001 standard (also known as the SUSV3 "
"specification).  GNU @code{libc} fully implements this, and most other "
"modern systems provide a more or less reasonable support for at least some "
"of the missing components."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:876
#, no-wrap
msgid "files, @file{.po} and @file{.mo}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:882
msgid ""
"The letters PO in @file{.po} files means Portable Object, to distinguish it "
"from @file{.mo} files, where MO stands for Machine Object.  This paradigm, "
"as well as the PO file format, is inspired by the NLS standard developed by "
"Uniforum, and first implemented by Sun in their Solaris system."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:897
msgid ""
"PO files are meant to be read and edited by humans, and associate each "
"original, translatable string of a given package with its translation in a "
"particular target language.  A single PO file is dedicated to a single "
"target language.  If a package supports many languages, there is one such PO "
"file per language supported, and each package has its own set of PO files.  "
"These PO files are best created by the @code{xgettext} program, and later "
"updated or refreshed through the @code{msgmerge} program.  Program "
"@code{xgettext} extracts all marked messages from a set of C files and "
"initializes a PO file with empty translations.  Program @code{msgmerge} "
"takes care of adjusting PO files between releases of the corresponding "
"sources, commenting obsolete entries, initializing new ones, and updating "
"all source line references.  Files ending with @file{.pot} are kind of base "
"translation files found in distributions, in PO file format."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:907
msgid ""
"MO files are meant to be read by programs, and are binary in nature.  A few "
"systems already offer tools for creating and handling MO files as part of "
"the Native Language Support coming with the system, but the format of these "
"MO files is often different from system to system, and non-portable.  The "
"tools already provided with these systems don't support all the features of "
"GNU @code{gettext}.  Therefore GNU @code{gettext} uses its own format for MO "
"files.  Files ending with @file{.gmo} are really MO files, when it is known "
"that these files use the GNU format."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:911
#, no-wrap
msgid "overview of @code{gettext}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:912
#, no-wrap
msgid "big picture"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:913
#, no-wrap
msgid "tutorial of @code{gettext} usage"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:920
msgid ""
"The following diagram summarizes the relation between the files handled by "
"GNU @code{gettext} and the tools acting on these files.  It is followed by "
"somewhat detailed explanations, which you should read while keeping an eye "
"on the diagram.  Having a clear understanding of these interrelations will "
"surely help programmers, translators and maintainers."
msgstr ""

#. type: group
#: original_texis/gettext.texi:944
#, no-wrap
msgid ""
"Original C Sources ───> Preparation ───> Marked C Sources ───╮\n"
"                                                             │\n"
"              ╭─────────<─── GNU gettext Library             │\n"
"╭─── make <───┤                                              │\n"
"│             ╰─────────<────────────────────┬───────────────╯\n"
"│                                            │\n"
"│   ╭─────<─── PACKAGE.pot <─── xgettext <───╯   ╭───<─── PO Compendium\n"
"│   │                                            │              ↑\n"
"│   │                                            ╰───╮          │\n"
"│   ╰───╮                                            ├───> PO editor ───╮\n"
"│       ├────> msgmerge ──────> LANG.po ────>────────╯                  │\n"
"│   ╭───╯                                                               │\n"
"│   │                                                                   │\n"
"│   ╰─────────────<───────────────╮                                     │\n"
"│                                 ├─── New LANG.po <────────────────────╯\n"
"│   ╭─── LANG.gmo <─── msgfmt <───╯\n"
"│   │\n"
"│   ╰───> install ───> /.../LANG/PACKAGE.mo ───╮\n"
"│                                              ├───> \"Hello world!\"\n"
"╰───────> install ───> /.../bin/PROGRAM ───────╯\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:970
#, no-wrap
msgid ""
"Original C Sources ---> Preparation ---> Marked C Sources ---.\n"
"                                                             |\n"
"              .---------<--- GNU gettext Library             |\n"
".--- make <---+                                              |\n"
"|             `---------<--------------------+---------------'\n"
"|                                            |\n"
"|   .-----<--- PACKAGE.pot <--- xgettext <---'   .---<--- PO Compendium\n"
"|   |                                            |              ^\n"
"|   |                                            `---.          |\n"
"|   `---.                                            +---> PO editor ---.\n"
"|       +----> msgmerge ------> LANG.po ---->--------'                  |\n"
"|   .---'                                                               |\n"
"|   |                                                                   |\n"
"|   `-------------<---------------.                                     |\n"
"|                                 +--- New LANG.po <--------------------'\n"
"|   .--- LANG.gmo <--- msgfmt <---'\n"
"|   |\n"
"|   `---> install ---> /.../LANG/PACKAGE.mo ---.\n"
"|                                              +---> \"Hello world!\"\n"
"`-------> install ---> /.../bin/PROGRAM -------'\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:974
#, no-wrap
msgid "marking translatable strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:983
msgid ""
"As a programmer, the first step to bringing GNU @code{gettext} into your "
"package is identifying, right in the C sources, those strings which are "
"meant to be translatable, and those which are untranslatable.  This tedious "
"job can be done a little more comfortably using emacs PO mode, but you can "
"use any means familiar to you for modifying your C sources.  Beside this "
"some other simple, standard changes are needed to properly initialize the "
"translation library.  @xref{Sources}, for more information about all this."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:988
msgid ""
"For newly written software the strings of course can and should be marked "
"while writing it.  The @code{gettext} approach makes this very easy.  Simply "
"put the following lines at the beginning of each file or in a central header "
"file:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:995
#, no-wrap
msgid ""
"#define _(String) (String)\n"
"#define N_(String) String\n"
"#define textdomain(Domain)\n"
"#define bindtextdomain(Package, Directory)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1002
msgid ""
"Doing this allows you to prepare the sources for internationalization.  "
"Later when you feel ready for the step to use the @code{gettext} library "
"simply replace these definitions by the following:"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1003 original_texis/gettext.texi:1857 original_texis/gettext.texi:6683 original_texis/gettext.texi:8346
#, no-wrap
msgid "include file @file{libintl.h}"
msgstr ""

#. type: group
#: original_texis/gettext.texi:1010
#, no-wrap
msgid ""
"#include <libintl.h>\n"
"#define _(String) gettext (String)\n"
"#define gettext_noop(String) String\n"
"#define N_(String) gettext_noop (String)\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1013
#, no-wrap
msgid "link with @file{libintl}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1020
msgid ""
"and link against @file{libintl.a} or @file{libintl.so}.  Note that on GNU "
"systems, you don't need to link with @code{libintl} because the "
"@code{gettext} library functions are already contained in GNU libc.  That is "
"all you have to change."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1021
#, no-wrap
msgid "template PO file"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1022
#, no-wrap
msgid "files, @file{.pot}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1036
msgid ""
"Once the C sources have been modified, the @code{xgettext} program is used "
"to find and extract all translatable strings, and create a PO template file "
"out of all these.  This @file{@var{package}.pot} file contains all original "
"program strings.  It has sets of pointers to exactly where in C sources each "
"string is used.  All translations are set to empty.  The letter @code{t} in "
"@file{.pot} marks this as a Template PO file, not yet oriented towards any "
"particular language.  @xref{xgettext Invocation}, for more details about how "
"one calls the @code{xgettext} program.  If you are @emph{really} lazy, you "
"might be interested at working a lot more right away, and preparing the "
"whole distribution setup (@pxref{Maintainers}).  By doing so, you spare "
"yourself typing the @code{xgettext} command, as @code{make} should now "
"generate the proper things automatically for you!"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1041
msgid ""
"The first time through, there is no @file{@var{lang}.po} yet, so the "
"@code{msgmerge} step may be skipped and replaced by a mere copy of "
"@file{@var{package}.pot} to @file{@var{lang}.po}, where @var{lang} "
"represents the target language.  See @ref{Creating} for details."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1050
msgid ""
"Then comes the initial translation of messages.  Translation in itself is a "
"whole matter, still exclusively meant for humans, and whose complexity far "
"overwhelms the level of this manual.  Nevertheless, a few hints are given in "
"some other chapter of this manual (@pxref{Translators}).  You will also find "
"there indications about how to contact translating teams, or becoming part "
"of them, for sharing your translating concerns with others who target the "
"same native language."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1060
msgid ""
"While adding the translated messages into the @file{@var{lang}.po} PO file, "
"if you are not using one of the dedicated PO file editors (@pxref{Editing}), "
"you are on your own for ensuring that your efforts fully respect the PO file "
"format, and quoting conventions (@pxref{PO Files}).  This is surely not an "
"impossible task, as this is the way many people have handled PO files around "
"1995.  On the other hand, by using a PO file editor, most details of PO file "
"format are taken care of for you, but you have to acquire some familiarity "
"with PO file editor itself."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1066
msgid ""
"If some common translations have already been saved into a compendium PO "
"file, translators may use PO mode for initializing untranslated entries from "
"the compendium, and also save selected translations into the compendium, "
"updating it (@pxref{Compendium}).  Compendium files are meant to be "
"exchanged between members of a given translation team."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1076
msgid ""
"Programs, or packages of programs, are dynamic in nature: users write bug "
"reports and suggestion for improvements, maintainers react by modifying "
"programs in various ways.  The fact that a package has already been "
"internationalized should not make maintainers shy of adding new strings, or "
"modifying strings already translated.  They just do their job the best they "
"can.  For the Translation Project to work smoothly, it is important that "
"maintainers do not carry translation concerns on their already loaded "
"shoulders, and that translators be kept as free as possible of programming "
"concerns."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1085
msgid ""
"The only concern maintainers should have is carefully marking new strings as "
"translatable, when they should be, and do not otherwise worry about them "
"being translated, as this will come in proper time.  Consequently, when "
"programs and their strings are adjusted in various ways by maintainers, and "
"for matters usually unrelated to translation, @code{xgettext} would "
"construct @file{@var{package}.pot} files which are evolving over time, so "
"the translations carried by @file{@var{lang}.po} are slowly fading out of "
"date."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1086
#, no-wrap
msgid "evolution of packages"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1094
msgid ""
"It is important for translators (and even maintainers) to understand that "
"package translation is a continuous process in the lifetime of a package, "
"and not something which is done once and for all at the start.  After an "
"initial burst of translation activity for a given package, interventions are "
"needed once in a while, because here and there, translated entries become "
"obsolete, and new untranslated entries appear, needing translation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1107
msgid ""
"The @code{msgmerge} program has the purpose of refreshing an already "
"existing @file{@var{lang}.po} file, by comparing it with a newer "
"@file{@var{package}.pot} template file, extracted by @code{xgettext} out of "
"recent C sources.  The refreshing operation adjusts all references to C "
"source locations for strings, since these strings move as programs are "
"modified.  Also, @code{msgmerge} comments out as obsolete, in "
"@file{@var{lang}.po}, those already translated entries which are no longer "
"used in the program sources (@pxref{Obsolete Entries}).  It finally "
"discovers new strings and inserts them in the resulting PO file as "
"untranslated entries (@pxref{Untranslated Entries}).  @xref{msgmerge "
"Invocation}, for more information about what @code{msgmerge} really does."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1110
msgid ""
"Whatever route or means taken, the goal is to obtain an updated "
"@file{@var{lang}.po} file offering translations for all strings."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1125
msgid ""
"The temporal mobility, or fluidity of PO files, is an integral part of the "
"translation game, and should be well understood, and accepted.  People "
"resisting it will have a hard time participating in the Translation Project, "
"or will give a hard time to other participants! In particular, maintainers "
"should relax and include all available official PO files in their "
"distributions, even if these have not recently been updated, without "
"exerting pressure on the translator teams to get the job done.  The pressure "
"should rather come from the community of users speaking a particular "
"language, and maintainers should consider themselves fairly relieved of any "
"concern about the adequacy of translation files.  On the other hand, "
"translators should reasonably try updating the PO files they are responsible "
"for, while the package is undergoing pretest, prior to an official "
"distribution."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1132
msgid ""
"Once the PO file is complete and dependable, the @code{msgfmt} program is "
"used for turning the PO file into a machine-oriented format, which may yield "
"efficient retrieval of translations by the programs of the package, whenever "
"needed at runtime (@pxref{MO Files}).  @xref{msgfmt Invocation}, for more "
"information about all modes of execution for the @code{msgfmt} program."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1140
msgid ""
"Finally, the modified and marked C sources are compiled and linked with the "
"GNU @code{gettext} library, usually through the operation of @code{make}, "
"given a suitable @file{Makefile} exists for the project, and the resulting "
"executable is installed somewhere users will find it.  The MO files "
"themselves should also be properly installed.  Given the appropriate "
"environment variables are set (@pxref{Setting the POSIX Locale}), the "
"program should localize itself automatically, whenever it executes."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1143
msgid ""
"The remainder of this manual has the purpose of explaining in depth the "
"various steps outlined above."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1152
msgid ""
"Nowadays, when users log into a computer, they usually find that all their "
"programs show messages in their native language -- at least for users of "
"languages with an active free software community, like French or German; to "
"a lesser extent for languages with a smaller participation in free software "
"and the GNU project, like Hindi and Filipino."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1155
msgid ""
"How does this work? How can the user influence the language that is used by "
"the programs? This chapter will answer it."
msgstr ""

#. type: section
#: original_texis/gettext.texi:1164
#, no-wrap
msgid "Operating System Installation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1171
msgid ""
"The default language is often already specified during operating system "
"installation.  When the operating system is installed, the installer "
"typically asks for the language used for the installation process and, "
"separately, for the language to use in the installed system.  Some OS "
"installers only ask for the language once."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1177
msgid ""
"This determines the system-wide default language for all users.  But the "
"installers often give the possibility to install extra localizations for "
"additional languages.  For example, the localizations of KDE (the K Desktop "
"Environment) and OpenOffice.org are often bundled separately, as one "
"installable package per language."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1186
msgid ""
"At this point it is good to consider the intended use of the machine: If it "
"is a machine designated for personal use, additional localizations are "
"probably not necessary.  If, however, the machine is in use in an "
"organization or company that has international relationships, one can "
"consider the needs of guest users.  If you have a guest from abroad, for a "
"week, what could be his preferred locales? It may be worth installing these "
"additional localizations ahead of time, since they cost only a bit of disk "
"space at this point."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1192
msgid ""
"The system-wide default language is the locale configuration that is used "
"when a new user account is created.  But the user can have his own locale "
"configuration that is different from the one of the other users of the same "
"machine.  He can specify it, typically after the first login, as described "
"in the next section."
msgstr ""

#. type: section
#: original_texis/gettext.texi:1194
#, no-wrap
msgid "Setting the Locale Used by GUI Programs"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1200
msgid ""
"The immediately available programs in a user's desktop come from a group of "
"programs called a ``desktop environment''; it usually includes the window "
"manager, a web browser, a text editor, and more.  The most common free "
"desktop environments are KDE, GNOME, and Xfce."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1204
msgid ""
"The locale used by GUI programs of the desktop environment can be specified "
"in a configuration screen called ``control center'', ``language settings'' "
"or ``country settings''."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1208
msgid ""
"Individual GUI programs that are not part of the desktop environment can "
"have their locale specified either in a settings panel, or through "
"environment variables."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1217
msgid ""
"For some programs, it is possible to specify the locale through environment "
"variables, possibly even to a different locale than the desktop's locale.  "
"This means, instead of starting a program through a menu or from the file "
"system, you can start it from the command-line, after having set some "
"environment variables.  The environment variables can be those specified in "
"the next section (@ref{Setting the POSIX Locale}); for some versions of KDE, "
"however, the locale is specified through a variable @code{KDE_LANG}, rather "
"than @code{LANG} or @code{LC_ALL}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1230
msgid ""
"As a user, if your language has been installed for this package, in the "
"simplest case, you only have to set the @code{LANG} environment variable to "
"the appropriate @samp{@var{ll}_@var{CC}} combination.  For example, let's "
"suppose that you speak German and live in Germany.  At the shell prompt, "
"merely execute @w{@samp{setenv LANG de_DE}} (in @code{csh}), @w{@samp{export "
"LANG; LANG=de_DE}} (in @code{sh}) or @w{@samp{export LANG=de_DE}} (in "
"@code{bash}).  This can be done from your @file{.login} or @file{.profile} "
"file, once and for all."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1246
msgid ""
"A locale name usually has the form @samp{@var{ll}_@var{CC}}.  Here "
"@samp{@var{ll}} is an @w{ISO 639} two-letter language code, and "
"@samp{@var{CC}} is an @w{ISO 3166} two-letter country code.  For example, "
"for German in Germany, @var{ll} is @code{de}, and @var{CC} is @code{DE}.  "
"You find a list of the language codes in appendix @ref{Language Codes} and a "
"list of the country codes in appendix @ref{Country Codes}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1251
msgid ""
"You might think that the country code specification is redundant.  But in "
"fact, some languages have dialects in different countries.  For example, "
"@samp{de_AT} is used for Austria, and @samp{pt_BR} for Brazil.  The country "
"code serves to distinguish the dialects."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1260
msgid ""
"Many locale names have an extended syntax "
"@samp{@var{ll}_@var{CC}.@var{encoding}} that also specifies the character "
"encoding.  These are in use because between 2000 and 2005, most users have "
"switched to locales in UTF-8 encoding.  For example, the German locale on "
"glibc systems is nowadays @samp{de_DE.UTF-8}.  The older name @samp{de_DE} "
"still refers to the German locale as of 2000 that stores characters in "
"ISO-8859-1 encoding -- a text encoding that cannot even accommodate the Euro "
"currency sign."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1271
msgid ""
"Some locale names use @samp{@var{ll}_@var{CC}@@@var{variant}} instead of "
"@samp{@var{ll}_@var{CC}}.  The @samp{@@@var{variant}} can denote any kind of "
"characteristics that is not already implied by the language @var{ll} and the "
"country @var{CC}.  It can denote a particular monetary unit.  For example, "
"on glibc systems, @samp{de_DE@@euro} denotes the locale that uses the Euro "
"currency, in contrast to the older locale @samp{de_DE} which implies the use "
"of the currency before 2002.  It can also denote a dialect of the language, "
"or the script used to write text (for example, @samp{sr_RS@@latin} uses the "
"Latin script, whereas @samp{sr_RS} uses the Cyrillic script to write "
"Serbian), or the orthography rules, or similar."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1275
msgid ""
"On other systems, some variations of this scheme are used, such as "
"@samp{@var{ll}}.  You can get the list of locales supported by your system "
"for your language by running the command @samp{locale -a | grep "
"'^@var{ll}'}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1284
msgid ""
"There is also a special locale, called @samp{C}.  When it is used, it "
"disables all localization: in this locale, all programs standardized by "
"POSIX use English messages and an unspecified character encoding (often "
"US-ASCII, but sometimes also ISO-8859-1 or UTF-8, depending on the operating "
"system)."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1287
#, no-wrap
msgid "setting up @code{gettext} at run time"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1288
#, no-wrap
msgid "selecting message language"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1289
#, no-wrap
msgid "language selection"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1294
msgid ""
"A locale is composed of several @emph{locale categories}, see "
"@ref{Aspects}.  When a program looks up locale dependent values, it does "
"this according to the following environment variables, in priority order:"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1296 original_texis/gettext.texi:6794 original_texis/gettext.texi:7908
#, no-wrap
msgid "LANGUAGE@r{, environment variable}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:1297 original_texis/gettext.texi:6795
#, no-wrap
msgid "LANGUAGE"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1298 original_texis/gettext.texi:6796
#, no-wrap
msgid "LC_ALL@r{, environment variable}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:1299 original_texis/gettext.texi:6797
#, no-wrap
msgid "LC_ALL"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1300 original_texis/gettext.texi:6798
#, no-wrap
msgid "LC_CTYPE@r{, environment variable}"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1301 original_texis/gettext.texi:6799
#, no-wrap
msgid "LC_NUMERIC@r{, environment variable}"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1302 original_texis/gettext.texi:6800
#, no-wrap
msgid "LC_TIME@r{, environment variable}"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1303 original_texis/gettext.texi:6801
#, no-wrap
msgid "LC_COLLATE@r{, environment variable}"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1304 original_texis/gettext.texi:6802
#, no-wrap
msgid "LC_MONETARY@r{, environment variable}"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1305 original_texis/gettext.texi:6803
#, no-wrap
msgid "LC_MESSAGES@r{, environment variable}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:1306
#, no-wrap
msgid "@code{LC_xxx}, according to selected locale category:"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:1309
msgid ""
"@code{LC_CTYPE}, @code{LC_NUMERIC}, @code{LC_TIME}, @code{LC_COLLATE}, "
"@code{LC_MONETARY}, @code{LC_MESSAGES}, ..."
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:1309 original_texis/gettext.texi:6805
#, no-wrap
msgid "LANG@r{, environment variable}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:1310 original_texis/gettext.texi:6806
#, no-wrap
msgid "LANG"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1314
msgid "Variables whose value is set but is empty are ignored in this lookup."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1319
msgid ""
"@code{LANG} is the normal environment variable for specifying a locale.  As "
"a user, you normally set this variable (unless some of the other variables "
"have already been set by the system, in @file{/etc/profile} or similar "
"initialization files)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1331
msgid ""
"@code{LC_CTYPE}, @code{LC_NUMERIC}, @code{LC_TIME}, @code{LC_COLLATE}, "
"@code{LC_MONETARY}, @code{LC_MESSAGES}, and so on, are the environment "
"variables meant to override @code{LANG} and affecting a single locale "
"category only.  For example, assume you are a Swedish user in Spain, and you "
"want your programs to handle numbers and dates according to Spanish "
"conventions, and only the messages should be in Swedish.  Then you could "
"create a locale named @samp{sv_ES} or @samp{sv_ES.UTF-8} by use of the "
"@code{localedef} program.  But it is simpler, and achieves the same effect, "
"to set the @code{LANG} variable to @code{es_ES.UTF-8} and the "
"@code{LC_MESSAGES} variable to @code{sv_SE.UTF-8}; these two locales come "
"already preinstalled with the operating system."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1336
msgid ""
"@code{LC_ALL} is an environment variable that overrides all of these.  It is "
"typically used in scripts that run particular programs.  For example, "
"@code{configure} scripts generated by GNU autoconf use @code{LC_ALL} to make "
"sure that the configuration tests don't operate in locale dependent ways."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1341
msgid ""
"Some systems, unfortunately, set @code{LC_ALL} in @file{/etc/profile} or in "
"similar initialization files.  As a user, you therefore have to unset this "
"variable if you want to set @code{LANG} and optionally some of the other "
"@code{LC_xxx} variables."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1343
msgid "The @code{LANGUAGE} variable is described in the next subsection."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:1345
#, no-wrap
msgid "Specifying a Priority List of Languages"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1358
msgid ""
"Not all programs have translations for all languages.  By default, an "
"English message is shown in place of a nonexistent translation.  If you "
"understand other languages, you can set up a priority list of languages.  "
"This is done through a different environment variable, called "
"@code{LANGUAGE}.  GNU @code{gettext} gives preference to @code{LANGUAGE} "
"over @code{LC_ALL} and @code{LANG} for the purpose of message handling, but "
"you still need to have @code{LANG} (or @code{LC_ALL}) set to the primary "
"language; this is required by other parts of the system libraries.  For "
"example, some Swedish users who would rather read translations in German "
"than English for when Swedish is not available, set @code{LANGUAGE} to "
"@samp{sv:de} while leaving @code{LANG} to @samp{sv_SE}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1365
msgid ""
"Special advice for Norwegian users: The language code for Norwegian "
"bokm@ringaccent{a}l changed from @samp{no} to @samp{nb} recently (in 2003).  "
"During the transition period, while some message catalogs for this language "
"are installed under @samp{nb} and some older ones under @samp{no}, it is "
"recommended for Norwegian users to set @code{LANGUAGE} to @samp{nb:no} so "
"that both newer and older translations are used."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1372
msgid ""
"In the @code{LANGUAGE} environment variable, but not in the other "
"environment variables, @samp{@var{ll}_@var{CC}} combinations can be "
"abbreviated as @samp{@var{ll}} to denote the language's main dialect.  For "
"example, @samp{de} is equivalent to @samp{de_DE} (German as spoken in "
"Germany), and @samp{pt} to @samp{pt_PT} (Portuguese as spoken in Portugal)  "
"in this context."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1377
msgid ""
"Note: The variable @code{LANGUAGE} is ignored if the locale is set to "
"@samp{C}.  In other words, you have to first enable localization, by setting "
"@code{LANG} (or @code{LC_ALL}) to a value other than @samp{C}, before you "
"can use a language priority list through the @code{LANGUAGE} variable."
msgstr ""

#. type: section
#: original_texis/gettext.texi:1379
#, no-wrap
msgid "Installing Translations for Particular Programs"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1380
#, no-wrap
msgid "Translation Matrix"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1381
#, no-wrap
msgid "available translations"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1389
msgid ""
"Languages are not equally well supported in all packages using GNU "
"@code{gettext}, and more translations are added over time.  Usually, you use "
"the translations that are shipped with the operating system or with "
"particular packages that you install afterwards.  But you can also install "
"newer localizations directly.  For doing this, you will need an "
"understanding where each localization file is stored on the file system."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1390
#, no-wrap
msgid "@file{ABOUT-NLS} file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1394
msgid ""
"For programs that participate in the Translation Project, you can start "
"looking for translations here: "
"@url{https://translationproject.org/team/index.html}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1397
msgid ""
"For programs that are part of the KDE project, the starting point is: "
"@url{https://l10n.kde.org/}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1400
msgid ""
"For programs that are part of the GNOME project, the starting point is: "
"@url{https://wiki.gnome.org/TranslationProject}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1405
msgid ""
"For other programs, you may check whether the program's source code package "
"contains some @file{@var{ll}.po} files; often they are kept together in a "
"directory called @file{po/}.  Each @file{@var{ll}.po} file contains the "
"message translations for the language whose abbreviation of @var{ll}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1408
#, no-wrap
msgid "PO files' format"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1409
#, no-wrap
msgid "file format, @file{.po}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1415
msgid ""
"The GNU @code{gettext} toolset helps programmers and translators at "
"producing, updating and using translation files, mainly those PO files which "
"are textual, editable files.  This chapter explains the format of PO files."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1422
msgid ""
"A PO file is made up of many entries, each entry holding the relation "
"between an original untranslated string and its corresponding translation.  "
"All entries in a given PO file usually pertain to a single project, and all "
"translations are expressed in a single target language.  One PO file "
"@dfn{entry} has the following schematic structure:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:1432 original_texis/gettext.texi:5017
#, no-wrap
msgid ""
"@var{white-space}\n"
"#  @var{translator-comments}\n"
"#. @var{extracted-comments}\n"
"#: @var{reference}@dots{}\n"
"#, @var{flag}@dots{}\n"
"#| msgid @var{previous-untranslated-string}\n"
"msgid @var{untranslated-string}\n"
"msgstr @var{translated-string}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1437
msgid ""
"The general structure of a PO file should be well understood by the "
"translator.  When using PO mode, very little has to be known about the "
"format details, as PO mode takes care of them for her."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1439
msgid "A simple entry can look like this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:1444
#, no-wrap
msgid ""
"#: lib/error.c:116\n"
"msgid \"Unknown system error\"\n"
"msgstr \"Error desconegut del sistema\"\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1446
#, no-wrap
msgid "comments, translator"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1447
#, no-wrap
msgid "comments, automatic"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1448
#, no-wrap
msgid "comments, extracted"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1466
msgid ""
"Entries begin with some optional white space.  Usually, when generated "
"through GNU @code{gettext} tools, there is exactly one blank line between "
"entries.  Then comments follow, on lines all starting with the character "
"@code{#}.  There are two kinds of comments: those which have some white "
"space immediately following the @code{#} - the @var{translator comments} -, "
"which comments are created and maintained exclusively by the translator, and "
"those which have some non-white character just after the @code{#} - the "
"@var{automatic comments} -, which comments are created and maintained "
"automatically by GNU @code{gettext} tools.  Comment lines starting with "
"@code{#.} contain comments given by the programmer, directed at the "
"translator; these comments are called @var{extracted comments} because the "
"@code{xgettext} program extracts them from the program's source code.  "
"Comment lines starting with @code{#:} contain references to the program's "
"source code.  Comment lines starting with @code{#,} contain flags; more "
"about these below.  Comment lines starting with @code{#|} contain the "
"previous untranslated string for which the translator gave a translation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1468
msgid "All comments, of either kind, are optional."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1469
#, no-wrap
msgid "msgid"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1470
#, no-wrap
msgid "msgstr"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1480
msgid ""
"After white space and comments, entries show two strings, namely first the "
"untranslated string as it appears in the original program sources, and then, "
"the translation of this string.  The original string is introduced by the "
"keyword @code{msgid}, and the translation, by @code{msgstr}.  The two "
"strings, untranslated and translated, are quoted in various ways in the PO "
"file, using @code{\"} delimiters and @code{\\} escapes, but the translator "
"does not really have to pay attention to the precise quoting format, as PO "
"mode fully takes care of quoting for her."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1488
msgid ""
"The @code{msgid} strings, as well as automatic comments, are produced and "
"managed by other GNU @code{gettext} tools, and PO mode does not provide "
"means for the translator to alter these.  The most she can do is merely "
"deleting them, and only by deleting the whole entry.  On the other hand, the "
"@code{msgstr} string, as well as translator comments, are really meant for "
"the translator, and PO mode gives her the full control she needs."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1494
msgid ""
"The comment lines beginning with @code{#,} are special because they are not "
"completely ignored by the programs as comments generally are.  The comma "
"separated list of @var{flag}s is used by the @code{msgfmt} program to give "
"the user some better diagnostic messages.  Currently there are two forms of "
"flags defined:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:1496
#, no-wrap
msgid "fuzzy"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1497
#, no-wrap
msgid "fuzzy@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1506
msgid ""
"This flag can be generated by the @code{msgmerge} program or it can be "
"inserted by the translator herself.  It shows that the @code{msgstr} string "
"might not be a correct translation (anymore).  Only the translator can judge "
"if the translation requires further modification, or is acceptable as is.  "
"Once satisfied with the translation, she then removes this @code{fuzzy} "
"attribute.  The @code{msgmerge} program inserts this when it combined the "
"@code{msgid} and @code{msgstr} entries after fuzzy search only.  @xref{Fuzzy "
"Entries}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1508
#, no-wrap
msgid "c-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1509
#, no-wrap
msgid "no-c-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1510
#, no-wrap
msgid "no-c-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1515
msgid ""
"These flags should not be added by a human.  Instead only the "
"@code{xgettext} program adds them.  In an automated PO file processing "
"system as proposed here, the user's changes would be thrown away again as "
"soon as the @code{xgettext} program generates a new template file."
msgstr ""

#. type: table
#: original_texis/gettext.texi:1520
msgid ""
"The @code{c-format} flag indicates that the untranslated string and the "
"translation are supposed to be C format strings.  The @code{no-c-format} "
"flag indicates that they are not C format strings, even though the "
"untranslated string happens to look like a C format string (with @samp{%} "
"directives)."
msgstr ""

#. type: table
#: original_texis/gettext.texi:1524
msgid ""
"When the @code{c-format} flag is given for a string the @code{msgfmt} "
"program does some more tests to check the validity of the translation.  "
"@xref{msgfmt Invocation}, @ref{c-format Flag} and @ref{c-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1526
#, no-wrap
msgid "objc-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1527
#, no-wrap
msgid "no-objc-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1528
#, no-wrap
msgid "no-objc-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1530
msgid "Likewise for Objective C, see @ref{objc-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1532
#, no-wrap
msgid "sh-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1533
#, no-wrap
msgid "no-sh-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1534
#, no-wrap
msgid "no-sh-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1536
msgid "Likewise for Shell, see @ref{sh-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1538
#, no-wrap
msgid "python-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1539
#, no-wrap
msgid "no-python-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1540
#, no-wrap
msgid "no-python-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1542
msgid "Likewise for Python, see @ref{python-format}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:1543
#, no-wrap
msgid "python-brace-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1544
#, no-wrap
msgid "python-brace-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1545
#, no-wrap
msgid "no-python-brace-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1546
#, no-wrap
msgid "no-python-brace-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1548
msgid "Likewise for Python brace, see @ref{python-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1550
#, no-wrap
msgid "lisp-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1551
#, no-wrap
msgid "no-lisp-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1552
#, no-wrap
msgid "no-lisp-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1554
msgid "Likewise for Lisp, see @ref{lisp-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1556
#, no-wrap
msgid "elisp-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1557
#, no-wrap
msgid "no-elisp-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1558
#, no-wrap
msgid "no-elisp-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1560
msgid "Likewise for Emacs Lisp, see @ref{elisp-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1562
#, no-wrap
msgid "librep-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1563
#, no-wrap
msgid "no-librep-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1564
#, no-wrap
msgid "no-librep-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1566
msgid "Likewise for librep, see @ref{librep-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1568
#, no-wrap
msgid "scheme-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1569
#, no-wrap
msgid "no-scheme-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1570
#, no-wrap
msgid "no-scheme-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1572
msgid "Likewise for Scheme, see @ref{scheme-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1574
#, no-wrap
msgid "smalltalk-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1575
#, no-wrap
msgid "no-smalltalk-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1576
#, no-wrap
msgid "no-smalltalk-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1578
msgid "Likewise for Smalltalk, see @ref{smalltalk-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1580
#, no-wrap
msgid "java-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1581
#, no-wrap
msgid "no-java-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1582
#, no-wrap
msgid "no-java-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1584
msgid "Likewise for Java, see @ref{java-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1586
#, no-wrap
msgid "csharp-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1587
#, no-wrap
msgid "no-csharp-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1588
#, no-wrap
msgid "no-csharp-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1590
msgid "Likewise for C#, see @ref{csharp-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1592
#, no-wrap
msgid "awk-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1593
#, no-wrap
msgid "no-awk-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1594
#, no-wrap
msgid "no-awk-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1596
msgid "Likewise for awk, see @ref{awk-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1598
#, no-wrap
msgid "object-pascal-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1599
#, no-wrap
msgid "no-object-pascal-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1600
#, no-wrap
msgid "no-object-pascal-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1602
msgid "Likewise for Object Pascal, see @ref{object-pascal-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1604
#, no-wrap
msgid "ycp-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1605
#, no-wrap
msgid "no-ycp-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1606
#, no-wrap
msgid "no-ycp-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1608
msgid "Likewise for YCP, see @ref{ycp-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1610
#, no-wrap
msgid "tcl-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1611
#, no-wrap
msgid "no-tcl-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1612
#, no-wrap
msgid "no-tcl-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1614
msgid "Likewise for Tcl, see @ref{tcl-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1616
#, no-wrap
msgid "perl-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1617
#, no-wrap
msgid "no-perl-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1618
#, no-wrap
msgid "no-perl-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1620
msgid "Likewise for Perl, see @ref{perl-format}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:1621
#, no-wrap
msgid "perl-brace-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1622
#, no-wrap
msgid "perl-brace-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1623
#, no-wrap
msgid "no-perl-brace-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1624
#, no-wrap
msgid "no-perl-brace-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1626
msgid "Likewise for Perl brace, see @ref{perl-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1628
#, no-wrap
msgid "php-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1629
#, no-wrap
msgid "no-php-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1630
#, no-wrap
msgid "no-php-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1632
msgid "Likewise for PHP, see @ref{php-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1634
#, no-wrap
msgid "gcc-internal-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1635
#, no-wrap
msgid "no-gcc-internal-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1636
#, no-wrap
msgid "no-gcc-internal-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1638
msgid "Likewise for the GCC sources, see @ref{gcc-internal-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1640
#, no-wrap
msgid "gfc-internal-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1641
#, no-wrap
msgid "no-gfc-internal-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1642
#, no-wrap
msgid "no-gfc-internal-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1644
msgid ""
"Likewise for the GNU Fortran Compiler sources, see "
"@ref{gfc-internal-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1646
#, no-wrap
msgid "qt-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1647
#, no-wrap
msgid "no-qt-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1648
#, no-wrap
msgid "no-qt-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1650
msgid "Likewise for Qt, see @ref{qt-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1652
#, no-wrap
msgid "qt-plural-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1653
#, no-wrap
msgid "no-qt-plural-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1654
#, no-wrap
msgid "no-qt-plural-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1656
msgid "Likewise for Qt plural forms, see @ref{qt-plural-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1658
#, no-wrap
msgid "kde-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1659
#, no-wrap
msgid "no-kde-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1660
#, no-wrap
msgid "no-kde-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1662
msgid "Likewise for KDE, see @ref{kde-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1664
#, no-wrap
msgid "boost-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1665
#, no-wrap
msgid "no-boost-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1666
#, no-wrap
msgid "no-boost-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1668
msgid "Likewise for Boost, see @ref{boost-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1670
#, no-wrap
msgid "lua-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1671
#, no-wrap
msgid "no-lua-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1672
#, no-wrap
msgid "no-lua-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1674
msgid "Likewise for Lua, see @ref{lua-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1676
#, no-wrap
msgid "javascript-format@r{ flag}"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:1677
#, no-wrap
msgid "no-javascript-format"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1678
#, no-wrap
msgid "no-javascript-format@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1680
msgid "Likewise for JavaScript, see @ref{javascript-format}."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1683
#, no-wrap
msgid "msgctxt"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1684
#, no-wrap
msgid "context, in PO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1687
msgid ""
"It is also possible to have entries with a context specifier. They look like "
"this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:1699
#, no-wrap
msgid ""
"@var{white-space}\n"
"#  @var{translator-comments}\n"
"#. @var{extracted-comments}\n"
"#: @var{reference}@dots{}\n"
"#, @var{flag}@dots{}\n"
"#| msgctxt @var{previous-context}\n"
"#| msgid @var{previous-untranslated-string}\n"
"msgctxt @var{context}\n"
"msgid @var{untranslated-string}\n"
"msgstr @var{translated-string}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1706
msgid ""
"The context serves to disambiguate messages with the same "
"@var{untranslated-string}.  It is possible to have several entries with the "
"same @var{untranslated-string} in a PO file, provided that they each have a "
"different @var{context}.  Note that an empty @var{context} string and an "
"absent @code{msgctxt} line do not mean the same thing."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1707
#, no-wrap
msgid "msgid_plural"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1708
#, no-wrap
msgid "plural forms, in PO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1711
msgid ""
"A different kind of entries is used for translations which involve plural "
"forms."
msgstr ""

#. type: example
#: original_texis/gettext.texi:1725
#, no-wrap
msgid ""
"@var{white-space}\n"
"#  @var{translator-comments}\n"
"#. @var{extracted-comments}\n"
"#: @var{reference}@dots{}\n"
"#, @var{flag}@dots{}\n"
"#| msgid @var{previous-untranslated-string-singular}\n"
"#| msgid_plural @var{previous-untranslated-string-plural}\n"
"msgid @var{untranslated-string-singular}\n"
"msgid_plural @var{untranslated-string-plural}\n"
"msgstr[0] @var{translated-string-case-0}\n"
"...\n"
"msgstr[N] @var{translated-string-case-n}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1728
msgid "Such an entry can look like this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:1736
#, no-wrap
msgid ""
"#: src/msgcmp.c:338 src/po-lex.c:699\n"
"#, c-format\n"
"msgid \"found %d fatal error\"\n"
"msgid_plural \"found %d fatal errors\"\n"
"msgstr[0] \"s'ha trobat %d error fatal\"\n"
"msgstr[1] \"s'han trobat %d errors fatals\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1740
msgid ""
"Here also, a @code{msgctxt} context can be specified before @code{msgid}, "
"like above."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1742
msgid "Here, additional kinds of flags can be used:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:1744
#, no-wrap
msgid "range:"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:1745
#, no-wrap
msgid "range:@r{ flag}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:1751
msgid ""
"This flag is followed by a range of non-negative numbers, using the syntax "
"@code{range: @var{minimum-value}..@var{maximum-value}}.  It designates the "
"possible values that the numeric parameter of the message can take.  In some "
"languages, translators may produce slightly better translations if they know "
"that the value can only take on values between 0 and 10, for example."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1757
msgid ""
"The @var{previous-untranslated-string} is optionally inserted by the "
"@code{msgmerge} program, at the same time when it marks a message fuzzy.  It "
"helps the translator to see which changes were done by the developers on the "
"@var{untranslated-string}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1762
msgid ""
"It happens that some lines, usually whitespace or comments, follow the very "
"last entry of a PO file.  Such lines are not part of any entry, and will be "
"dropped when the PO file is processed by the tools, or may disturb some PO "
"file editors."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1767
msgid ""
"The remainder of this section may be safely skipped by those using a PO file "
"editor, yet it may be interesting for everybody to have a better idea of the "
"precise format of a PO file.  On the other hand, those wishing to modify PO "
"files by hand should carefully continue reading on."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1773
msgid ""
"An empty @var{untranslated-string} is reserved to contain the header entry "
"with the meta information (@pxref{Header Entry}).  This header entry should "
"be the first entry of the file.  The empty @var{untranslated-string} is "
"reserved for this purpose and must not be used anywhere else."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1781
msgid ""
"Each of @var{untranslated-string} and @var{translated-string} respects the C "
"syntax for a character string, including the surrounding quotes and embedded "
"backslashed escape sequences.  When the time comes to write multi-line "
"strings, one should not use escaped newlines.  Instead, a closing quote "
"should follow the last character on the line to be continued, and an opening "
"quote should resume the string at the beginning of the following PO file "
"line.  For example:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:1786
#, no-wrap
msgid ""
"msgid \"\"\n"
"\"Here is an example of how one might continue a very long string\\n\"\n"
"\"for the common case the string represents multi-line output.\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1805
msgid ""
"In this example, the empty string is used on the first line, to allow better "
"alignment of the @code{H} from the word @samp{Here} over the @code{f} from "
"the word @samp{for}.  In this example, the @code{msgid} keyword is followed "
"by three strings, which are meant to be concatenated.  Concatenating the "
"empty string does not change the resulting overall string, but it is a way "
"for us to comply with the necessity of @code{msgid} to be followed by a "
"string on the same line, while keeping the multi-line presentation "
"left-justified, as we find this to be a cleaner disposition.  The empty "
"string could have been omitted, but only if the string starting with "
"@samp{Here} was promoted on the first line, right after "
"@code{msgid}.@footnote{This limitation is not imposed by GNU @code{gettext}, "
"but is for compatibility with the @code{msgfmt} implementation on Solaris.} "
"It was not really necessary either to switch between the two last quoted "
"strings immediately after the newline @samp{\\n}, the switch could have "
"occurred after @emph{any} other character, we just did it this way because "
"it is neater."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1806
#, no-wrap
msgid "newlines in PO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1811
msgid ""
"One should carefully distinguish between end of lines marked as @samp{\\n} "
"@emph{inside} quotes, which are part of the represented string, and end of "
"lines in the PO file itself, outside string quotes, which have no incidence "
"on the represented string."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1812
#, no-wrap
msgid "comments in PO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1821
msgid ""
"Outside strings, white lines and comments may be used freely.  Comments "
"start at the beginning of a line with @samp{#} and extend until the end of "
"the PO file line.  Comments written by translators should have the initial "
"@samp{#} immediately followed by some white space.  If the @samp{#} is not "
"immediately followed by white space, this comment is most likely generated "
"and managed by specialized GNU tools, and might disappear or be replaced "
"unexpectedly when the PO file is given to @code{msgmerge}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1824
#, no-wrap
msgid "preparing programs for translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1835
msgid ""
"For the programmer, changes to the C source code fall into three "
"categories.  First, you have to make the localization functions known to all "
"modules needing message translation.  Second, you should properly trigger "
"the operation of GNU @code{gettext} when the program initializes, usually "
"from the @code{main} function.  Last, you should identify, adjust and mark "
"all constant strings in your program needing translation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1856
msgid ""
"Presuming that your set of programs, or package, has been adjusted so all "
"needed GNU @code{gettext} files are available, and your @file{Makefile} "
"files are adjusted (@pxref{Maintainers}), each C module having translated C "
"strings should contain the line:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:1860 original_texis/gettext.texi:1868 original_texis/gettext.texi:8365
#, no-wrap
msgid "#include <libintl.h>\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1865
msgid ""
"Similarly, each C module containing @code{printf()}/@code{fprintf()}/...  "
"calls with a format string that could be a translated C string (even if the "
"C string comes from a different C module) should contain the line:"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1873
#, no-wrap
msgid "initialization"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1876
msgid ""
"The initialization of locale data should be done with more or less the same "
"code in every program, as demonstrated below:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:1888
#, no-wrap
msgid ""
"int\n"
"main (int argc, char *argv[])\n"
"@{\n"
"  @dots{}\n"
"  setlocale (LC_ALL, \"\");\n"
"  bindtextdomain (PACKAGE, LOCALEDIR);\n"
"  textdomain (PACKAGE);\n"
"  @dots{}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1894
msgid ""
"@var{PACKAGE} and @var{LOCALEDIR} should be provided either by "
"@file{config.h} or by the Makefile.  For now consult the @code{gettext} or "
"@code{hello} sources for more information."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1895
#, no-wrap
msgid "locale category, LC_ALL"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1905
msgid ""
"The use of @code{LC_ALL} might not be appropriate for you.  @code{LC_ALL} "
"includes all locale categories and especially @code{LC_CTYPE}.  This latter "
"category is responsible for determining character classes with the "
"@code{isalnum} etc. functions from @file{ctype.h} which could especially for "
"programs, which process some kind of input language, be wrong.  For example "
"this would mean that a source code using the @,{c} (c-cedilla character) is "
"runnable in France but not in the U.S."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1917
msgid ""
"Some systems also have problems with parsing numbers using the @code{scanf} "
"functions if an other but the @code{LC_ALL} locale category is used.  The "
"standards say that additional formats but the one known in the @code{\"C\"} "
"locale might be recognized.  But some systems seem to reject numbers in the "
"@code{\"C\"} locale format.  In some situation, it might also be a problem "
"with the notation itself which makes it impossible to recognize whether the "
"number is in the @code{\"C\"} locale or the local format.  This can happen "
"if thousands separator characters are used.  Some locales define this "
"character according to the national conventions to @code{'.'} which is the "
"same character used in the @code{\"C\"} locale to denote the decimal point."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1920
msgid ""
"So it is sometimes necessary to replace the @code{LC_ALL} line in the code "
"above by a sequence of @code{setlocale} lines"
msgstr ""

#. type: group
#: original_texis/gettext.texi:1929
#, no-wrap
msgid ""
"@{\n"
"  @dots{}\n"
"  setlocale (LC_CTYPE, \"\");\n"
"  setlocale (LC_MESSAGES, \"\");\n"
"  @dots{}\n"
"@}\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1933
#, no-wrap
msgid "locale category, LC_COLLATE"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1938
#, no-wrap
msgid "locale category, LC_RESPONSES"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1946
msgid ""
"On all POSIX conformant systems the locale categories @code{LC_CTYPE}, "
"@code{LC_MESSAGES}, @code{LC_COLLATE}, @code{LC_MONETARY}, "
"@code{LC_NUMERIC}, and @code{LC_TIME} are available.  On some systems which "
"are only ISO C compliant, @code{LC_MESSAGES} is missing, but a substitute "
"for it is defined in GNU gettext's @code{<libintl.h>} and in GNU gnulib's "
"@code{<locale.h>}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1956
msgid ""
"Note that changing the @code{LC_CTYPE} also affects the functions declared "
"in the @code{<ctype.h>} standard header and some functions declared in the "
"@code{<string.h>} and @code{<stdlib.h>} standard headers.  If this is not "
"desirable in your application (for example in a compiler's parser), you can "
"use a set of substitute functions which hardwire the C locale, such as found "
"in the modules @samp{c-ctype}, @samp{c-strcase}, @samp{c-strcasestr}, "
"@samp{c-strtod}, @samp{c-strtold} in the GNU gnulib source distribution."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1963
msgid ""
"It is also possible to switch the locale forth and back between the "
"environment dependent locale and the C locale, but this approach is normally "
"avoided because a @code{setlocale} call is expensive, because it is tedious "
"to determine the places where a locale switch is needed in a large program's "
"source, and because switching a locale is not multithread-safe."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1967
#, no-wrap
msgid "marking strings, preparations"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1973
msgid ""
"Before strings can be marked for translations, they sometimes need to be "
"adjusted.  Usually preparing a string for translation is done right before "
"marking it, during the marking phase which is described in the next "
"sections.  What you have to keep in mind while doing that is the following."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:1977
msgid "Decent English style."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:1980
msgid "Entire sentences."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:1983
msgid "Split at paragraphs."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:1986
msgid "Use format strings instead of string concatenation."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:1989
msgid "Avoid unusual markup and unusual control characters."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1993
msgid "Let's look at some examples of these guidelines."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:1994
#, no-wrap
msgid "style"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:1998
msgid ""
"Translatable strings should be in good English style.  If slang language "
"with abbreviations and shortcuts is used, often translators will not "
"understand the message and will produce very inappropriate translations."
msgstr ""

#. type: example
#: original_texis/gettext.texi:2001
#, no-wrap
msgid "\"%s: is parameter\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2006
msgid ""
"This is nearly untranslatable: Is the displayed item @emph{a} parameter or "
"@emph{the} parameter?"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2009
#, no-wrap
msgid "\"No match\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2016
msgid ""
"The ambiguity in this message makes it unintelligible: Is the program "
"attempting to set something on fire? Does it mean \"The given object does "
"not match the template\"? Does it mean \"The template does not fit for any "
"of the objects\"?"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2017
#, no-wrap
msgid "ambiguities"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2020
msgid ""
"In both cases, adding more words to the message will help both the "
"translator and the English speaking user."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2021
#, no-wrap
msgid "sentences"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2024
msgid ""
"Translatable strings should be entire sentences.  It is often not possible "
"to translate single verbs or adjectives in a substitutable way."
msgstr ""

#. type: example
#: original_texis/gettext.texi:2027
#, no-wrap
msgid "printf (\"File %s is %s protected\", filename, rw ? \"write\" : \"read\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2033
msgid ""
"Most translators will not look at the source and will thus only see the "
"string @code{\"File %s is %s protected\"}, which is unintelligible.  Change "
"this to"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2037
#, no-wrap
msgid ""
"printf (rw ? \"File %s is write protected\" : \"File %s is read "
"protected\",\n"
"        filename);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2044
msgid ""
"This way the translator will not only understand the message, she will also "
"be able to find the appropriate grammatical construction.  A French "
"translator for example translates \"write protected\" like \"protected "
"against writing\"."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2053
msgid ""
"Entire sentences are also important because in many languages, the "
"declination of some word in a sentence depends on the gender or the number "
"(singular/plural) of another part of the sentence.  There are usually more "
"interdependencies between words than in English.  The consequence is that "
"asking a translator to translate two half-sentences and then combining these "
"two half-sentences through dumb string concatenation will not work, for many "
"languages, even though it would work for English.  That's why translators "
"need to handle entire sentences."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2056
msgid ""
"Often sentences don't fit into a single line.  If a sentence is output using "
"two subsequent @code{printf} statements, like this"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2060
#, no-wrap
msgid ""
"printf (\"Locale charset \\\"%s\\\" is different from\\n\", lcharset);\n"
"printf (\"input file charset \\\"%s\\\".\\n\", fcharset);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2068
msgid ""
"the translator would have to translate two half sentences, but nothing in "
"the POT file would tell her that the two half sentences belong together.  It "
"is necessary to merge the two @code{printf} statements so that the "
"translator can handle the entire sentence at once and decide at which place "
"to insert a line break in the translation (if at all):"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2072
#, no-wrap
msgid ""
"printf (\"Locale charset \\\"%s\\\" is different from\\n\\\n"
"input file charset \\\"%s\\\".\\n\", lcharset, fcharset);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2075
msgid ""
"You may now ask: how about two or more adjacent sentences? Like in this "
"case:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2079
#, no-wrap
msgid ""
"puts (\"Apollo 13 scenario: Stack overflow handling failed.\");\n"
"puts (\"On the next stack overflow we will crash!!!\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2089
msgid ""
"Should these two statements merged into a single one? I would recommend to "
"merge them if the two sentences are related to each other, because then it "
"makes it easier for the translator to understand and translate both.  On the "
"other hand, if one of the two messages is a stereotypic one, occurring in "
"other places as well, you will do a favour to the translator by not merging "
"the two.  (Identical messages occurring in several places are combined by "
"xgettext, so the translator has to handle them once only.)"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2090
#, no-wrap
msgid "paragraphs"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2098
msgid ""
"Translatable strings should be limited to one paragraph; don't let a single "
"message be longer than ten lines.  The reason is that when the translatable "
"string changes, the translator is faced with the task of updating the entire "
"translated string.  Maybe only a single word will have changed in the "
"English string, but the translator doesn't see that (with the current "
"translation tools), therefore she has to proofread the entire message."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2099
#, no-wrap
msgid "help option"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2107
msgid ""
"Many GNU programs have a @samp{--help} output that extends over several "
"screen pages.  It is a courtesy towards the translators to split such a "
"message into several ones of five to ten lines each.  While doing that, you "
"can also attempt to split the documented options into groups, such as the "
"input options, the output options, and the informative output options.  This "
"will help every user to find the option he is looking for."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2108
#, no-wrap
msgid "string concatenation"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2109
#, no-wrap
msgid "concatenation of strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2112
msgid ""
"Hardcoded string concatenation is sometimes used to construct English "
"strings:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2119
#, no-wrap
msgid ""
"strcpy (s, \"Replace \");\n"
"strcat (s, object1);\n"
"strcat (s, \" with \");\n"
"strcat (s, object2);\n"
"strcat (s, \"?\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2126
msgid ""
"In order to present to the translator only entire sentences, and also "
"because in some languages the translator might want to swap the order of "
"@code{object1} and @code{object2}, it is necessary to change this to use a "
"format string:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2129
#, no-wrap
msgid "sprintf (s, \"Replace %s with %s?\", object1, object2);\n"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:2131
#, no-wrap
msgid "inttypes.h"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2138
msgid ""
"A similar case is compile time concatenation of strings.  The ISO C 99 "
"include file @code{<inttypes.h>} contains a macro @code{PRId64} that can be "
"used as a formatting directive for outputting an @samp{int64_t} integer "
"through @code{printf}.  It expands to a constant string, usually \"d\" or "
"\"ld\" or \"lld\" or something like this, depending on the platform.  Assume "
"you have code like"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2141
#, no-wrap
msgid "printf (\"The amount is %0\" PRId64 \"\\n\", number);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2146
msgid ""
"The @code{gettext} tools and library have special support for these "
"@code{<inttypes.h>} macros.  You can therefore simply write"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2149
#, no-wrap
msgid "printf (gettext (\"The amount is %0\" PRId64 \"\\n\"), number);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2156
msgid ""
"The PO file will contain the string \"The amount is %0<PRId64>\\n\".  The "
"translators will provide a translation containing \"%0<PRId64>\" as well, "
"and at runtime the @code{gettext} function's result will contain the "
"appropriate constant string, \"d\" or \"ld\" or \"lld\"."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2161
msgid ""
"This works only for the predefined @code{<inttypes.h>} macros.  If you have "
"defined your own similar macros, let's say @samp{MYPRId64}, that are not "
"known to @code{xgettext}, the solution for this problem is to change the "
"code like this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2166
#, no-wrap
msgid ""
"char buf1[100];\n"
"sprintf (buf1, \"%0\" MYPRId64, number);\n"
"printf (gettext (\"The amount is %s\\n\"), buf1);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2173
msgid ""
"This means, you put the platform dependent code in one statement, and the "
"internationalization code in a different statement.  Note that a buffer "
"length of 100 is safe, because all available hardware integer types are "
"limited to 128 bits, and to print a 128 bit integer one needs at most 54 "
"characters, regardless whether in decimal, octal or hexadecimal."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2174
#, no-wrap
msgid "Java, string concatenation"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2175
#, no-wrap
msgid "C#, string concatenation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2179
msgid ""
"All this applies to other programming languages as well.  For example, in "
"Java and C#, string concatenation is very frequently used, because it is a "
"compiler built-in operator.  Like in C, in Java, you would change"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2182
#, no-wrap
msgid "System.out.println(\"Replace \"+object1+\" with \"+object2+\"?\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2186 original_texis/gettext.texi:2202
msgid "into a statement involving a format string:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2191
#, no-wrap
msgid ""
"System.out.println(\n"
"    MessageFormat.format(\"Replace @{0@} with @{1@}?\",\n"
"                         new Object[] @{ object1, object2 @}));\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2195
msgid "Similarly, in C#, you would change"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2198
#, no-wrap
msgid "Console.WriteLine(\"Replace \"+object1+\" with \"+object2+\"?\");\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2206
#, no-wrap
msgid ""
"Console.WriteLine(\n"
"    String.Format(\"Replace @{0@} with @{1@}?\", object1, object2));\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2208
#, no-wrap
msgid "markup"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2209
#, no-wrap
msgid "control characters"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2213
msgid ""
"Unusual markup or control characters should not be used in translatable "
"strings.  Translators will likely not understand the particular meaning of "
"the markup or control characters."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2219
msgid ""
"For example, if you have a convention that @samp{|} delimits the left-hand "
"and right-hand part of some GUI elements, translators will often not "
"understand it without specific comments.  It might be better to have the "
"translator translate the left-hand and right-hand part separately."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2229
msgid ""
"Another example is the @samp{argp} convention to use a single @samp{\\v} "
"(vertical tab) control character to delimit two sections inside a string.  "
"This is flawed.  Some translators may convert it to a simple newline, some "
"to blank lines.  With some PO file editors it may not be easy to even enter "
"a vertical tab control character.  So, you cannot be sure that the "
"translation will contain a @samp{\\v} character, at the corresponding "
"position.  The solution is, again, to let the translator translate two "
"separate strings and combine at run-time the two translated strings with the "
"@samp{\\v} required by the convention."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2233
msgid ""
"HTML markup, however, is common enough that it's probably ok to use in "
"translatable strings.  But please bear in mind that the GNU gettext tools "
"don't verify that the translations are well-formed HTML."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2236
#, no-wrap
msgid "marking strings that require translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2250
msgid ""
"All strings requiring translation should be marked in the C sources.  "
"Marking is done in such a way that each translatable string appears to be "
"the sole argument of some function or preprocessor macro.  There are only a "
"few such possible functions or macros meant for translation, and their names "
"are said to be marking keywords.  The marking is attached to strings "
"themselves, rather than to what we do with them.  This approach has more "
"uses.  A blatant example is an error message produced by formatting.  The "
"format string needs translation, as well as some strings inserted through "
"some @samp{%s} specification in the format, while the result from "
"@code{sprintf} may have so many different instances that it is impractical "
"to list them all in some @samp{error_string_out()} routine, say."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2259
msgid ""
"This marking operation has two goals.  The first goal of marking is for "
"triggering the retrieval of the translation, at run time.  The keyword is "
"possibly resolved into a routine able to dynamically return the proper "
"translation, as far as possible or wanted, for the argument string.  Most "
"localizable strings are found in executable positions, that is, attached to "
"variables or given as parameters to functions.  But this is not universal "
"usage, and some translatable strings appear in structured initializations.  "
"@xref{Special cases}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2263
msgid ""
"The second goal of the marking operation is to help @code{xgettext} at "
"properly extracting all translatable strings when it scans a set of program "
"sources and produces PO file templates."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2276
msgid ""
"The canonical keyword for marking translatable strings is @samp{gettext}, it "
"gave its name to the whole GNU @code{gettext} package.  For packages making "
"only light use of the @samp{gettext} keyword, macro or function, it is "
"easily used @emph{as is}.  However, for packages using the @code{gettext} "
"interface more heavily, it is usually more convenient to give the main "
"keyword a shorter, less obtrusive name.  Indeed, the keyword might appear on "
"a lot of strings all over the package, and programmers usually do not want "
"nor need their program sources to remind them forcefully, all the time, that "
"they are internationalized.  Further, a long keyword has the disadvantage of "
"using more horizontal space, forcing more indentation work on sources for "
"those trying to keep them within 79 or 80 columns."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2277
#, no-wrap
msgid "@code{_}, a macro to mark strings for translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2289
msgid ""
"Many packages use @samp{_} (a simple underline) as a keyword, and write "
"@samp{_(\"Translatable string\")} instead of @samp{gettext (\"Translatable "
"string\")}.  Further, the coding rule, from GNU standards, wanting that "
"there is a space between the keyword and the opening parenthesis is relaxed, "
"in practice, for this particular usage.  So, the textual overhead per "
"translatable string is reduced to only three characters: the underline and "
"the two parentheses.  However, even if GNU @code{gettext} uses this "
"convention internally, it does not offer it officially.  The real, genuine "
"keyword is truly @samp{gettext} indeed.  It is fairly easy for those wanting "
"to use @samp{_} instead of @samp{gettext} to declare:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2293 original_texis/gettext.texi:2891 original_texis/gettext.texi:6687
#, no-wrap
msgid ""
"#include <libintl.h>\n"
"#define _(String) gettext (String)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2297
msgid "instead of merely using @samp{#include <libintl.h>}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2306
msgid ""
"The marking keywords @samp{gettext} and @samp{_} take the translatable "
"string as sole argument.  It is also possible to define marking functions "
"that take it at another argument position.  It is even possible to make the "
"marked argument position depend on the total number of arguments of the "
"function call; this is useful in C++.  All this is achieved using "
"@code{xgettext}'s @samp{--keyword} option.  How to pass such an option to "
"@code{xgettext}, assuming that @code{gettextize} is used, is described in "
"@ref{po/Makevars} and @ref{AM_XGETTEXT_OPTION}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2311
msgid ""
"Note also that long strings can be split across lines, into multiple "
"adjacent string tokens.  Automatic string concatenation is performed at "
"compile time according to ISO C and ISO C++; @code{xgettext} also supports "
"this syntax."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2319
msgid ""
"Later on, the maintenance is relatively easy.  If, as a programmer, you add "
"or modify a string, you will have to ask yourself if the new or altered "
"string requires translation, and include it within @samp{_()} if you think "
"it should be translated.  For example, @samp{\"%s\"} is an example of string "
"@emph{not} requiring translation.  But @samp{\"%s: %d\"} @emph{does} require "
"translation, because in French, unlike in English, it's customary to put a "
"space before a colon."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:2322
#, no-wrap
msgid "marking strings for translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2334
msgid ""
"In PO mode, one set of features is meant more for the programmer than for "
"the translator, and allows him to interactively mark which strings, in a set "
"of program sources, are translatable, and which are not.  Even if it is a "
"fairly easy job for a programmer to find and mark such strings by other "
"means, using any editor of his choice, PO mode makes this work more "
"comfortable.  Further, this gives translators who feel a little like "
"programmers, or programmers who feel a little like translators, a tool "
"letting them work at marking translatable strings in the program sources, "
"while simultaneously producing a set of translation in some language, for "
"the package being internationalized."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:2335
#, no-wrap
msgid "@code{etags}, using for marking strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2341
msgid ""
"The set of program sources, targeted by the PO mode commands describe here, "
"should have an Emacs tags table constructed for your project, prior to using "
"these PO file commands.  This is easy to do.  In any shell window, change "
"the directory to the root of your project, then execute a command "
"resembling:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2344
#, no-wrap
msgid "etags src/*.[hc] lib/*.[hc]\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2352
msgid ""
"presuming here you want to process all @file{.h} and @file{.c} files from "
"the @file{src/} and @file{lib/} directories.  This command will explore all "
"said files and create a @file{TAGS} file in your root directory, somewhat "
"summarizing the contents using a special file format Emacs can understand."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:2353
#, no-wrap
msgid "@file{TAGS}, and marking translatable strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2357
msgid ""
"For packages following the GNU coding standards, there is a make goal "
"@code{tags} or @code{TAGS} which constructs the tag files in all directories "
"and for all files containing source code."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2365
msgid ""
"Once your @file{TAGS} file is ready, the following commands assist the "
"programmer at marking translatable strings in his set of sources.  But these "
"commands are necessarily driven from within a PO file window, and it is "
"likely that you do not even have such a PO file yet.  This is not a problem "
"at all, as you may safely open a new, empty PO file, mainly for using these "
"commands.  This empty PO file will slowly fill in while you mark strings as "
"translatable in your program sources."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2367
#, no-wrap
msgid ","
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:2368
#, no-wrap
msgid ",@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:2371
msgid ""
"Search through program sources for a string which looks like a candidate for "
"translation (@code{po-tags-search})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2372
#, no-wrap
msgid "M-,"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:2373
#, no-wrap
msgid "M-,@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:2375
msgid "Mark the last string found with @samp{_()} (@code{po-mark-translatable})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2376
#, no-wrap
msgid "M-."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:2377
#, no-wrap
msgid "M-.@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:2381
msgid ""
"Mark the last string found with a keyword taken from a set of possible "
"keywords.  This command with a prefix allows some management of these "
"keywords (@code{po-select-mark-and-mark})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:2384
#, no-wrap
msgid "po-tags-search@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2395
msgid ""
"The @kbd{,} (@code{po-tags-search}) command searches for the next occurrence "
"of a string which looks like a possible candidate for translation, and "
"displays the program source in another Emacs window, positioned in such a "
"way that the string is near the top of this other window.  If the string is "
"too big to fit whole in this window, it is positioned so only its end is "
"shown.  In any case, the cursor is left in the PO file window.  If the shown "
"string would be better presented differently in different native languages, "
"you may mark it using @kbd{M-,} or @kbd{M-.}.  Otherwise, you might rather "
"ignore it and skip to the next string by merely repeating the @kbd{,} "
"command."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2402
msgid ""
"A string is a good candidate for translation if it contains a sequence of "
"three or more letters.  A string containing at most two letters in a row "
"will be considered as a candidate if it has more letters than non-letters.  "
"The command disregards strings containing no letters, or isolated letters "
"only.  It also disregards strings within comments, or strings already marked "
"with some keyword PO mode knows (see below)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2409
msgid ""
"If you have never told Emacs about some @file{TAGS} file to use, the command "
"will request that you specify one from the minibuffer, the first time you "
"use the command.  You may later change your @file{TAGS} file by using the "
"regular Emacs command @w{@kbd{M-x visit-tags-table}}, which will ask you to "
"name the precise @file{TAGS} file you want to use.  @xref{Tags, , Tag "
"Tables, emacs, The Emacs Editor}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2417
msgid ""
"Each time you use the @kbd{,} command, the search resumes from where it was "
"left by the previous search, and goes through all program sources, obeying "
"the @file{TAGS} file, until all sources have been processed.  However, by "
"giving a prefix argument to the command @w{(@kbd{C-u ,})}, you may request "
"that the search be restarted all over again from the first program source; "
"but in this case, strings that you recently marked as translatable will be "
"automatically skipped."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2425
msgid ""
"Using this @kbd{,} command does not prevent using of other regular Emacs "
"tags commands.  For example, regular @code{tags-search} or "
"@code{tags-query-replace} commands may be used without disrupting the "
"independent @kbd{,} search sequence.  However, as implemented, the "
"@emph{initial} @kbd{,} command (or the @kbd{,} command is used with a "
"prefix) might also reinitialize the regular Emacs tags searching to the "
"first tags file, this reinitialization might be considered spurious."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:2426
#, no-wrap
msgid "po-mark-translatable@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:2427
#, no-wrap
msgid "po-select-mark-and-mark@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2444
msgid ""
"The @kbd{M-,} (@code{po-mark-translatable}) command will mark the recently "
"found string with the @samp{_} keyword.  The @kbd{M-.} "
"(@code{po-select-mark-and-mark}) command will request that you type one "
"keyword from the minibuffer and use that keyword for marking the string.  "
"Both commands will automatically create a new PO file untranslated entry for "
"the string being marked, and make it the current entry (making it easy for "
"you to immediately proceed to its translation, if you feel like doing it "
"right away).  It is possible that the modifications made to the program "
"source by @kbd{M-,} or @kbd{M-.} render some source line longer than 80 "
"columns, forcing you to break and re-indent this line differently.  You may "
"use the @kbd{O} command from PO mode, or any other window changing command "
"from Emacs, to break out into the program source window, and do any needed "
"adjustments.  You will have to use some regular Emacs command to return the "
"cursor to the PO file window, if you want command @kbd{,} for the next "
"string, say."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2453
msgid ""
"The @kbd{M-.} command has a few built-in speedups, so you do not have to "
"explicitly type all keywords all the time.  The first such speedup is that "
"you are presented with a @emph{preferred} keyword, which you may accept by "
"merely typing @kbd{@key{RET}} at the prompt.  The second speedup is that you "
"may type any non-ambiguous prefix of the keyword you really mean, and the "
"command will complete it automatically for you.  This also means that PO "
"mode has to @emph{know} all your possible keywords, and that it will not "
"accept mistyped keywords."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2464
msgid ""
"If you reply @kbd{?} to the keyword request, the command gives a list of all "
"known keywords, from which you may choose.  When the command is prefixed by "
"an argument @w{(@kbd{C-u M-.})}, it inhibits updating any program source or "
"PO file buffer, and does some simple keyword management instead.  In this "
"case, the command asks for a keyword, written in full, which becomes a new "
"allowed keyword for later @kbd{M-.} commands.  Moreover, this new keyword "
"automatically becomes the @emph{preferred} keyword for later commands.  By "
"typing an already known keyword in response to @w{@kbd{C-u M-.}}, one merely "
"changes the @emph{preferred} keyword and does nothing more."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2475
msgid ""
"All keywords known for @kbd{M-.} are recognized by the @kbd{,} command when "
"scanning for strings, and strings already marked by any of those known "
"keywords are automatically skipped.  If many PO files are opened "
"simultaneously, each one has its own independent set of known keywords.  "
"There is no provision in PO mode, currently, for deleting a known keyword, "
"you have to quit the file (maybe using @kbd{q}) and reopen it afresh.  When "
"a PO file is newly brought up in an Emacs window, only @samp{gettext} and "
"@samp{_} are known as keywords, and @samp{gettext} is preferred for the "
"@kbd{M-.} command.  In fact, this is not useful to prefer @samp{_}, as this "
"one is already built in the @kbd{M-,} command."
msgstr ""

#. type: section
#: original_texis/gettext.texi:2477
#, no-wrap
msgid "Special Comments preceding Keywords"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2481
#, no-wrap
msgid "format strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2486
msgid ""
"In C programs strings are often used within calls of functions from the "
"@code{printf} family.  The special thing about these format strings is that "
"they can contain format specifiers introduced with @kbd{%}.  Assume we have "
"the code"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2489
#, no-wrap
msgid "printf (gettext (\"String `%s' has %d characters\\n\"), s, strlen (s));\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2493
msgid "A possible German translation for the above string might be:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2496
#, no-wrap
msgid "\"%d Zeichen lang ist die Zeichenkette `%s'\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2503
msgid ""
"A C programmer, even if he cannot speak German, will recognize that there is "
"something wrong here.  The order of the two format specifiers is changed but "
"of course the arguments in the @code{printf} don't have.  This will most "
"probably lead to problems because now the length of the string is regarded "
"as the address."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2511
msgid ""
"To prevent errors at runtime caused by translations, the @code{msgfmt} tool "
"can check statically whether the arguments in the original and the "
"translation string match in type and number.  If this is not the case and "
"the @samp{-c} option has been passed to @code{msgfmt}, @code{msgfmt} will "
"give an error and refuse to produce a MO file.  Thus consistent use of "
"@samp{msgfmt -c} will catch the error, so that it cannot cause problems at "
"runtime."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2515
msgid ""
"If the word order in the above German translation would be correct one would "
"have to write"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2518
#, no-wrap
msgid "\"%2$d Zeichen lang ist die Zeichenkette `%1$s'\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2522
msgid "The routines in @code{msgfmt} know about this special notation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2527
msgid ""
"Because not all strings in a program will be format strings, it is not "
"useful for @code{msgfmt} to test all the strings in the @file{.po} file.  "
"This might cause problems because the string might contain what looks like a "
"format specifier, but the string is not used in @code{printf}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2532
msgid ""
"Therefore @code{xgettext} adds a special tag to those messages it thinks "
"might be a format string.  There is no absolute rule for this, only a "
"heuristic.  In the @file{.po} file the entry is marked using the "
"@code{c-format} flag in the @code{#,} comment line (@pxref{PO Files})."
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:2533
#, no-wrap
msgid "c-format@r{, and @code{xgettext}}"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:2534
#, no-wrap
msgid "no-c-format@r{, and @code{xgettext}}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2547
msgid ""
"The careful reader now might say that this again can cause problems.  The "
"heuristic might guess it wrong.  This is true and therefore @code{xgettext} "
"knows about a special kind of comment which lets the programmer take over "
"the decision.  If in the same line as or the immediately preceding line to "
"the @code{gettext} keyword the @code{xgettext} program finds a comment "
"containing the words @code{xgettext:c-format}, it will mark the string in "
"any case with the @code{c-format} flag.  This kind of comment should be used "
"when @code{xgettext} does not recognize the string as a format string but it "
"really is one and it should be tested.  Please note that when the comment is "
"in the same line as the @code{gettext} keyword, it must be before the string "
"to be translated."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2555
msgid ""
"This situation happens quite often.  The @code{printf} function is often "
"called with strings which do not contain a format specifier.  Of course one "
"would normally use @code{fputs} but it does happen.  In this case "
"@code{xgettext} does not recognize this as a format string but what happens "
"if the translation introduces a valid format specifier? The @code{printf} "
"function will try to access one of the parameters but none exists because "
"the original code does not pass any parameters."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2562
msgid ""
"@code{xgettext} of course could make a wrong decision the other way round, "
"i.e.@: a string marked as a format string actually is not a format string.  "
"In this case the @code{msgfmt} might give too many warnings and would "
"prevent translating the @file{.po} file.  The method to prevent this wrong "
"decision is similar to the one used above, only the comment to use must "
"contain the string @code{xgettext:no-c-format}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2567
msgid ""
"If a string is marked with @code{c-format} and this is not correct the user "
"can find out who is responsible for the decision.  See @ref{xgettext "
"Invocation} to see how the @code{--debug} option can be used for solving "
"this problem."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2571
#, no-wrap
msgid "marking string initializers"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2575
msgid ""
"The attentive reader might now point out that it is not always possible to "
"mark translatable string with @code{gettext} or something like this.  "
"Consider the following case:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2587
#, no-wrap
msgid ""
"@{\n"
"  static const char *messages[] = @{\n"
"    \"some very meaningful message\",\n"
"    \"and another one\"\n"
"  @};\n"
"  const char *string;\n"
"  @dots{}\n"
"  string\n"
"    = index > 1 ? \"a default message\" : messages[index];\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2591 original_texis/gettext.texi:2622
#, no-wrap
msgid ""
"  fputs (string);\n"
"  @dots{}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2600
msgid ""
"While it is no problem to mark the string @code{\"a default message\"} it is "
"not possible to mark the string initializers for @code{messages}.  What is "
"to be done? We have to fulfill two tasks.  First we have to mark the strings "
"so that the @code{xgettext} program (@pxref{xgettext Invocation})  can find "
"them, and second we have to translate the string at runtime before printing "
"them."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2604
msgid ""
"The first task can be fulfilled by creating a new keyword, which names a "
"no-op.  For the second we have to mark all access points to a string from "
"the array.  So one solution can look like this:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2608 original_texis/gettext.texi:2636
#, no-wrap
msgid ""
"#define gettext_noop(String) String\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2618
#, no-wrap
msgid ""
"@{\n"
"  static const char *messages[] = @{\n"
"    gettext_noop (\"some very meaningful message\"),\n"
"    gettext_noop (\"and another one\")\n"
"  @};\n"
"  const char *string;\n"
"  @dots{}\n"
"  string\n"
"    = index > 1 ? gettext (\"a default message\") : gettext "
"(messages[index]);\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2629
msgid ""
"Please convince yourself that the string which is written by @code{fputs} is "
"translated in any case.  How to get @code{xgettext} know the additional "
"keyword @code{gettext_noop} is explained in @ref{xgettext Invocation}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2632
msgid ""
"The above is of course not the only solution.  You could also come along "
"with the following one:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2646
#, no-wrap
msgid ""
"@{\n"
"  static const char *messages[] = @{\n"
"    gettext_noop (\"some very meaningful message\"),\n"
"    gettext_noop (\"and another one\")\n"
"  @};\n"
"  const char *string;\n"
"  @dots{}\n"
"  string\n"
"    = index > 1 ? gettext_noop (\"a default message\") : messages[index];\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2650
#, no-wrap
msgid ""
"  fputs (gettext (string));\n"
"  @dots{}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2656
msgid ""
"But this has a drawback.  The programmer has to take care that he uses "
"@code{gettext_noop} for the string @code{\"a default message\"}.  A use of "
"@code{gettext} could have in rare cases unpredictable results."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2661
msgid ""
"One advantage is that you need not make control flow analysis to make sure "
"the output is really translated in any case.  But this analysis is generally "
"not very difficult.  If it should be in any situation you can use this "
"second method in this situation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2671
msgid ""
"Code sometimes has bugs, but translations sometimes have bugs too.  The "
"users need to be able to report them.  Reporting translation bugs to the "
"programmer or maintainer of a package is not very useful, since the "
"maintainer must never change a translation, except on behalf of the "
"translator.  Hence the translation bugs must be reported to the translators."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2675
msgid ""
"Here is a way to organize this so that the maintainer does not need to "
"forward translation bug reports, nor even keep a list of the addresses of "
"the translators or their translation teams."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2681
msgid ""
"Every program has a place where is shows the bug report address.  For GNU "
"programs, it is the code which handles the ``--help'' option, typically in a "
"function called ``usage''.  In this place, instruct the translator to add "
"her own bug reporting address.  For example, if that code has a statement"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2685
#, no-wrap
msgid "printf (_(\"Report bugs to <%s>.\\n\"), PACKAGE_BUGREPORT);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2689
msgid "you can add some translator instructions like this:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2697
#, no-wrap
msgid ""
"/* TRANSLATORS: The placeholder indicates the bug-reporting address\n"
"   for this package.  Please add _another line_ saying\n"
"   \"Report translation bugs to <...>\\n\" with the address for "
"translation\n"
"   bugs (typically your translation team's web or email address).  */\n"
"printf (_(\"Report bugs to <%s>.\\n\"), PACKAGE_BUGREPORT);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2702
msgid ""
"These will be extracted by @samp{xgettext}, leading to a .pot file that "
"contains this:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2713
#, no-wrap
msgid ""
"#. TRANSLATORS: The placeholder indicates the bug-reporting address\n"
"#. for this package.  Please add _another line_ saying\n"
"#. \"Report translation bugs to <...>\\n\" with the address for "
"translation\n"
"#. bugs (typically your translation team's web or email address).\n"
"#: src/hello.c:178\n"
"#, c-format\n"
"msgid \"Report bugs to <%s>.\\n\"\n"
"msgstr \"\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2730
msgid ""
"Should names of persons, cities, locations etc. be marked for translation or "
"not? People who only know languages that can be written with Latin letters "
"(English, Spanish, French, German, etc.) are tempted to say ``no'', because "
"names usually do not change when transported between these languages.  "
"However, in general when translating from one script to another, names are "
"translated too, usually phonetically or by transliteration.  For example, "
"Russian or Greek names are converted to the Latin alphabet when being "
"translated to English, and English or French names are converted to the "
"Katakana script when being translated to Japanese.  This is necessary "
"because the speakers of the target language in general cannot read the "
"script the name is originally written in."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2735
msgid ""
"As a programmer, you should therefore make sure that names are marked for "
"translation, with a special comment telling the translators that it is a "
"proper name and how to pronounce it.  In its simple form, it looks like "
"this:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2745
#, no-wrap
msgid ""
"printf (_(\"Written by %s.\\n\"),\n"
"        /* TRANSLATORS: This is a proper name.  See the gettext\n"
"           manual, section Names.  Note this is actually a non-ASCII\n"
"           name: The first name is (with Unicode escapes)\n"
"           \"Fran\\u00e7ois\" or (with HTML entities) \"Fran&ccedil;ois\".\n"
"           Pronunciation is like \"fraa-swa pee-nar\".  */\n"
"        _(\"Francois Pinard\"));\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2756
msgid ""
"The GNU gnulib library offers a module @samp{propername} "
"(@url{https://www.gnu.org/software/gnulib/MODULES.html#module=propername})  "
"which takes care to automatically append the original name, in parentheses, "
"to the translated name.  For names that cannot be written in ASCII, it also "
"frees the translator from the task of entering the appropriate non-ASCII "
"characters if no script change is needed.  In this more comfortable form, it "
"looks like this:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2767
#, no-wrap
msgid ""
"printf (_(\"Written by %s and %s.\\n\"),\n"
"        proper_name (\"Ulrich Drepper\"),\n"
"        /* TRANSLATORS: This is a proper name.  See the gettext\n"
"           manual, section Names.  Note this is actually a non-ASCII\n"
"           name: The first name is (with Unicode escapes)\n"
"           \"Fran\\u00e7ois\" or (with HTML entities) \"Fran&ccedil;ois\".\n"
"           Pronunciation is like \"fraa-swa pee-nar\".  */\n"
"        proper_name_utf8 (\"Francois Pinard\", \"Fran\\303\\247ois "
"Pinard\"));\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2775
msgid ""
"You can also write the original name directly in Unicode (rather than with "
"Unicode escapes or HTML entities) and denote the pronunciation using the "
"International Phonetic Alphabet (see "
"@url{https://en.wikipedia.org/wiki/International_Phonetic_Alphabet})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2778
msgid ""
"As a translator, you should use some care when translating names, because it "
"is frustrating if people see their names mutilated or distorted."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2790
msgid ""
"If your language uses the Latin script, all you need to do is to reproduce "
"the name as perfectly as you can within the usual character set of your "
"language.  In this particular case, this means to provide a translation "
"containing the c-cedilla character.  If your language uses a different "
"script and the people speaking it don't usually read Latin words, it means "
"transliteration.  If the programmer used the simple case, you should still "
"give, in parentheses, the original writing of the name -- for the sake of "
"the people that do read the Latin script.  If the programmer used the "
"@samp{propername} module mentioned above, you don't need to give the "
"original writing of the name in parentheses, because the program will "
"already do so.  Here is an example, using Greek as the target script:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2801
#, no-wrap
msgid ""
"#. This is a proper name.  See the gettext\n"
"#. manual, section Names.  Note this is actually a non-ASCII\n"
"#. name: The first name is (with Unicode escapes)\n"
"#. \"Fran\\u00e7ois\" or (with HTML entities) \"Fran&ccedil;ois\".\n"
"#. Pronunciation is like \"fraa-swa pee-nar\".\n"
"msgid \"Francois Pinard\"\n"
"msgstr \"\\phi\\rho\\alpha\\sigma\\omicron\\alpha "
"\\pi\\iota\\nu\\alpha\\rho\"\n"
"       \" (Francois Pinard)\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2806
msgid ""
"Because translation of names is such a sensitive domain, it is a good idea "
"to test your translation before submitting it."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2815
msgid ""
"When you are preparing a library, not a program, for the use of "
"@code{gettext}, only a few details are different.  Here we assume that the "
"library has a translation domain and a POT file of its own.  (If it uses the "
"translation domain and POT file of the main program, then the previous "
"sections apply without changes.)"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2822
msgid ""
"The library code doesn't call @code{setlocale (LC_ALL, \"\")}.  It's the "
"responsibility of the main program to set the locale.  The library's "
"documentation should mention this fact, so that developers of programs using "
"the library are aware of it."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2826
msgid ""
"The library code doesn't call @code{textdomain (PACKAGE)}, because it would "
"interfere with the text domain set by the main program."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2829
msgid "The initialization code for a program was"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:2834
#, no-wrap
msgid ""
"  setlocale (LC_ALL, \"\");\n"
"  bindtextdomain (PACKAGE, LOCALEDIR);\n"
"  textdomain (PACKAGE);\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2838
msgid "For a library it is reduced to"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:2841
#, no-wrap
msgid "  bindtextdomain (PACKAGE, LOCALEDIR);\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2851
msgid ""
"If your library's API doesn't already have an initialization function, you "
"need to create one, containing at least the @code{bindtextdomain} "
"invocation.  However, you usually don't need to export and document this "
"initialization function: It is sufficient that all entry points of the "
"library call the initialization function if it hasn't been called before.  "
"The typical idiom used to achieve this is a static boolean variable that "
"indicates whether the initialization function has been called. Like this:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2855
#, no-wrap
msgid ""
"static bool libfoo_initialized;\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2862
#, no-wrap
msgid ""
"static void\n"
"libfoo_initialize (void)\n"
"@{\n"
"  bindtextdomain (PACKAGE, LOCALEDIR);\n"
"  libfoo_initialized = true;\n"
"@}\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2872
#, no-wrap
msgid ""
"/* This function is part of the exported API.  */\n"
"struct foo *\n"
"create_foo (...)\n"
"@{\n"
"  /* Must ensure the initialization is performed.  */\n"
"  if (!libfoo_initialized)\n"
"    libfoo_initialize ();\n"
"  ...\n"
"@}\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:2882
#, no-wrap
msgid ""
"/* This function is part of the exported API.  The argument must be\n"
"   non-NULL and have been created through create_foo().  */\n"
"int\n"
"foo_refcount (struct foo *argument)\n"
"@{\n"
"  /* No need to invoke the initialization function here, because\n"
"     create_foo() must already have been called before.  */\n"
"  ...\n"
"@}\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2887
msgid "The usual declaration of the @samp{_} macro in each source file was"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2896
msgid ""
"for a program.  For a library, which has its own translation domain, it "
"reads like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:2900
#, no-wrap
msgid ""
"#include <libintl.h>\n"
"#define _(String) dgettext (PACKAGE, String)\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:2905
msgid ""
"In other words, @code{dgettext} is used instead of @code{gettext}.  "
"Similarly, the @code{dngettext} function should be used in place of the "
"@code{ngettext} function."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2909
#, no-wrap
msgid "PO template file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2913
msgid ""
"After preparing the sources, the programmer creates a PO template file.  "
"This section explains how to use @code{xgettext} for this purpose."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2920
msgid ""
"@code{xgettext} creates a file named @file{@var{domainname}.po}.  You should "
"then rename it to @file{@var{domainname}.pot}.  (Why doesn't @code{xgettext} "
"create it under the name @file{@var{domainname}.pot} right away? The answer "
"is: for historical reasons.  When @code{xgettext} was specified, the "
"distinction between a PO file and PO file template was fuzzy, and the suffix "
"@samp{.pot} wasn't in use at that time.)"
msgstr ""

#. type: include
#: original_texis/gettext.texi:2930
#, no-wrap
msgid "xgettext.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2934
#, no-wrap
msgid "creating a new PO file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2940
msgid ""
"When starting a new translation, the translator creates a file called "
"@file{@var{LANG}.po}, as a copy of the @file{@var{package}.pot} template "
"file with modifications in the initial comments (at the beginning of the "
"file)  and in the header entry (the first entry, near the beginning of the "
"file)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2943
msgid ""
"The easiest way to do so is by use of the @samp{msginit} program.  For "
"example:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:2948
#, no-wrap
msgid ""
"$ cd @var{PACKAGE}-@var{VERSION}\n"
"$ cd po\n"
"$ msginit\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2954
msgid ""
"The alternative way is to do the copy and modifications by hand.  To do so, "
"the translator copies @file{@var{package}.pot} to @file{@var{LANG}.po}.  "
"Then she modifies the initial comments and the header entry of this file."
msgstr ""

#. type: include
#: original_texis/gettext.texi:2963
#, no-wrap
msgid "msginit.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:2967
#, no-wrap
msgid "header entry of a PO file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2974
msgid ""
"The initial comments \"SOME DESCRIPTIVE TITLE\", \"YEAR\" and \"FIRST AUTHOR "
"<EMAIL@@ADDRESS>, YEAR\" ought to be replaced by sensible information.  This "
"can be done in any text editor; if Emacs is used and it switched to PO mode "
"automatically (because it has recognized the file's suffix), you can disable "
"it by typing @kbd{M-x fundamental-mode}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:2978
msgid ""
"Modifying the header entry can already be done using PO mode: in Emacs, type "
"@kbd{M-x po-mode RET} and then @kbd{RET} again to start editing the entry.  "
"You should fill in the following fields."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2980
#, no-wrap
msgid "Project-Id-Version"
msgstr ""

#. type: table
#: original_texis/gettext.texi:2983
msgid ""
"This is the name and version of the package.  Fill it in if it has not "
"already been filled in by @code{xgettext}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2984
#, no-wrap
msgid "Report-Msgid-Bugs-To"
msgstr ""

#. type: table
#: original_texis/gettext.texi:2987
msgid ""
"This has already been filled in by @code{xgettext}.  It contains an email "
"address or URL where you can report bugs in the untranslated strings:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:2989
#, no-wrap
msgid "Strings which are not entire sentences, see the maintainer guidelines"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:2991
msgid "in @ref{Preparing Strings}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2991
#, no-wrap
msgid "Strings which use unclear terms or require additional context to be"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:2993
msgid "understood."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2993
#, no-wrap
msgid "Strings which make invalid assumptions about notation of date, time or"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:2995
msgid "money."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2995
#, no-wrap
msgid "Pluralisation problems."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2996
#, no-wrap
msgid "Incorrect English spelling."
msgstr ""

#. type: item
#: original_texis/gettext.texi:2997
#, no-wrap
msgid "Incorrect formatting."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3000
#, no-wrap
msgid "POT-Creation-Date"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3002
msgid "This has already been filled in by @code{xgettext}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3003
#, no-wrap
msgid "PO-Revision-Date"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3006
msgid ""
"You don't need to fill this in.  It will be filled by the PO file editor "
"when you save the file."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3007
#, no-wrap
msgid "Last-Translator"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3009
msgid "Fill in your name and email address (without double quotes)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3010
#, no-wrap
msgid "Language-Team"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3013
msgid ""
"Fill in the English name of the language, and the email address or homepage "
"URL of the language team you are part of."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3017
msgid ""
"Before starting a translation, it is a good idea to get in touch with your "
"translation team, not only to make sure you don't do duplicated work, but "
"also to coordinate difficult linguistic issues."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3018
#, no-wrap
msgid "list of translation teams, where to find"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3023
msgid ""
"In the Free Translation Project, each translation team has its own mailing "
"list.  The up-to-date list of teams can be found at the Free Translation "
"Project's homepage, @uref{https://translationproject.org/}, in the \"Teams\" "
"area."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3024
#, no-wrap
msgid "Language"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3031
msgid ""
"Fill in the language code of the language.  This can be in one of three "
"forms:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3036
msgid ""
"@samp{@var{ll}}, an @w{ISO 639} two-letter language code (lowercase).  See "
"@ref{Language Codes} for the list of codes."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3045
msgid ""
"@samp{@var{ll}_@var{CC}}, where @samp{@var{ll}} is an @w{ISO 639} two-letter "
"language code (lowercase) and @samp{@var{CC}} is an @w{ISO 3166} two-letter "
"country code (uppercase).  The country code specification is not redundant: "
"Some languages have dialects in different countries.  For example, "
"@samp{de_AT} is used for Austria, and @samp{pt_BR} for Brazil.  The country "
"code serves to distinguish the dialects. See @ref{Language Codes} and "
"@ref{Country Codes} for the lists of codes."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3052
msgid ""
"@samp{@var{ll}_@var{CC}@@@var{variant}}, where @samp{@var{ll}} is an @w{ISO "
"639} two-letter language code (lowercase), @samp{@var{CC}} is an @w{ISO "
"3166} two-letter country code (uppercase), and @samp{@var{variant}} is a "
"variant designator. The variant designator (lowercase) can be a script "
"designator, such as @samp{latin} or @samp{cyrillic}."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3056
msgid ""
"The naming convention @samp{@var{ll}_@var{CC}} is also the way locales are "
"named on systems based on GNU libc.  But there are three important "
"differences:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3064
msgid ""
"In this PO file field, but not in locale names, @samp{@var{ll}_@var{CC}} "
"combinations denoting a language's main dialect are abbreviated as "
"@samp{@var{ll}}.  For example, @samp{de} is equivalent to @samp{de_DE} "
"(German as spoken in Germany), and @samp{pt} to @samp{pt_PT} (Portuguese as "
"spoken in Portugal) in this context."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3067
msgid "In this PO file field, suffixes like @samp{.@var{encoding}} are not used."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3071
msgid ""
"In this PO file field, variant designators that are not relevant to message "
"translation, such as @samp{@@euro}, are not used."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3075
msgid ""
"So, if your locale name is @samp{de_DE.UTF-8}, the language specification in "
"PO files is just @samp{de}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3076
#, no-wrap
msgid "Content-Type"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3077
#, no-wrap
msgid "encoding of PO files"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3078
#, no-wrap
msgid "charset of PO files"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3083
msgid ""
"Replace @samp{CHARSET} with the character encoding used for your language, "
"in your locale, or UTF-8.  This field is needed for correct operation of the "
"@code{msgmerge} and @code{msgfmt} programs, as well as for users whose "
"locale's character encoding differs from yours (see @ref{Charset "
"conversion})."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3084
#, no-wrap
msgid "@code{locale} program"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3091
msgid ""
"You get the character encoding of your locale by running the shell command "
"@samp{locale charmap}.  If the result is @samp{C} or @samp{ANSI_X3.4-1968}, "
"which is equivalent to @samp{ASCII} (= @samp{US-ASCII}), it means that your "
"locale is not correctly configured.  In this case, ask your translation team "
"which charset to use.  @samp{ASCII} is not usable for any language except "
"Latin."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3092
#, no-wrap
msgid "encoding list"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3108
msgid ""
"Because the PO files must be portable to operating systems with less "
"advanced internationalization facilities, the character encodings that can "
"be used are limited to those supported by both GNU @code{libc} and GNU "
"@code{libiconv}.  These are: @code{ASCII}, @code{ISO-8859-1}, "
"@code{ISO-8859-2}, @code{ISO-8859-3}, @code{ISO-8859-4}, @code{ISO-8859-5}, "
"@code{ISO-8859-6}, @code{ISO-8859-7}, @code{ISO-8859-8}, @code{ISO-8859-9}, "
"@code{ISO-8859-13}, @code{ISO-8859-14}, @code{ISO-8859-15}, @code{KOI8-R}, "
"@code{KOI8-U}, @code{KOI8-T}, @code{CP850}, @code{CP866}, @code{CP874}, "
"@code{CP932}, @code{CP949}, @code{CP950}, @code{CP1250}, @code{CP1251}, "
"@code{CP1252}, @code{CP1253}, @code{CP1254}, @code{CP1255}, @code{CP1256}, "
"@code{CP1257}, @code{GB2312}, @code{EUC-JP}, @code{EUC-KR}, @code{EUC-TW}, "
"@code{BIG5}, @code{BIG5-HKSCS}, @code{GBK}, @code{GB18030}, "
"@code{SHIFT_JIS}, @code{JOHAB}, @code{TIS-620}, @code{VISCII}, "
"@code{GEORGIAN-PS}, @code{UTF-8}."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3113
msgid ""
"In the GNU system, the following encodings are frequently used for the "
"corresponding languages."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3114
#, no-wrap
msgid "encoding for your language"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3116
#, no-wrap
msgid "@code{ISO-8859-1} for"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3122
msgid ""
"Afrikaans, Albanian, Basque, Breton, Catalan, Cornish, Danish, Dutch, "
"English, Estonian, Faroese, Finnish, French, Galician, German, Greenlandic, "
"Icelandic, Indonesian, Irish, Italian, Malay, Manx, Norwegian, Occitan, "
"Portuguese, Spanish, Swedish, Tagalog, Uzbek, Walloon,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3122
#, no-wrap
msgid "@code{ISO-8859-2} for"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3125
msgid ""
"Bosnian, Croatian, Czech, Hungarian, Polish, Romanian, Serbian, Slovak, "
"Slovenian,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3125
#, no-wrap
msgid "@code{ISO-8859-3} for Maltese,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3126
#, no-wrap
msgid "@code{ISO-8859-5} for Macedonian, Serbian,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3127
#, no-wrap
msgid "@code{ISO-8859-6} for Arabic,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3128
#, no-wrap
msgid "@code{ISO-8859-7} for Greek,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3129
#, no-wrap
msgid "@code{ISO-8859-8} for Hebrew,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3130
#, no-wrap
msgid "@code{ISO-8859-9} for Turkish,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3131
#, no-wrap
msgid "@code{ISO-8859-13} for Latvian, Lithuanian, Maori,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3132
#, no-wrap
msgid "@code{ISO-8859-14} for Welsh,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3133
#, no-wrap
msgid "@code{ISO-8859-15} for"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3136
msgid ""
"Basque, Catalan, Dutch, English, Finnish, French, Galician, German, Irish, "
"Italian, Portuguese, Spanish, Swedish, Walloon,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3136
#, no-wrap
msgid "@code{KOI8-R} for Russian,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3137
#, no-wrap
msgid "@code{KOI8-U} for Ukrainian,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3138
#, no-wrap
msgid "@code{KOI8-T} for Tajik,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3139
#, no-wrap
msgid "@code{CP1251} for Bulgarian, Belarusian,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3140
#, no-wrap
msgid "@code{GB2312}, @code{GBK}, @code{GB18030}"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3142
msgid "for simplified writing of Chinese,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3142
#, no-wrap
msgid "@code{BIG5}, @code{BIG5-HKSCS}"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:3144
msgid "for traditional writing of Chinese,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3144
#, no-wrap
msgid "@code{EUC-JP} for Japanese,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3145
#, no-wrap
msgid "@code{EUC-KR} for Korean,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3146
#, no-wrap
msgid "@code{TIS-620} for Thai,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3147
#, no-wrap
msgid "@code{GEORGIAN-PS} for Georgian,"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3148
#, no-wrap
msgid "@code{UTF-8} for any language, including those listed above."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3151
#, no-wrap
msgid "quote characters, use in PO files"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3152 original_texis/gettext.texi:7907
#, no-wrap
msgid "quotation marks"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3163
msgid ""
"When single quote characters or double quote characters are used in "
"translations for your language, and your locale's encoding is one of the "
"ISO-8859-* charsets, it is best if you create your PO files in UTF-8 "
"encoding, instead of your locale's encoding.  This is because in UTF-8 the "
"real quote characters can be represented (single quote characters: U+2018, "
"U+2019, double quote characters: U+201C, U+201D), whereas none of ISO-8859-* "
"charsets has them all.  Users in UTF-8 locales will see the real quote "
"characters, whereas users in ISO-8859-* locales will see the vertical "
"apostrophe and the vertical double quote instead (because that's what the "
"character set conversion will transliterate them to)."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3164
#, no-wrap
msgid "@code{xmodmap} program, and typing quotation marks"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3170
msgid ""
"To enter such quote characters under X11, you can change your keyboard "
"mapping using the @code{xmodmap} program.  The X11 names of the quote "
"characters are \"leftsinglequotemark\", \"rightsinglequotemark\", "
"\"leftdoublequotemark\", \"rightdoublequotemark\", \"singlelowquotemark\", "
"\"doublelowquotemark\"."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3174
msgid ""
"Note that only recent versions of GNU Emacs support the UTF-8 encoding: "
"Emacs 20 with Mule-UCS, and Emacs 21.  As of January 2001, XEmacs doesn't "
"support the UTF-8 encoding."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3177
msgid ""
"The character encoding name can be written in either upper or lower case.  "
"Usually upper case is preferred."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3178
#, no-wrap
msgid "Content-Transfer-Encoding"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3180
msgid "Set this to @code{8bit}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3181
#, no-wrap
msgid "Plural-Forms"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3186
msgid ""
"This field is optional.  It is only needed if the PO file has plural forms.  "
"You can find them by searching for the @samp{msgid_plural} keyword.  The "
"format of the plural forms field is described in @ref{Plural forms} and "
"@ref{Translating plural forms}."
msgstr ""

#. type: include
#: original_texis/gettext.texi:3198
#, no-wrap
msgid "msgmerge.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3213
#, no-wrap
msgid "KDE PO file editor"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3217
#, no-wrap
msgid "GNOME PO file editor"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3221
#, no-wrap
msgid "Emacs PO Mode"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3234
msgid ""
"For those of you being the lucky users of Emacs, PO mode has been "
"specifically created for providing a cozy environment for editing or "
"modifying PO files.  While editing a PO file, PO mode allows for the easy "
"browsing of auxiliary and compendium PO files, as well as for following "
"references into the set of C program sources from which PO files have been "
"derived.  It has a few special features, among which are the interactive "
"marking of program strings as translatable, and the validation of PO files "
"with easy repositioning to PO file lines showing errors."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3239
msgid ""
"For the beginning, besides main PO mode commands (@pxref{Main PO Commands}), "
"you should know how to move between entries (@pxref{Entry Positioning}), and "
"how to handle untranslated entries (@pxref{Untranslated Entries})."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3259
#, no-wrap
msgid "installing @code{gettext}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3260
#, no-wrap
msgid "@code{gettext} installation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3267
msgid ""
"Once you have received, unpacked, configured and compiled the GNU "
"@code{gettext} distribution, the @samp{make install} command puts in place "
"the programs @code{xgettext}, @code{msgfmt}, @code{gettext}, and "
"@code{msgmerge}, as well as their available message catalogs.  To top off a "
"comfortable installation, you might also want to make the PO mode available "
"to your Emacs users."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3268
#, no-wrap
msgid "@file{.emacs} customizations"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3269
#, no-wrap
msgid "installing PO mode"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3273
msgid ""
"During the installation of the PO mode, you might want to modify your file "
"@file{.emacs}, once and for all, so it contains a few lines looking like:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:3278
#, no-wrap
msgid ""
"(setq auto-mode-alist\n"
"      (cons '(\"\\\\.po\\\\'\\\\|\\\\.po\\\\.\" . po-mode) "
"auto-mode-alist))\n"
"(autoload 'po-mode \"po-mode\" \"Major mode for translators to edit PO "
"files\" t)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3287
msgid ""
"Later, whenever you edit some @file{.po} file, or any file having the string "
"@samp{.po.} within its name, Emacs loads @file{po-mode.elc} (or "
"@file{po-mode.el}) as needed, and automatically activates PO mode commands "
"for the associated buffer.  The string @emph{PO} appears in the mode line "
"for any buffer for which PO mode is active.  Many PO files may be active at "
"once in a single Emacs session."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3294
msgid ""
"If you are using Emacs version 20 or newer, and have already installed the "
"appropriate international fonts on your system, you may also tell Emacs how "
"to determine automatically the coding system of every PO file.  This will "
"often (but not always) cause the necessary fonts to be loaded and used for "
"displaying the translations on your Emacs screen.  For this to happen, add "
"the lines:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:3299
#, no-wrap
msgid ""
"(modify-coding-system-alist 'file \"\\\\.po\\\\'\\\\|\\\\.po\\\\.\"\n"
"                            'po-find-file-coding-system)\n"
"(autoload 'po-find-file-coding-system \"po-mode\")\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3305
msgid ""
"to your @file{.emacs} file.  If, with this, you still see boxes instead of "
"international characters, try a different font set (via Shift Mouse button "
"1)."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:3307
#, no-wrap
msgid "Main PO mode Commands"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3309
#, no-wrap
msgid "PO mode (Emacs) commands"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3310
#, no-wrap
msgid "commands"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3317
msgid ""
"After setting up Emacs with something similar to the lines in "
"@ref{Installation}, PO mode is activated for a window when Emacs finds a PO "
"file in that window.  This puts the window read-only and establishes a "
"po-mode-map, which is a genuine Emacs mode, in a way that is not derived "
"from text mode in any way.  Functions found on @code{po-mode-hook}, if any, "
"will be executed."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3329
msgid ""
"When PO mode is active in a window, the letters @samp{PO} appear in the mode "
"line for that window.  The mode line also displays how many entries of each "
"kind are held in the PO file.  For example, the string @samp{132t+3f+10u+2o} "
"would tell the translator that the PO mode contains 132 translated entries "
"(@pxref{Translated Entries}, 3 fuzzy entries (@pxref{Fuzzy Entries}), 10 "
"untranslated entries (@pxref{Untranslated Entries}) and 2 obsolete entries "
"(@pxref{Obsolete Entries}).  Zero-coefficients items are not shown.  So, in "
"this example, if the fuzzy entries were unfuzzied, the untranslated entries "
"were translated and the obsolete entries were deleted, the mode line would "
"merely display @samp{145t} for the counters."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3333
msgid ""
"The main PO commands are those which do not fit into the other categories of "
"subsequent sections.  These allow for quitting PO mode or for managing "
"windows in special ways."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3335
#, no-wrap
msgid "_"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3336 original_texis/gettext.texi:3367
#, no-wrap
msgid "_@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3338
msgid "Undo last modification to the PO file (@code{po-undo})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3339
#, no-wrap
msgid "Q"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3340 original_texis/gettext.texi:3379
#, no-wrap
msgid "Q@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3342
msgid "Quit processing and save the PO file (@code{po-quit})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3343
#, no-wrap
msgid "q"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3344 original_texis/gettext.texi:3380
#, no-wrap
msgid "q@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3346
msgid "Quit processing, possibly after confirmation (@code{po-confirm-and-quit})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3347
#, no-wrap
msgid "0"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3348 original_texis/gettext.texi:3393
#, no-wrap
msgid "0@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3350
msgid "Temporary leave the PO file window (@code{po-other-window})."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3351 original_texis/gettext.texi:10770
#, no-wrap
msgid "?"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:3352
#, no-wrap
msgid "h"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3353 original_texis/gettext.texi:3406
#, no-wrap
msgid "?@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3354 original_texis/gettext.texi:3407
#, no-wrap
msgid "h@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3356
msgid "Show help about PO mode (@code{po-help})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3357
#, no-wrap
msgid "="
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3358 original_texis/gettext.texi:3414
#, no-wrap
msgid "=@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3360
msgid "Give some PO file statistics (@code{po-statistics})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3361
#, no-wrap
msgid "V"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3362 original_texis/gettext.texi:3421
#, no-wrap
msgid "V@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3364
msgid "Batch validate the format of the whole PO file (@code{po-validate})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3368
#, no-wrap
msgid "po-undo@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3378
msgid ""
"The command @kbd{_} (@code{po-undo}) interfaces to the Emacs @emph{undo} "
"facility.  @xref{Undo, , Undoing Changes, emacs, The Emacs Editor}.  Each "
"time @kbd{_} is typed, modifications which the translator did to the PO file "
"are undone a little more.  For the purpose of undoing, each PO mode command "
"is atomic.  This is especially true for the @kbd{@key{RET}} command: the "
"whole edition made by using a single use of this command is undone at once, "
"even if the edition itself implied several actions.  However, while in the "
"editing window, one can undo the edition work quite parsimoniously."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3381
#, no-wrap
msgid "po-quit@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3382
#, no-wrap
msgid "po-confirm-and-quit@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3392
msgid ""
"The commands @kbd{Q} (@code{po-quit}) and @kbd{q} "
"(@code{po-confirm-and-quit}) are used when the translator is done with the "
"PO file.  The former is a bit less verbose than the latter.  If the file has "
"been modified, it is saved to disk first.  In both cases, and prior to all "
"this, the commands check if any untranslated messages remain in the PO file "
"and, if so, the translator is asked if she really wants to leave off working "
"with this PO file.  This is the preferred way of getting rid of an Emacs PO "
"file buffer.  Merely killing it through the usual command @w{@kbd{C-x k}} "
"(@code{kill-buffer}) is not the tidiest way to proceed."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3394
#, no-wrap
msgid "po-other-window@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3405
msgid ""
"The command @kbd{0} (@code{po-other-window}) is another, softer way, to "
"leave PO mode, temporarily.  It just moves the cursor to some other Emacs "
"window, and pops one if necessary.  For example, if the translator just got "
"PO mode to show some source context in some other, she might discover some "
"apparent bug in the program source that needs correction.  This command "
"allows the translator to change sex, become a programmer, and have the "
"cursor right into the window containing the program she (or rather "
"@emph{he}) wants to modify.  By later getting the cursor back in the PO file "
"window, or by asking Emacs to edit this file once again, PO mode is then "
"recovered."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3408
#, no-wrap
msgid "po-help@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3413
msgid ""
"The command @kbd{h} (@code{po-help}) displays a summary of all available PO "
"mode commands.  The translator should then type any character to resume "
"normal PO mode operations.  The command @kbd{?} has the same effect as "
"@kbd{h}."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3415
#, no-wrap
msgid "po-statistics@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3420
msgid ""
"The command @kbd{=} (@code{po-statistics}) computes the total number of "
"entries in the PO file, the ordinal of the current entry (counted from 1), "
"the number of untranslated entries, the number of obsolete entries, and "
"displays all these numbers."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3422
#, no-wrap
msgid "po-validate@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3430
msgid ""
"The command @kbd{V} (@code{po-validate}) launches @code{msgfmt} in checking "
"and verbose mode over the current PO file.  This command first offers to "
"save the current PO file on disk.  The @code{msgfmt} tool, from GNU "
"@code{gettext}, has the purpose of creating a MO file out of a PO file, and "
"PO mode uses the features of this program for checking the overall format of "
"a PO file, as well as all individual entries."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3431
#, no-wrap
msgid "next-error@r{, stepping through PO file validation results}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3440
msgid ""
"The program @code{msgfmt} runs asynchronously with Emacs, so the translator "
"regains control immediately while her PO file is being studied.  Error "
"output is collected in the Emacs @samp{*compilation*} buffer, displayed in "
"another window.  The regular Emacs command @kbd{C-x`} (@code{next-error}), "
"as well as other usual compile commands, allow the translator to reposition "
"quickly to the offending parts of the PO file.  Once the cursor is on the "
"line in error, the translator may decide on any PO mode action which would "
"help correcting the error."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3444
#, no-wrap
msgid "current entry of a PO file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3452
msgid ""
"The cursor in a PO file window is almost always part of an entry.  The only "
"exceptions are the special case when the cursor is after the last entry in "
"the file, or when the PO file is empty.  The entry where the cursor is found "
"to be is said to be the current entry.  Many PO mode commands operate on the "
"current entry, so moving the cursor does more than allowing the translator "
"to browse the PO file, this also selects on which entry commands operate."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3453
#, no-wrap
msgid "moving through a PO file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3458
msgid ""
"Some PO mode commands alter the position of the cursor in a specialized "
"way.  A few of those special purpose positioning are described here, the "
"others are described in following sections (for a complete list try @kbd{C-h "
"m}):"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3461
#, no-wrap
msgid "."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3462 original_texis/gettext.texi:3497
#, no-wrap
msgid ".@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3464
msgid "Redisplay the current entry (@code{po-current-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3465
#, no-wrap
msgid "n"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3466 original_texis/gettext.texi:3523
#, no-wrap
msgid "n@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3468
msgid "Select the entry after the current one (@code{po-next-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3469
#, no-wrap
msgid "p"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3470 original_texis/gettext.texi:3525
#, no-wrap
msgid "p@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3472
msgid "Select the entry before the current one (@code{po-previous-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3473
#, no-wrap
msgid "<"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3474 original_texis/gettext.texi:3533
#, no-wrap
msgid "<@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3476
msgid "Select the first entry in the PO file (@code{po-first-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3477
#, no-wrap
msgid ">"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3478 original_texis/gettext.texi:3535
#, no-wrap
msgid ">@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3480
msgid "Select the last entry in the PO file (@code{po-last-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3481
#, no-wrap
msgid "m"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3482 original_texis/gettext.texi:3555
#, no-wrap
msgid "m@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3485
msgid ""
"Record the location of the current entry for later use "
"(@code{po-push-location})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3486
#, no-wrap
msgid "r"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3487 original_texis/gettext.texi:3557
#, no-wrap
msgid "r@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3489
msgid "Return to a previously saved entry location (@code{po-pop-location})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3490
#, no-wrap
msgid "x"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3491 original_texis/gettext.texi:3574
#, no-wrap
msgid "x@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3494
msgid ""
"Exchange the current entry location with the previously saved one "
"(@code{po-exchange-location})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3498
#, no-wrap
msgid "po-current-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3508
msgid ""
"Any Emacs command able to reposition the cursor may be used to select the "
"current entry in PO mode, including commands which move by characters, "
"lines, paragraphs, screens or pages, and search commands.  However, there is "
"a kind of standard way to display the current entry in PO mode, which usual "
"Emacs commands moving the cursor do not especially try to enforce.  The "
"command @kbd{.} (@code{po-current-entry}) has the sole purpose of "
"redisplaying the current entry properly, after the current entry has been "
"changed by means external to PO mode, or the Emacs screen otherwise altered."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3522
msgid ""
"It is yet to be decided if PO mode helps the translator, or otherwise "
"irritates her, by forcing a rigid window disposition while she is doing her "
"work.  We originally had quite precise ideas about how windows should "
"behave, but on the other hand, anyone used to Emacs is often happy to keep "
"full control.  Maybe a fixed window disposition might be offered as a PO "
"mode option that the translator might activate or deactivate at will, so it "
"could be offered on an experimental basis.  If nobody feels a real need for "
"using it, or a compulsion for writing it, we should drop this whole idea.  "
"The incentive for doing it should come from translators rather than "
"programmers, as opinions from an experienced translator are surely more "
"worth to me than opinions from programmers @emph{thinking} about how "
"@emph{others} should do translation."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3524
#, no-wrap
msgid "po-next-entry@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3526
#, no-wrap
msgid "po-previous-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3532
msgid ""
"The commands @kbd{n} (@code{po-next-entry}) and @kbd{p} "
"(@code{po-previous-entry}) move the cursor the entry following, or "
"preceding, the current one.  If @kbd{n} is given while the cursor is on the "
"last entry of the PO file, or if @kbd{p} is given while the cursor is on the "
"first entry, no move is done."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3534
#, no-wrap
msgid "po-first-entry@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3536
#, no-wrap
msgid "po-last-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3547
msgid ""
"The commands @kbd{<} (@code{po-first-entry}) and @kbd{>} "
"(@code{po-last-entry}) move the cursor to the first entry, or last entry, of "
"the PO file.  When the cursor is located past the last entry in a PO file, "
"most PO mode commands will return an error saying @samp{After last entry}.  "
"Moreover, the commands @kbd{<} and @kbd{>} have the special property of "
"being able to work even when the cursor is not into some PO file entry, and "
"one may use them for nicely correcting this situation.  But even these "
"commands will fail on a truly empty PO file.  There are development plans "
"for the PO mode for it to interactively fill an empty PO file from sources.  "
"@xref{Marking}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3554
msgid ""
"The translator may decide, before working at the translation of a particular "
"entry, that she needs to browse the remainder of the PO file, maybe for "
"finding the terminology or phraseology used in related entries.  She can of "
"course use the standard Emacs idioms for saving the current cursor location "
"in some register, and use that register for getting back, or else, use the "
"location ring."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3556
#, no-wrap
msgid "po-push-location@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3558
#, no-wrap
msgid "po-pop-location@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3568
msgid ""
"PO mode offers another approach, by which cursor locations may be saved onto "
"a special stack.  The command @kbd{m} (@code{po-push-location})  merely adds "
"the location of current entry to the stack, pushing the already saved "
"locations under the new one.  The command @kbd{r} (@code{po-pop-location}) "
"consumes the top stack element and repositions the cursor to the entry "
"associated with that top element.  This position is then lost, for the next "
"@kbd{r} will move the cursor to the previously saved location, and so on "
"until no locations remain on the stack."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3573
msgid ""
"If the translator wants the position to be kept on the location stack, maybe "
"for taking a look at the entry associated with the top element, then go "
"elsewhere with the intent of getting back later, she ought to use @kbd{m} "
"immediately after @kbd{r}."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3575
#, no-wrap
msgid "po-exchange-location@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3584
msgid ""
"The command @kbd{x} (@code{po-exchange-location}) simultaneously repositions "
"the cursor to the entry associated with the top element of the stack of "
"saved locations, and replaces that top element with the location of the "
"current entry before the move.  Consequently, repeating the @kbd{x} command "
"toggles alternatively between two entries.  For achieving this, the "
"translator will position the cursor on the first entry, use @kbd{m}, then "
"position to the second entry, and merely use @kbd{x} for making the switch."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3587 original_texis/gettext.texi:3613
#, no-wrap
msgid "string normalization in entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3599
msgid ""
"There are many different ways for encoding a particular string into a PO "
"file entry, because there are so many different ways to split and quote "
"multi-line strings, and even, to represent special characters by backslashed "
"escaped sequences.  Some features of PO mode rely on the ability for PO mode "
"to scan an already existing PO file for a particular string encoded into the "
"@code{msgid} field of some entry.  Even if PO mode has internally all the "
"built-in machinery for implementing this recognition easily, doing it fast "
"is technically difficult.  To facilitate a solution to this efficiency "
"problem, we decided on a canonical representation for strings."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3608
msgid ""
"A conventional representation of strings in a PO file is currently under "
"discussion, and PO mode experiments with a canonical representation.  Having "
"both @code{xgettext} and PO mode converging towards a uniform way of "
"representing equivalent strings would be useful, as the internal "
"normalization needed by PO mode could be automatically satisfied when using "
"@code{xgettext} from GNU @code{gettext}.  An explicit PO mode normalization "
"should then be only necessary for PO files imported from elsewhere, or for "
"when the convention itself evolves."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3612
msgid ""
"So, for achieving normalization of at least the strings of a given PO file "
"needing a canonical representation, the following PO mode command is "
"available:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:3615
#, no-wrap
msgid "M-x po-normalize"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3616
#, no-wrap
msgid "po-normalize@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3618
msgid "Tidy the whole PO file by making entries more uniform."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3629
msgid ""
"The special command @kbd{M-x po-normalize}, which has no associated keys, "
"revises all entries, ensuring that strings of both original and translated "
"entries use uniform internal quoting in the PO file.  It also removes any "
"crumb after the last entry.  This command may be useful for PO files freshly "
"imported from elsewhere, or if we ever improve on the canonical quoting "
"format we use.  This canonical format is not only meant for getting cleaner "
"PO files, but also for greatly speeding up @code{msgid} string lookup for "
"some other PO mode commands."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3642
msgid ""
"@kbd{M-x po-normalize} presently makes three passes over the entries.  The "
"first implements heuristics for converting PO files for GNU @code{gettext} "
"0.6 and earlier, in which @code{msgid} and @code{msgstr} fields were using "
"K&R style C string syntax for multi-line strings.  These heuristics may fail "
"for comments not related to obsolete entries and ending with a backslash; "
"they also depend on subsequent passes for finalizing the proper commenting "
"of continued lines for obsolete entries.  This first pass might disappear "
"once all oldish PO files would have been adjusted.  The second and third "
"pass normalize all @code{msgid} and @code{msgstr} strings respectively.  "
"They also clean out those trailing backslashes used by XView's @code{msgfmt} "
"for continued lines."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3643
#, no-wrap
msgid "importing PO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3653
msgid ""
"Having such an explicit normalizing command allows for importing PO files "
"from other sources, but also eases the evolution of the current convention, "
"evolution driven mostly by aesthetic concerns, as of now.  It is easy to "
"make suggested adjustments at a later time, as the normalizing command and "
"eventually, other GNU @code{gettext} tools should greatly automate "
"conformance.  A description of the canonical string format is given below, "
"for the particular benefit of those not having Emacs handy, and who would "
"nevertheless want to handcraft their PO files in nice ways."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3654
#, no-wrap
msgid "multi-line strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3658
msgid ""
"Right now, in PO mode, strings are single line or multi-line.  A string goes "
"multi-line if and only if it has @emph{embedded} newlines, that is, if it "
"matches @samp{[^\\n]\\n+[^\\n]}.  So, we would have:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:3661
#, no-wrap
msgid "msgstr \"\\n\\nHello, world!\\n\\n\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3664
msgid "but, replacing the space by a newline, this becomes:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:3673
#, no-wrap
msgid ""
"msgstr \"\"\n"
"\"\\n\"\n"
"\"\\n\"\n"
"\"Hello,\\n\"\n"
"\"world!\\n\"\n"
"\"\\n\"\n"
"\"\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3682
msgid ""
"We are deliberately using a caricatural example, here, to make the point "
"clearer.  Usually, multi-lines are not that bad looking.  It is probable "
"that we will implement the following suggestion.  We might lump together all "
"initial newlines into the empty string, and also all newlines introducing "
"empty lines (that is, for @w{@var{n} > 1}, the @var{n}-1'th last newlines "
"would go together on a separate string), so making the previous example "
"appear:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:3688
#, no-wrap
msgid ""
"msgstr \"\\n\\n\"\n"
"\"Hello,\\n\"\n"
"\"world!\\n\"\n"
"\"\\n\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3692
msgid ""
"There are a few yet undecided little points about string normalization, to "
"be documented in this manual, once these questions settle."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3695
#, no-wrap
msgid "translated entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3702
msgid ""
"Each PO file entry for which the @code{msgstr} field has been filled with a "
"translation, and which is not marked as fuzzy (@pxref{Fuzzy Entries}), is "
"said to be a @dfn{translated} entry.  Only translated entries will later be "
"compiled by GNU @code{msgfmt} and become usable in programs.  Other entry "
"types will be excluded; translation will not occur for them."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3703
#, no-wrap
msgid "moving by translated entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3705
msgid "Some commands are more specifically related to translated entry processing."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3707
#, no-wrap
msgid "t"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3708 original_texis/gettext.texi:3717
#, no-wrap
msgid "t@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3710
msgid "Find the next translated entry (@code{po-next-translated-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3711
#, no-wrap
msgid "T"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3712 original_texis/gettext.texi:3719
#, no-wrap
msgid "T@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3714
msgid "Find the previous translated entry (@code{po-previous-translated-entry})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3718
#, no-wrap
msgid "po-next-translated-entry@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3720
#, no-wrap
msgid "po-previous-translated-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3725
msgid ""
"The commands @kbd{t} (@code{po-next-translated-entry}) and @kbd{T} "
"(@code{po-previous-translated-entry}) move forwards or backwards, chasing "
"for an translated entry.  If none is found, the search is extended and wraps "
"around in the PO file buffer."
msgstr ""

#. type: evindex
#: original_texis/gettext.texi:3726
#, no-wrap
msgid "po-auto-fuzzy-on-edit@r{, PO Mode variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3733
msgid ""
"Translated entries usually result from the translator having edited in a "
"translation for them, @ref{Modifying Translations}.  However, if the "
"variable @code{po-auto-fuzzy-on-edit} is not @code{nil}, the entry having "
"received a new translation first becomes a fuzzy entry, which ought to be "
"later unfuzzied before becoming an official, genuine translated entry.  "
"@xref{Fuzzy Entries}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3736
#, no-wrap
msgid "fuzzy entries"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3738
#, no-wrap
msgid "attributes of a PO file entry"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3739
#, no-wrap
msgid "attribute, fuzzy"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3745
msgid ""
"Each PO file entry may have a set of @dfn{attributes}, which are qualities "
"given a name and explicitly associated with the translation, using a special "
"system comment.  One of these attributes has the name @code{fuzzy}, and "
"entries having this attribute are said to have a fuzzy translation.  They "
"are called fuzzy entries, for short."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3757
msgid ""
"Fuzzy entries, even if they account for translated entries for most other "
"purposes, usually call for revision by the translator.  Those may be "
"produced by applying the program @code{msgmerge} to update an older "
"translated PO files according to a new PO template file, when this tool "
"hypothesises that some new @code{msgid} has been modified only slightly out "
"of an older one, and chooses to pair what it thinks to be the old "
"translation for the new modified entry.  The slight alteration in the "
"original string (the @code{msgid} string)  should often be reflected in the "
"translated string, and this requires the intervention of the translator.  "
"For this reason, @code{msgmerge} might mark some entries as being fuzzy."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3758
#, no-wrap
msgid "moving by fuzzy entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3763
msgid ""
"Also, the translator may decide herself to mark an entry as fuzzy for her "
"own convenience, when she wants to remember that the entry has to be later "
"revisited.  So, some commands are more specifically related to fuzzy entry "
"processing."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3765
#, no-wrap
msgid "f"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3766 original_texis/gettext.texi:3780
#, no-wrap
msgid "f@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3769
msgid "Find the next fuzzy entry (@code{po-next-fuzzy-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3770
#, no-wrap
msgid "F"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3771 original_texis/gettext.texi:3782
#, no-wrap
msgid "F@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3773
msgid "Find the previous fuzzy entry (@code{po-previous-fuzzy-entry})."
msgstr ""

#. type: key{#1}
#: original_texis/gettext.texi:3774
#, no-wrap
msgid "TAB"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3775 original_texis/gettext.texi:3789
#, no-wrap
msgid "TAB@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3777
msgid "Remove the fuzzy attribute of the current entry (@code{po-unfuzzy})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3781
#, no-wrap
msgid "po-next-fuzzy-entry@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3783
#, no-wrap
msgid "po-previous-fuzzy-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3788
msgid ""
"The commands @kbd{f} (@code{po-next-fuzzy-entry}) and @kbd{F} "
"(@code{po-previous-fuzzy-entry}) move forwards or backwards, chasing for a "
"fuzzy entry.  If none is found, the search is extended and wraps around in "
"the PO file buffer."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3790
#, no-wrap
msgid "po-unfuzzy@r{, PO Mode command}"
msgstr ""

#. type: evindex
#: original_texis/gettext.texi:3791
#, no-wrap
msgid "po-auto-select-on-unfuzzy@r{, PO Mode variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3798
msgid ""
"The command @kbd{@key{TAB}} (@code{po-unfuzzy}) removes the fuzzy attribute "
"associated with an entry, usually leaving it translated.  Further, if the "
"variable @code{po-auto-select-on-unfuzzy} has not the @code{nil} value, the "
"@kbd{@key{TAB}} command will automatically chase for another interesting "
"entry to work on.  The initial value of @code{po-auto-select-on-unfuzzy} is "
"@code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3808
msgid ""
"The initial value of @code{po-auto-fuzzy-on-edit} is @code{nil}.  However, "
"if the variable @code{po-auto-fuzzy-on-edit} is set to @code{t}, any entry "
"edited through the @kbd{@key{RET}} command is marked fuzzy, as a way to "
"ensure some kind of double check, later.  In this case, the usual paradigm "
"is that an entry becomes fuzzy (if not already) whenever the translator "
"modifies it.  If she is satisfied with the translation, she then uses "
"@kbd{@key{TAB}} to pick another entry to work on, clearing the fuzzy "
"attribute on the same blow.  If she is not satisfied yet, she merely uses "
"@kbd{@key{SPC}} to chase another entry, leaving the entry fuzzy."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3809 original_texis/gettext.texi:3911 original_texis/gettext.texi:3932
#, no-wrap
msgid "DEL@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3810 original_texis/gettext.texi:3933
#, no-wrap
msgid "po-fade-out-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3815
msgid ""
"The translator may also use the @kbd{@key{DEL}} command "
"(@code{po-fade-out-entry}) over any translated entry to mark it as being "
"fuzzy, when she wants to easily leave a trace she wants to later return "
"working at this entry."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3819
msgid ""
"Also, when time comes to quit working on a PO file buffer with the @kbd{q} "
"command, the translator is asked for confirmation, if fuzzy string still "
"exists."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3822
#, no-wrap
msgid "untranslated entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3831
msgid ""
"When @code{xgettext} originally creates a PO file, unless told otherwise, it "
"initializes the @code{msgid} field with the untranslated string, and leaves "
"the @code{msgstr} string to be empty.  Such entries, having an empty "
"translation, are said to be @dfn{untranslated} entries.  Later, when the "
"programmer slightly modifies some string right in the program, this change "
"is later reflected in the PO file by the appearance of a new untranslated "
"entry for the modified string."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3835
msgid ""
"The usual commands moving from entry to entry consider untranslated entries "
"on the same level as active entries.  Untranslated entries are easily "
"recognizable by the fact they end with @w{@samp{msgstr \"\"}}."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3836
#, no-wrap
msgid "moving by untranslated entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3842
msgid ""
"The work of the translator might be (quite naively) seen as the process of "
"seeking for an untranslated entry, editing a translation for it, and "
"repeating these actions until no untranslated entries remain.  Some commands "
"are more specifically related to untranslated entry processing."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3844
#, no-wrap
msgid "u"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3845 original_texis/gettext.texi:3858
#, no-wrap
msgid "u@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3847
msgid "Find the next untranslated entry (@code{po-next-untranslated-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3848
#, no-wrap
msgid "U"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3849 original_texis/gettext.texi:3860
#, no-wrap
msgid "U@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3851
msgid "Find the previous untranslated entry (@code{po-previous-untransted-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3852 original_texis/gettext.texi:3990
#, no-wrap
msgid "k"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3853 original_texis/gettext.texi:3867 original_texis/gettext.texi:3991 original_texis/gettext.texi:4046
#, no-wrap
msgid "k@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3855
msgid "Turn the current entry into an untranslated one (@code{po-kill-msgstr})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3859
#, no-wrap
msgid "po-next-untranslated-entry@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3861
#, no-wrap
msgid "po-previous-untransted-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3866
msgid ""
"The commands @kbd{u} (@code{po-next-untranslated-entry}) and @kbd{U} "
"(@code{po-previous-untransted-entry}) move forwards or backwards, chasing "
"for an untranslated entry.  If none is found, the search is extended and "
"wraps around in the PO file buffer."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3868 original_texis/gettext.texi:4047
#, no-wrap
msgid "po-kill-msgstr@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3872
msgid ""
"An entry can be turned back into an untranslated entry by merely emptying "
"its translation, using the command @kbd{k} (@code{po-kill-msgstr}).  "
"@xref{Modifying Translations}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3876
msgid ""
"Also, when time comes to quit working on a PO file buffer with the @kbd{q} "
"command, the translator is asked for confirmation, if some untranslated "
"string still exists."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:3879
#, no-wrap
msgid "obsolete entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3884
msgid ""
"By @dfn{obsolete} PO file entries, we mean those entries which are commented "
"out, usually by @code{msgmerge} when it found that the translation is not "
"needed anymore by the package being localized."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3889
msgid ""
"The usual commands moving from entry to entry consider obsolete entries on "
"the same level as active entries.  Obsolete entries are easily recognizable "
"by the fact that all their lines start with @code{#}, even those lines "
"containing @code{msgid} or @code{msgstr}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3896
msgid ""
"Commands exist for emptying the translation or reinitializing it to the "
"original untranslated string.  Commands interfacing with the kill ring may "
"force some previously saved text into the translation.  The user may "
"interactively edit the translation.  All these commands may apply to "
"obsolete entries, carefully leaving the entry obsolete after the fact."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3897
#, no-wrap
msgid "moving by obsolete entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3900
msgid ""
"Moreover, some commands are more specifically related to obsolete entry "
"processing."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3902
#, no-wrap
msgid "o"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3903 original_texis/gettext.texi:3917
#, no-wrap
msgid "o@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3905
msgid "Find the next obsolete entry (@code{po-next-obsolete-entry})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3906
#, no-wrap
msgid "O"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3907 original_texis/gettext.texi:3919
#, no-wrap
msgid "O@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3909
msgid "Find the previous obsolete entry (@code{po-previous-obsolete-entry})."
msgstr ""

#. type: key{#1}
#: original_texis/gettext.texi:3910
#, no-wrap
msgid "DEL"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3914
msgid ""
"Make an active entry obsolete, or zap out an obsolete entry "
"(@code{po-fade-out-entry})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3918
#, no-wrap
msgid "po-next-obsolete-entry@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3920
#, no-wrap
msgid "po-previous-obsolete-entry@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3925
msgid ""
"The commands @kbd{o} (@code{po-next-obsolete-entry}) and @kbd{O} "
"(@code{po-previous-obsolete-entry}) move forwards or backwards, chasing for "
"an obsolete entry.  If none is found, the search is extended and wraps "
"around in the PO file buffer."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3931
msgid ""
"PO mode does not provide ways for un-commenting an obsolete entry and making "
"it active, because this would reintroduce an original untranslated string "
"which does not correspond to any marked string in the program sources.  This "
"goes with the philosophy of never introducing useless @code{msgid} values."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3934
#, no-wrap
msgid "obsolete active entry"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3935
#, no-wrap
msgid "comment out PO file entry"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3946
msgid ""
"However, it is possible to comment out an active entry, so making it "
"obsolete.  GNU @code{gettext} utilities will later react to the "
"disappearance of a translation by using the untranslated string.  The "
"command @kbd{@key{DEL}} (@code{po-fade-out-entry}) pushes the current entry "
"a little further towards annihilation.  If the entry is active (it is a "
"translated entry), then it is first made fuzzy.  If it is already fuzzy, "
"then the entry is merely commented out, with confirmation.  If the entry is "
"already obsolete, then it is completely deleted from the PO file.  It is "
"easy to recycle the translation so deleted into some other PO file entry, "
"usually one which is untranslated.  @xref{Modifying Translations}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3957
msgid ""
"Here is a quite interesting problem to solve for later development of PO "
"mode, for those nights you are not sleepy.  The idea would be that PO mode "
"might become bright enough, one of these days, to make good guesses at "
"retrieving the most probable candidate, among all obsolete entries, for "
"initializing the translation of a newly appeared string.  I think it might "
"be a quite hard problem to do this algorithmically, as we have to develop "
"good and efficient measures of string similarity.  Right now, PO mode "
"completely lets the decision to the translator, when the time comes to find "
"the adequate obsolete translation, it merely tries to provide handy tools "
"for helping her to do so."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:3960 original_texis/gettext.texi:3961
#, no-wrap
msgid "editing translations"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3973
msgid ""
"PO mode prevents direct modification of the PO file, by the usual means "
"Emacs gives for altering a buffer's contents.  By doing so, it pretends "
"helping the translator to avoid little clerical errors about the overall "
"file format, or the proper quoting of strings, as those errors would be "
"easily made.  Other kinds of errors are still possible, but some may be "
"caught and diagnosed by the batch validation process, which the translator "
"may always trigger by the @kbd{V} command.  For all other errors, the "
"translator has to rely on her own judgment, and also on the linguistic "
"reports submitted to her by the users of the translated package, having the "
"same mother tongue."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:3977
msgid ""
"When the time comes to create a translation, correct an error diagnosed "
"mechanically or reported by a user, the translators have to resort to using "
"the following commands for modifying the translations."
msgstr ""

#. type: key{#1}
#: original_texis/gettext.texi:3979
#, no-wrap
msgid "RET"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3980 original_texis/gettext.texi:4006
#, no-wrap
msgid "RET@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3982
msgid "Interactively edit the translation (@code{po-edit-msgstr})."
msgstr ""

#. type: key{#1}
#: original_texis/gettext.texi:3983
#, no-wrap
msgid "LFD"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:3984
#, no-wrap
msgid "C-j"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3985 original_texis/gettext.texi:4018
#, no-wrap
msgid "LFD@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3986 original_texis/gettext.texi:4019
#, no-wrap
msgid "C-j@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3989
msgid ""
"Reinitialize the translation with the original, untranslated string "
"(@code{po-msgid-to-msgstr})."
msgstr ""

#. type: table
#: original_texis/gettext.texi:3993
msgid ""
"Save the translation on the kill ring, and delete it "
"(@code{po-kill-msgstr})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3994
#, no-wrap
msgid "w"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:3995 original_texis/gettext.texi:4048
#, no-wrap
msgid "w@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:3998
msgid ""
"Save the translation on the kill ring, without deleting it "
"(@code{po-kill-ring-save-msgstr})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:3999
#, no-wrap
msgid "y"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4000 original_texis/gettext.texi:4075
#, no-wrap
msgid "y@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4003
msgid ""
"Replace the translation, taking the new from the kill ring "
"(@code{po-yank-msgstr})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4007
#, no-wrap
msgid "po-edit-msgstr@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4017
msgid ""
"The command @kbd{@key{RET}} (@code{po-edit-msgstr}) opens a new Emacs window "
"meant to edit in a new translation, or to modify an already existing "
"translation.  The new window contains a copy of the translation taken from "
"the current PO file entry, all ready for edition, expunged of all quoting "
"marks, fully modifiable and with the complete extent of Emacs modifying "
"commands.  When the translator is done with her modifications, she may use "
"@w{@kbd{C-c C-c}} to close the subedit window with the automatically "
"requoted results, or @w{@kbd{C-c C-k}} to abort her modifications.  "
"@xref{Subedit}, for more information."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4020
#, no-wrap
msgid "po-msgid-to-msgstr@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4025
msgid ""
"The command @kbd{@key{LFD}} (@code{po-msgid-to-msgstr}) initializes, or "
"reinitializes the translation with the original string.  This command is "
"normally used when the translator wants to redo a fresh translation of the "
"original string, disregarding any previous work."
msgstr ""

#. type: evindex
#: original_texis/gettext.texi:4026
#, no-wrap
msgid "po-auto-edit-with-msgid@r{, PO Mode variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4032
msgid ""
"It is possible to arrange so, whenever editing an untranslated entry, the "
"@kbd{@key{LFD}} command be automatically executed.  If you set "
"@code{po-auto-edit-with-msgid} to @code{t}, the translation gets initialised "
"with the original string, in case none exists already.  The default value "
"for @code{po-auto-edit-with-msgid} is @code{nil}."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4033
#, no-wrap
msgid "starting a string translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4044
msgid ""
"In fact, whether it is best to start a translation with an empty string, or "
"rather with a copy of the original string, is a matter of taste or habit.  "
"Sometimes, the source language and the target language are so different that "
"is simply best to start writing on an empty page.  At other times, the "
"source and target languages are so close that it would be a waste to retype "
"a number of words already being written in the original string.  A "
"translator may also like having the original string right under her eyes, as "
"she will progressively overwrite the original text with the translation, "
"even if this requires some extra editing work to get rid of the original."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4045
#, no-wrap
msgid "cut and paste for translated strings"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4049
#, no-wrap
msgid "po-kill-ring-save-msgstr@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4059
msgid ""
"The command @kbd{k} (@code{po-kill-msgstr}) merely empties the translation "
"string, so turning the entry into an untranslated one.  But while doing so, "
"its previous contents is put apart in a special place, known as the kill "
"ring.  The command @kbd{w} (@code{po-kill-ring-save-msgstr}) has also the "
"effect of taking a copy of the translation onto the kill ring, but it "
"otherwise leaves the entry alone, and does @emph{not} remove the translation "
"from the entry.  Both commands use exactly the Emacs kill ring, which is "
"shared between buffers, and which is well known already to Emacs lovers."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4067
msgid ""
"The translator may use @kbd{k} or @kbd{w} many times in the course of her "
"work, as the kill ring may hold several saved translations.  From the kill "
"ring, strings may later be reinserted in various Emacs buffers.  In "
"particular, the kill ring may be used for moving translation strings between "
"different entries of a single PO file buffer, or if the translator is "
"handling many such buffers at once, even between PO files."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4074
msgid ""
"To facilitate exchanges with buffers which are not in PO mode, the "
"translation string put on the kill ring by the @kbd{k} command is fully "
"unquoted before being saved: external quotes are removed, multi-line strings "
"are concatenated, and backslash escaped sequences are turned into their "
"corresponding characters.  In the special case of obsolete entries, the "
"translation is also uncommented prior to saving."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4076
#, no-wrap
msgid "po-yank-msgstr@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4089
msgid ""
"The command @kbd{y} (@code{po-yank-msgstr}) completely replaces the "
"translation of the current entry by a string taken from the kill ring.  "
"Following Emacs terminology, we then say that the replacement string is "
"@dfn{yanked} into the PO file buffer.  @xref{Yanking, , , emacs, The Emacs "
"Editor}.  The first time @kbd{y} is used, the translation receives the value "
"of the most recent addition to the kill ring.  If @kbd{y} is typed once "
"again, immediately, without intervening keystrokes, the translation just "
"inserted is taken away and replaced by the second most recent addition to "
"the kill ring.  By repeating @kbd{y} many times in a row, the translator may "
"travel along the kill ring for saved strings, until she finds the string she "
"really wanted."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4097
msgid ""
"When a string is yanked into a PO file entry, it is fully and automatically "
"requoted for complying with the format PO files should have.  Further, if "
"the entry is obsolete, PO mode then appropriately push the inserted string "
"inside comments.  Once again, translators should not burden themselves with "
"quoting considerations besides, of course, the necessity of the translated "
"string itself respective to the program using it."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4103
msgid ""
"Note that @kbd{k} or @kbd{w} are not the only commands pushing strings on "
"the kill ring, as almost any PO mode command replacing translation strings "
"(or the translator comments) automatically saves the old string on the kill "
"ring.  The main exceptions to this general rule are the yanking commands "
"themselves."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4104
#, no-wrap
msgid "using obsolete translations to make new entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4116
msgid ""
"To better illustrate the operation of killing and yanking, let's use an "
"actual example, taken from a common situation.  When the programmer slightly "
"modifies some string right in the program, his change is later reflected in "
"the PO file by the appearance of a new untranslated entry for the modified "
"string, and the fact that the entry translating the original or unmodified "
"string becomes obsolete.  In many cases, the translator might spare herself "
"some work by retrieving the unmodified translation from the obsolete entry, "
"then initializing the untranslated entry @code{msgstr} field with this "
"retrieved translation.  Once this done, the obsolete entry is not wanted "
"anymore, and may be safely deleted."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4129
msgid ""
"When the translator finds an untranslated entry and suspects that a slight "
"variant of the translation exists, she immediately uses @kbd{m} to mark the "
"current entry location, then starts chasing obsolete entries with @kbd{o}, "
"hoping to find some translation corresponding to the unmodified string.  "
"Once found, she uses the @kbd{@key{DEL}} command for deleting the obsolete "
"entry, knowing that @kbd{@key{DEL}} also @emph{kills} the translation, that "
"is, pushes the translation on the kill ring.  Then, @kbd{r} returns to the "
"initial untranslated entry, and @kbd{y} then @emph{yanks} the saved "
"translation right into the @code{msgstr} field.  The translator is then free "
"to use @kbd{@key{RET}} for fine tuning the translation contents, and maybe "
"to later use @kbd{u}, then @kbd{m} again, for going on with the next "
"untranslated string."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4134
msgid ""
"When some sequence of keys has to be typed over and over again, the "
"translator may find it useful to become better acquainted with the Emacs "
"capability of learning these sequences and playing them back under request.  "
"@xref{Keyboard Macros, , , emacs, The Emacs Editor}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4137
#, no-wrap
msgid "editing comments in PO files"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4138
#, no-wrap
msgid "editing comments"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4146
msgid ""
"Any translation work done seriously will raise many linguistic difficulties, "
"for which decisions have to be made, and the choices further documented.  "
"These documents may be saved within the PO file in form of translator "
"comments, which the translator is free to create, delete, or modify at "
"will.  These comments may be useful to herself when she returns to this PO "
"file after a while."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4152
msgid ""
"Comments not having whitespace after the initial @samp{#}, for example, "
"those beginning with @samp{#.} or @samp{#:}, are @emph{not} translator "
"comments, they are exclusively created by other @code{gettext} tools.  So, "
"the commands below will never alter such system added comments, they are not "
"meant for the translator to modify.  @xref{PO Files}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4156
msgid ""
"The following commands are somewhat similar to those modifying translations, "
"so the general indications given for those apply here.  @xref{Modifying "
"Translations}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4159
#, no-wrap
msgid "#"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4160 original_texis/gettext.texi:4187
#, no-wrap
msgid "#@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4162
msgid "Interactively edit the translator comments (@code{po-edit-comment})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4163
#, no-wrap
msgid "K"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4164 original_texis/gettext.texi:4204
#, no-wrap
msgid "K@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4167
msgid ""
"Save the translator comments on the kill ring, and delete it "
"(@code{po-kill-comment})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4168
#, no-wrap
msgid "W"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4169 original_texis/gettext.texi:4206
#, no-wrap
msgid "W@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4172
msgid ""
"Save the translator comments on the kill ring, without deleting it "
"(@code{po-kill-ring-save-comment})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4173
#, no-wrap
msgid "Y"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4174 original_texis/gettext.texi:4208
#, no-wrap
msgid "Y@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4177
msgid ""
"Replace the translator comments, taking the new from the kill ring "
"(@code{po-yank-comment})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4186
msgid ""
"These commands parallel PO mode commands for modifying the translation "
"strings, and behave much the same way as they do, except that they handle "
"this part of PO file comments meant for translator usage, rather than the "
"translation strings.  So, if the descriptions given below are slightly "
"succinct, it is because the full details have already been given.  "
"@xref{Modifying Translations}."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4188
#, no-wrap
msgid "po-edit-comment@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4199
msgid ""
"The command @kbd{#} (@code{po-edit-comment}) opens a new Emacs window "
"containing a copy of the translator comments on the current PO file entry.  "
"If there are no such comments, PO mode understands that the translator wants "
"to add a comment to the entry, and she is presented with an empty screen.  "
"Comment marks (@code{#}) and the space following them are automatically "
"removed before edition, and reinstated after.  For translator comments "
"pertaining to obsolete entries, the uncommenting and recommenting operations "
"are done twice.  Once in the editing window, the keys @w{@kbd{C-c C-c}} "
"allow the translator to tell she is finished with editing the comment.  "
"@xref{Subedit}, for further details."
msgstr ""

#. type: evindex
#: original_texis/gettext.texi:4200
#, no-wrap
msgid "po-subedit-mode-hook@r{, PO Mode variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4203 original_texis/gettext.texi:4295
msgid ""
"Functions found on @code{po-subedit-mode-hook}, if any, are executed after "
"the string has been inserted in the edit buffer."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4205
#, no-wrap
msgid "po-kill-comment@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4207
#, no-wrap
msgid "po-kill-ring-save-comment@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4209
#, no-wrap
msgid "po-yank-comment@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4219
msgid ""
"The command @kbd{K} (@code{po-kill-comment}) gets rid of all translator "
"comments, while saving those comments on the kill ring.  The command @kbd{W} "
"(@code{po-kill-ring-save-comment}) takes a copy of the translator comments "
"on the kill ring, but leaves them undisturbed in the current entry.  The "
"command @kbd{Y} (@code{po-yank-comment}) completely replaces the translator "
"comments by a string taken at the front of the kill ring.  When this command "
"is immediately repeated, the comments just inserted are withdrawn, and "
"replaced by other strings taken along the kill ring."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4233
msgid ""
"On the kill ring, all strings have the same nature.  There is no distinction "
"between @emph{translation} strings and @emph{translator comments} strings.  "
"So, for example, let's presume the translator has just finished editing a "
"translation, and wants to create a new translator comment to document why "
"the previous translation was not good, just to remember what was the "
"problem.  Foreseeing that she will do that in her documentation, the "
"translator may want to quote the previous translation in her translator "
"comments.  To do so, she may initialize the translator comments with the "
"previous translation, still at the head of the kill ring.  Because editing "
"already pushed the previous translation on the kill ring, she merely has to "
"type @kbd{M-w} prior to @kbd{#}, and the previous translation will be right "
"there, all ready for being introduced by some explanatory text."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4240
msgid ""
"On the other hand, presume there are some translator comments already and "
"that the translator wants to add to those comments, instead of wholly "
"replacing them.  Then, she should edit the comment right away with @kbd{#}.  "
"Once inside the editing window, she can use the regular Emacs commands "
"@kbd{C-y} (@code{yank}) and @kbd{M-y} (@code{yank-pop}) to get the previous "
"translation where she likes."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:4242
#, no-wrap
msgid "Details of Sub Edition"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4243
#, no-wrap
msgid "subedit minor mode"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4248
msgid ""
"The PO subedit minor mode has a few peculiarities worth being described in "
"fuller detail.  It installs a few commands over the usual editing set of "
"Emacs, which are described below."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4250
#, no-wrap
msgid "C-c C-c"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4251 original_texis/gettext.texi:4265
#, no-wrap
msgid "C-c C-c@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4253
msgid "Complete edition (@code{po-subedit-exit})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4254
#, no-wrap
msgid "C-c C-k"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4255 original_texis/gettext.texi:4274
#, no-wrap
msgid "C-c C-k@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4257
msgid "Abort edition (@code{po-subedit-abort})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4258 original_texis/gettext.texi:4474
#, no-wrap
msgid "C-c C-a"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4259 original_texis/gettext.texi:4284 original_texis/gettext.texi:4475 original_texis/gettext.texi:4508
#, no-wrap
msgid "C-c C-a@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4261
msgid "Consult auxiliary PO files (@code{po-subedit-cycle-auxiliary})."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4264
#, no-wrap
msgid "exiting PO subedit"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4266
#, no-wrap
msgid "po-subedit-exit@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4273
msgid ""
"The window's contents represents a translation for a given message, or a "
"translator comment.  The translator may modify this window to her heart's "
"content.  Once this is done, the command @w{@kbd{C-c C-c}} "
"(@code{po-subedit-exit}) may be used to return the edited translation into "
"the PO file, replacing the original translation, even if it moved out of "
"sight or if buffers were switched."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4275
#, no-wrap
msgid "po-subedit-abort@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4283
msgid ""
"If the translator becomes unsatisfied with her translation or comment, to "
"the extent she prefers keeping what was existent prior to the "
"@kbd{@key{RET}} or @kbd{#} command, she may use the command @w{@kbd{C-c "
"C-k}} (@code{po-subedit-abort}) to merely get rid of edition, while "
"preserving the original translation or comment.  Another way would be for "
"her to exit normally with @w{@kbd{C-c C-c}}, then type @code{U} once for "
"undoing the whole effect of last edition."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4285
#, no-wrap
msgid "po-subedit-cycle-auxiliary@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4292
msgid ""
"The command @w{@kbd{C-c C-a}} (@code{po-subedit-cycle-auxiliary})  allows "
"for glancing through translations already achieved in other languages, "
"directly while editing the current translation.  This may be quite "
"convenient when the translator is fluent at many languages, but of course, "
"only makes sense when such completed auxiliary PO files are already "
"available to her (@pxref{Auxiliary})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4312
msgid ""
"While editing her translation, the translator should pay attention to not "
"inserting unwanted @kbd{@key{RET}} (newline) characters at the end of the "
"translated string if those are not meant to be there, or to removing such "
"characters when they are required.  Since these characters are not visible "
"in the editing buffer, they are easily introduced by mistake.  To help her, "
"@kbd{@key{RET}} automatically puts the character @code{<} at the end of the "
"string being edited, but this @code{<} is not really part of the string.  On "
"exiting the editing window with @w{@kbd{C-c C-c}}, PO mode automatically "
"removes such @kbd{<} and all whitespace added after it.  If the translator "
"adds characters after the terminating @code{<}, it looses its delimiting "
"property and integrally becomes part of the string.  If she removes the "
"delimiting @code{<}, then the edited string is taken @emph{as is}, with all "
"trailing newlines, even if invisible.  Also, if the translated string ought "
"to end itself with a genuine @code{<}, then the delimiting @code{<} may not "
"be removed; so the string should appear, in the editing window, as ending "
"with two @code{<} in a row."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4313
#, no-wrap
msgid "editing multiple entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4323
msgid ""
"When a translation (or a comment) is being edited, the translator may move "
"the cursor back into the PO file buffer and freely move to other entries, "
"browsing at will.  If, with an edition pending, the translator wanders in "
"the PO file buffer, she may decide to start modifying another entry.  Each "
"entry being edited has its own subedit buffer.  It is possible to "
"simultaneously edit the translation @emph{and} the comment of a single "
"entry, or to edit entries in different PO files, all at once.  Typing "
"@kbd{@key{RET}} on a field already being edited merely resumes that "
"particular edit.  Yet, the translator should better be comfortable at "
"handling many Emacs windows!"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4324
#, no-wrap
msgid "pending subedits"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4329
msgid ""
"Pending subedits may be completed or aborted in any order, regardless of how "
"or when they were started.  When many subedits are pending and the "
"translator asks for quitting the PO file (with the @kbd{q} command), "
"subedits are automatically resumed one at a time, so she may decide for each "
"of them."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4332
#, no-wrap
msgid "consulting program sources"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4333
#, no-wrap
msgid "looking at the source to aid translation"
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4334
#, no-wrap
msgid "use the source, Luke"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4341
msgid ""
"PO mode is particularly powerful when used with PO files created through GNU "
"@code{gettext} utilities, as those utilities insert special comments in the "
"PO files they generate.  Some of these special comments relate the PO file "
"entry to exactly where the untranslated string appears in the program "
"sources."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4352
msgid ""
"When the translator gets to an untranslated entry, she is fairly often faced "
"with an original string which is not as informative as it normally should "
"be, being succinct, cryptic, or otherwise ambiguous.  Before choosing how to "
"translate the string, she needs to understand better what the string really "
"means and how tight the translation has to be.  Most of the time, when "
"problems arise, the only way left to make her judgment is looking at the "
"true program sources from where this string originated, searching for "
"surrounding comments the programmer might have put in there, and looking "
"around for helping clues of @emph{any} kind."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4362
msgid ""
"Surely, when looking at program sources, the translator will receive more "
"help if she is a fluent programmer.  However, even if she is not versed in "
"programming and feels a little lost in C code, the translator should not be "
"shy at taking a look, once in a while.  It is most probable that she will "
"still be able to find some of the hints she needs.  She will learn quickly "
"to not feel uncomfortable in program code, paying more attention to "
"programmer's comments, variable and function names (if he dared choosing "
"them well), and overall organization, than to the program code itself."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4363
#, no-wrap
msgid "find source fragment for a PO file entry"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4366
msgid ""
"The following commands are meant to help the translator at getting program "
"source context for a PO file entry."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4368
#, no-wrap
msgid "s"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4369 original_texis/gettext.texi:4390
#, no-wrap
msgid "s@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4372
msgid ""
"Resume the display of a program source context, or cycle through them "
"(@code{po-cycle-source-reference})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4373
#, no-wrap
msgid "M-s"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4374 original_texis/gettext.texi:4392
#, no-wrap
msgid "M-s@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4377
msgid ""
"Display of a program source context selected by menu "
"(@code{po-select-source-reference})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4378
#, no-wrap
msgid "S"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4379 original_texis/gettext.texi:4430
#, no-wrap
msgid "S@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4382
msgid ""
"Add a directory to the search path for source files "
"(@code{po-consider-source-path})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4383
#, no-wrap
msgid "M-S"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4384 original_texis/gettext.texi:4432
#, no-wrap
msgid "M-S@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4387
msgid ""
"Delete a directory from the search path for source files "
"(@code{po-ignore-source-path})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4391
#, no-wrap
msgid "po-cycle-source-reference@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4393
#, no-wrap
msgid "po-select-source-reference@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4402
msgid ""
"The commands @kbd{s} (@code{po-cycle-source-reference}) and @kbd{M-s} "
"(@code{po-select-source-reference}) both open another window displaying some "
"source program file, and already positioned in such a way that it shows an "
"actual use of the string to be translated.  By doing so, the command gives "
"source program context for the string.  But if the entry has no source "
"context references, or if all references are unresolved along the search "
"path for program sources, then the command diagnoses this as an error."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4407
msgid ""
"Even if @kbd{s} (or @kbd{M-s}) opens a new window, the cursor stays in the "
"PO file window.  If the translator really wants to get into the program "
"source window, she ought to do it explicitly, maybe by using command "
"@kbd{O}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4420
msgid ""
"When @kbd{s} is typed for the first time, or for a PO file entry which is "
"different of the last one used for getting source context, then the command "
"reacts by giving the first context available for this entry, if any.  If "
"some context has already been recently displayed for the current PO file "
"entry, and the translator wandered off to do other things, typing @kbd{s} "
"again will merely resume, in another window, the context last displayed.  In "
"particular, if the translator moved the cursor away from the context in the "
"source file, the command will bring the cursor back to the context.  By "
"using @kbd{s} many times in a row, with no other commands intervening, PO "
"mode will cycle to the next available contexts for this particular entry, "
"getting back to the first context once the last has been shown."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4429
msgid ""
"The command @kbd{M-s} behaves differently.  Instead of cycling through "
"references, it lets the translator choose a particular reference among many, "
"and displays that reference.  It is best used with completion, if the "
"translator types @kbd{@key{TAB}} immediately after @kbd{M-s}, in response to "
"the question, she will be offered a menu of all possible references, as a "
"reminder of which are the acceptable answers.  This command is useful only "
"where there are really many contexts available for a single string to "
"translate."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4431
#, no-wrap
msgid "po-consider-source-path@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4433
#, no-wrap
msgid "po-ignore-source-path@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4447
msgid ""
"Program source files are usually found relative to where the PO file "
"stands.  As a special provision, when this fails, the file is also looked "
"for, but relative to the directory immediately above it.  Those two cases "
"take proper care of most PO files.  However, it might happen that a PO file "
"has been moved, or is edited in a different place than its normal location.  "
"When this happens, the translator should tell PO mode in which directory "
"normally sits the genuine PO file.  Many such directories may be specified, "
"and all together, they constitute what is called the @dfn{search path} for "
"program sources.  The command @kbd{S} (@code{po-consider-source-path}) is "
"used to interactively enter a new directory at the front of the search path, "
"and the command @kbd{M-S} (@code{po-ignore-source-path}) is used to select, "
"with completion, one of the directories she does not want anymore on the "
"search path."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4450
#, no-wrap
msgid "consulting translations to other languages"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4458
msgid ""
"PO mode is able to help the knowledgeable translator, being fluent in many "
"languages, at taking advantage of translations already achieved in other "
"languages she just happens to know.  It provides these other language "
"translations as additional context for her own work.  Moreover, it has "
"features to ease the production of translations for many languages at once, "
"for translators preferring to work in this way."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4459 original_texis/gettext.texi:4460
#, no-wrap
msgid "auxiliary PO file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4465
msgid ""
"An @dfn{auxiliary} PO file is an existing PO file meant for the same package "
"the translator is working on, but targeted to a different mother tongue "
"language.  Commands exist for declaring and handling auxiliary PO files, and "
"also for showing contexts for the entry under work."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4467
msgid "Here are the auxiliary file commands available in PO mode."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4469
#, no-wrap
msgid "a"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4470 original_texis/gettext.texi:4497
#, no-wrap
msgid "a@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4473
msgid ""
"Seek auxiliary files for another translation for the same entry "
"(@code{po-cycle-auxiliary})."
msgstr ""

#. type: table
#: original_texis/gettext.texi:4477
msgid "Switch to a particular auxiliary file (@code{po-select-auxiliary})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4478
#, no-wrap
msgid "A"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4479 original_texis/gettext.texi:4489
#, no-wrap
msgid "A@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4481
msgid "Declare this PO file as an auxiliary file (@code{po-consider-as-auxiliary})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4482
#, no-wrap
msgid "M-A"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4483 original_texis/gettext.texi:4491
#, no-wrap
msgid "M-A@r{, PO Mode command}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4486
msgid ""
"Remove this PO file from the list of auxiliary files "
"(@code{po-ignore-as-auxiliary})."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4490
#, no-wrap
msgid "po-consider-as-auxiliary@r{, PO Mode command}"
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4492
#, no-wrap
msgid "po-ignore-as-auxiliary@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4496
msgid ""
"Command @kbd{A} (@code{po-consider-as-auxiliary}) adds the current PO file "
"to the list of auxiliary files, while command @kbd{M-A} "
"(@code{po-ignore-as-auxiliary} just removes it."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4498
#, no-wrap
msgid "po-cycle-auxiliary@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4507
msgid ""
"The command @kbd{a} (@code{po-cycle-auxiliary}) seeks all auxiliary PO "
"files, round-robin, searching for a translated entry in some other language "
"having an @code{msgid} field identical as the one for the current entry.  "
"The found PO file, if any, takes the place of the current PO file in the "
"display (its window gets on top).  Before doing so, the current PO file is "
"also made into an auxiliary file, if not already.  So, @kbd{a} in this newly "
"displayed PO file will seek another PO file, and so on, so repeating @kbd{a} "
"will eventually yield back the original PO file."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4509
#, no-wrap
msgid "po-select-auxiliary@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4516
msgid ""
"The command @kbd{C-c C-a} (@code{po-select-auxiliary}) asks the translator "
"for her choice of a particular auxiliary file, with completion, and then "
"switches to that selected PO file.  The command also checks if the selected "
"file has an @code{msgid} field identical as the one for the current entry, "
"and if yes, this entry becomes current.  Otherwise, the cursor of the "
"selected file is left undisturbed."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4524
msgid ""
"For all this to work fully, auxiliary PO files will have to be normalized, "
"in that way that @code{msgid} fields should be written @emph{exactly} the "
"same way.  It is possible to write @code{msgid} fields in various ways for "
"representing the same string, different writing would break the proper "
"behaviour of the auxiliary file commands of PO mode.  This is not expected "
"to be much a problem in practice, as most existing PO files have their "
"@code{msgid} entries written by the same GNU @code{gettext} tools."
msgstr ""

#. type: efindex
#: original_texis/gettext.texi:4525
#, no-wrap
msgid "normalize@r{, PO Mode command}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4531
msgid ""
"However, PO files initially created by PO mode itself, while marking strings "
"in source files, are normalised differently.  So are PO files resulting of "
"the @samp{M-x normalize} command.  Until these discrepancies between PO mode "
"and other GNU @code{gettext} tools get fully resolved, the translator should "
"stay aware of normalisation issues."
msgstr ""

#. type: emindex
#: original_texis/gettext.texi:4534
#, no-wrap
msgid "using translation compendia"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4536
#, no-wrap
msgid "compendium"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4542
msgid ""
"A @dfn{compendium} is a special PO file containing a set of translations "
"recurring in many different packages.  The translator can use gettext tools "
"to build a new compendium, to add entries to her compendium, and to "
"initialize untranslated entries, or to update already translated entries, "
"from translations kept in the compendium."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4550
#, no-wrap
msgid "creating compendia"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4551
#, no-wrap
msgid "compendium, creating"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4557
msgid ""
"Basically every PO file consisting of translated entries only can be "
"declared as a valid compendium.  Often the translator wants to have special "
"compendia; let's consider two cases: @cite{concatenating PO files} and "
"@cite{extracting a message subset from a PO file}."
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:4558
#, no-wrap
msgid "Concatenate PO Files"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4560
#, no-wrap
msgid "concatenating PO files into a compendium"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4561
#, no-wrap
msgid "accumulating translations"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4564
msgid ""
"To concatenate several valid PO files into one compendium file you can use "
"@samp{msgcomm} or @samp{msgcat} (the latter preferred):"
msgstr ""

#. type: example
#: original_texis/gettext.texi:4567
#, no-wrap
msgid "msgcat -o compendium.po file1.po file2.po\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4573
msgid ""
"By default, @code{msgcat} will accumulate divergent translations for the "
"same string.  Those occurrences will be marked as @code{fuzzy} and highly "
"visible decorated; calling @code{msgcat} on @file{file1.po}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:4579
#, no-wrap
msgid ""
"#: src/hello.c:200\n"
"#, c-format\n"
"msgid \"Report bugs to <%s>.\\n\"\n"
"msgstr \"Comunicar `bugs' a <%s>.\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4583
msgid "and @file{file2.po}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:4589
#, no-wrap
msgid ""
"#: src/bye.c:100\n"
"#, c-format\n"
"msgid \"Report bugs to <%s>.\\n\"\n"
"msgstr \"Comunicar \\\"bugs\\\" a <%s>.\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4593
msgid "will result in:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:4603
#, no-wrap
msgid ""
"#: src/hello.c:200 src/bye.c:100\n"
"#, fuzzy, c-format\n"
"msgid \"Report bugs to <%s>.\\n\"\n"
"msgstr \"\"\n"
"\"#-#-#-#-#  file1.po  #-#-#-#-#\\n\"\n"
"\"Comunicar `bugs' a <%s>.\\n\"\n"
"\"#-#-#-#-#  file2.po  #-#-#-#-#\\n\"\n"
"\"Comunicar \\\"bugs\\\" a <%s>.\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4610
msgid ""
"The translator will have to resolve this ``conflict'' manually; she has to "
"decide whether the first or the second version is appropriate (or provide a "
"new translation), to delete the ``marker lines'', and finally to remove the "
"@code{fuzzy} mark."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4614
msgid ""
"If the translator knows in advance the first found translation of a message "
"is always the best translation she can make use to the @samp{--use-first} "
"switch:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:4617
#, no-wrap
msgid "msgcat --use-first -o compendium.po file1.po file2.po\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4622
msgid ""
"A good compendium file must not contain @code{fuzzy} or untranslated "
"entries.  If input files are ``dirty'' you must preprocess the input files "
"or postprocess the result using @samp{msgattrib --translated --no-fuzzy}."
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:4623
#, no-wrap
msgid "Extract a Message Subset from a PO File"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4624
#, no-wrap
msgid "extracting parts of a PO file into a compendium"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4628
msgid ""
"Nobody wants to translate the same messages again and again; thus you may "
"wish to have a compendium file containing @file{getopt.c} messages."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4631
msgid ""
"To extract a message subset (e.g., all @file{getopt.c} messages) from an "
"existing PO file into one compendium file you can use @samp{msggrep}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:4634
#, no-wrap
msgid "msggrep --location src/getopt.c -o compendium.po file.po\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4641
msgid ""
"You can use a compendium file to initialize a translation from scratch or to "
"update an already existing translation."
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:4642
#, no-wrap
msgid "Initialize a New Translation File"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4643
#, no-wrap
msgid "initialize translations from a compendium"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4647
msgid ""
"Since a PO file with translations does not exist the translator can merely "
"use @file{/dev/null} to fake the ``old'' translation file."
msgstr ""

#. type: example
#: original_texis/gettext.texi:4650
#, no-wrap
msgid "msgmerge --compendium compendium.po -o file.po /dev/null file.pot\n"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:4652
#, no-wrap
msgid "Update an Existing Translation File"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4653
#, no-wrap
msgid "update translations from a compendium"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4658
msgid ""
"Concatenate the compendium file(s) and the existing PO, merge the result "
"with the POT file and remove the obsolete entries (optional, here done using "
"@samp{msgattrib}):"
msgstr ""

#. type: example
#: original_texis/gettext.texi:4662
#, no-wrap
msgid ""
"msgcat --use-first -o update.po compendium1.po compendium2.po file.po\n"
"msgmerge update.po file.pot | msgattrib --no-obsolete > file.po\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4666
#, no-wrap
msgid "manipulating PO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4671
msgid ""
"Sometimes it is necessary to manipulate PO files in a way that is better "
"performed automatically than by hand.  GNU @code{gettext} includes a "
"complete set of tools for this purpose."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4672
#, no-wrap
msgid "merging two PO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4679
msgid ""
"When merging two packages into a single package, the resulting POT file will "
"be the concatenation of the two packages' POT files.  Thus the maintainer "
"must concatenate the two existing package translations into a single "
"translation catalog, for each language.  This is best performed using "
"@samp{msgcat}.  It is then the translators' duty to deal with any possible "
"conflicts that arose during the merge."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4680
#, no-wrap
msgid "encoding conversion"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4685
msgid ""
"When a translator takes over the translation job from another translator, "
"but she uses a different character encoding in her locale, she will convert "
"the catalog to her character encoding.  This is best done through the "
"@samp{msgconv} program."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4691
msgid ""
"When a maintainer takes a source file with tagged messages from another "
"package, he should also take the existing translations for this source file "
"(and not let the translators do the same job twice).  One way to do this is "
"through @samp{msggrep}, another is to create a POT file for that source file "
"and use @samp{msgmerge}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4692
#, no-wrap
msgid "dialect"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4693
#, no-wrap
msgid "orthography"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4699
msgid ""
"When a translator wants to adjust some translation catalog for a special "
"dialect or orthography --- for example, German as written in Switzerland "
"versus German as written in Germany --- she needs to apply some text "
"processing to every message in the catalog.  The tool for doing this is "
"@samp{msgfilter}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4705
msgid ""
"Another use of @code{msgfilter} is to produce approximately the POT file for "
"which a given PO file was made.  This can be done through a filter command "
"like @samp{msgfilter sed -e d | sed -e '/^# /d'}.  Note that the original "
"POT file may have had different comments and different plural message "
"counts, that's why it's better to use the original POT file if available."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4706
#, no-wrap
msgid "checking of translations"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4710
msgid ""
"When a translator wants to check her translations, for example according to "
"orthography rules or using a non-interactive spell checker, she can do so "
"using the @samp{msgexec} program."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4711
#, no-wrap
msgid "duplicate elimination"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4716
msgid ""
"When third party tools create PO or POT files, sometimes duplicates cannot "
"be avoided.  But the GNU @code{gettext} tools give an error when they "
"encounter duplicate msgids in the same file and in the same domain.  To "
"merge duplicates, the @samp{msguniq} program can be used."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4719
msgid ""
"@samp{msgcomm} is a more general tool for keeping or throwing away "
"duplicates, occurring in different files."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4722
msgid ""
"@samp{msgcmp} can be used to check whether a translation catalog is "
"completely translated."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:4723
#, no-wrap
msgid "attributes, manipulating"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4726
msgid ""
"@samp{msgattrib} can be used to select and extract only the fuzzy or "
"untranslated messages of a translation catalog."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4729
msgid ""
"@samp{msgen} is useful as a first step for preparing English translation "
"catalogs.  It copies each message's msgid to its msgstr."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4733
msgid ""
"Finally, for those applications where all these various programs are not "
"sufficient, a library @samp{libgettextpo} is provided that can be used to "
"write other specialized programs that process PO files."
msgstr ""

#. type: include
#: original_texis/gettext.texi:4753
#, no-wrap
msgid "msgcat.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4758
#, no-wrap
msgid "msgconv.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4763
#, no-wrap
msgid "msggrep.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4768
#, no-wrap
msgid "msgfilter.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4773
#, no-wrap
msgid "msguniq.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4778
#, no-wrap
msgid "msgcomm.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4783
#, no-wrap
msgid "msgcmp.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4788
#, no-wrap
msgid "msgattrib.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4793
#, no-wrap
msgid "msgen.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:4798
#, no-wrap
msgid "msgexec.texi"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4809
msgid ""
"Translators are usually only interested in seeing the untranslated and fuzzy "
"messages of a PO file.  Also, when a message is set fuzzy because the msgid "
"changed, they want to see the differences between the previous msgid and the "
"current one (especially if the msgid is long and only few words in it have "
"changed).  Finally, it's always welcome to highlight the different sections "
"of a message in a PO file (comments, msgid, msgstr, etc.)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4814
msgid ""
"Such highlighting is possible through the options @samp{--color} and "
"@samp{--style}.  They are supported by all the programs that produce a PO "
"file on standard output, such as @code{msgcat}, @code{msgmerge}, and "
"@code{msgunfmt}."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:4824
#, no-wrap
msgid "The @code{--color} option"
msgstr ""

#. type: opindex
#: original_texis/gettext.texi:4826
#, no-wrap
msgid "--color@r{, @code{msgcat} option}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4830
msgid ""
"The @samp{--color=@var{when}} option specifies under which conditions "
"colorized output should be generated.  The @var{when} part can be one of the "
"following:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:4832
#, no-wrap
msgid "always"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4833 original_texis/gettext.texi:9446 original_texis/gettext.texi:10835 original_texis/gettext.texi:11980 original_texis/gettext.texi:12167
#, no-wrap
msgid "yes"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4835
msgid "The output will be colorized."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4836
#, no-wrap
msgid "never"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:4837
#, no-wrap
msgid "no"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4839
msgid "The output will not be colorized."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4840
#, no-wrap
msgid "auto"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:4841
#, no-wrap
msgid "tty"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4844
msgid ""
"The output will be colorized if the output device is a tty, i.e.@: when the "
"output goes directly to a text screen or terminal emulator window."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4845
#, no-wrap
msgid "html"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4847
msgid "The output will be colorized and be in HTML format."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4848
#, no-wrap
msgid "test"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4851
msgid ""
"This is a special value, understood only by the @code{msgcat} program.  It "
"is explained in the next section (@ref{The TERM variable})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4856
msgid ""
"@samp{--color} is equivalent to @samp{--color=yes}.  The default is "
"@samp{--color=auto}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4862
msgid ""
"Thus, a command like @samp{msgcat vi.po} will produce colorized output when "
"called by itself in a command window.  Whereas in a pipe, such as "
"@samp{msgcat vi.po | less -R}, it will not produce colorized output.  To get "
"colorized output in this situation nevertheless, use the command "
"@samp{msgcat --color vi.po | less -R}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4867
msgid ""
"The @samp{--color=html} option will produce output that can be viewed in a "
"browser.  This can be useful, for example, for Indic languages, because the "
"renderic of Indic scripts in browsers is usually better than in terminal "
"emulators."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4874
msgid ""
"Note that the output produced with the @code{--color} option is @emph{not} a "
"valid PO file in itself.  It contains additional terminal-specific escape "
"sequences or HTML tags.  A PO file reader will give a syntax error when "
"confronted with such content.  Except for the @samp{--color=html} case, you "
"therefore normally don't need to save output produced with the "
"@code{--color} option in a file."
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:4878
#, no-wrap
msgid "TERM@r{, environment variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4883
msgid ""
"The environment variable @code{TERM} contains a identifier for the text "
"window's capabilities.  You can get a detailed list of these cababilities by "
"using the @samp{infocmp} command, using @samp{man 5 terminfo} as a "
"reference."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4890
msgid ""
"When producing text with embedded color directives, @code{msgcat} looks at "
"the @code{TERM} variable.  Text windows today typically support at least 8 "
"colors.  Often, however, the text window supports 16 or more colors, even "
"though the @code{TERM} variable is set to a identifier denoting only 8 "
"supported colors.  It can be worth setting the @code{TERM} variable to a "
"different value in these cases:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:4892
#, no-wrap
msgid "xterm"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4897
msgid ""
"@code{xterm} is in most cases built with support for 16 colors.  It can also "
"be built with support for 88 or 256 colors (but not both).  You can try to "
"set @code{TERM} to either @code{xterm-16color}, @code{xterm-88color}, or "
"@code{xterm-256color}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4898
#, no-wrap
msgid "rxvt"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4901
msgid ""
"@code{rxvt} is often built with support for 16 colors.  You can try to set "
"@code{TERM} to @code{rxvt-16color}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4902
#, no-wrap
msgid "konsole"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4905
msgid ""
"@code{konsole} too is often built with support for 16 colors.  You can try "
"to set @code{TERM} to @code{konsole-16color} or @code{xterm-16color}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4910
msgid ""
"After setting @code{TERM}, you can verify it by invoking @samp{msgcat "
"--color=test} and seeing whether the output looks like a reasonable color "
"map."
msgstr ""

#. type: opindex
#: original_texis/gettext.texi:4914
#, no-wrap
msgid "--style@r{, @code{msgcat} option}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4918
msgid ""
"The @samp{--style=@var{style_file}} option specifies the style file to use "
"when colorizing.  It has an effect only when the @code{--color} option is "
"effective."
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:4919
#, no-wrap
msgid "PO_STYLE@r{, environment variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4923
msgid ""
"If the @code{--style} option is not specified, the environment variable "
"@code{PO_STYLE} is considered.  It is meant to point to the user's preferred "
"style for PO files."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4926
msgid ""
"The default style file is "
"@file{$prefix/share/gettext/styles/po-default.css}, where @code{$prefix} is "
"the installation location."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4928
msgid "A few style files are predefined:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:4929
#, no-wrap
msgid "po-vim.css"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4931
msgid "This style imitates the look used by vim 7."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4932
#, no-wrap
msgid "po-emacs-x.css"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4934
msgid "This style imitates the look used by GNU Emacs 21 and 22 in an X11 window."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4935
#, no-wrap
msgid "po-emacs-xterm.css"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:4936
#, no-wrap
msgid "po-emacs-xterm16.css"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:4937
#, no-wrap
msgid "po-emacs-xterm256.css"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4941
msgid ""
"This style imitates the look used by GNU Emacs 22 in a terminal of type "
"@samp{xterm} (8 colors) or @samp{xterm-16color} (16 colors) or "
"@samp{xterm-256color} (256 colors), respectively."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4947
msgid ""
"You can use these styles without specifying a directory.  They are actually "
"located in @file{$prefix/share/gettext/styles/}, where @code{$prefix} is the "
"installation location."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4949
msgid "You can also design your own styles.  This is described in the next section."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4959
msgid ""
"The same style file can be used for styling of a PO file, for terminal "
"output and for HTML output.  It is written in CSS (Cascading Style Sheet)  "
"syntax.  See @url{https://www.w3.org/TR/css2/cover.html} for a formal "
"definition of CSS.  Many HTML authoring tutorials also contain explanations "
"of CSS."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4964
msgid ""
"In the case of HTML output, the style file is embedded in the HTML output.  "
"In the case of text output, the style file is interpreted by the "
"@code{msgcat} program.  This means, in particular, that when @code{@@import} "
"is used with relative file names, the file names are"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:4968
msgid "relative to the resulting HTML file, in the case of HTML output,"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:4973
msgid ""
"relative to the style sheet containing the @code{@@import}, in the case of "
"text output.  (Actually, @code{@@import}s are not yet supported in this "
"case, due to a limitation in @code{libcroco}.)"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4977
msgid ""
"CSS rules are built up from selectors and declarations.  The declarations "
"specify graphical properties; the selectors specify when they apply."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:4980
msgid ""
"In PO files, the following simple selectors (based on \"CSS classes\", see "
"the CSS2 spec, section 5.8.3) are supported."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:4984
msgid "Selectors that apply to entire messages:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:4986
#, no-wrap
msgid ".header"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4988
msgid "This matches the header entry of a PO file."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4989
#, no-wrap
msgid ".translated"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4991
msgid "This matches a translated message."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4992
#, no-wrap
msgid ".untranslated"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4994
msgid ""
"This matches an untranslated message (i.e.@: a message with empty "
"translation)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4995
#, no-wrap
msgid ".fuzzy"
msgstr ""

#. type: table
#: original_texis/gettext.texi:4998
msgid ""
"This matches a fuzzy message (i.e.@: a message which has a translation that "
"needs review by the translator)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:4999
#, no-wrap
msgid ".obsolete"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5002
msgid ""
"This matches an obsolete message (i.e.@: a message that was translated but "
"is not needed by the current POT file any more)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5007
msgid ""
"Selectors that apply to parts of a message in PO syntax.  Recall the general "
"structure of a message in PO syntax:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:5020
#, no-wrap
msgid ".comment"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5024
msgid ""
"This matches all comments (translator comments, extracted comments, source "
"file reference comments, flag comments, previous message comments, as well "
"as the entire obsolete messages)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5025
#, no-wrap
msgid ".translator-comment"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5027
msgid "This matches the translator comments."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5028
#, no-wrap
msgid ".extracted-comment"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5031
msgid ""
"This matches the extracted comments, i.e.@: the comments placed by the "
"programmer at the attention of the translator."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5032
#, no-wrap
msgid ".reference-comment"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5034
msgid "This matches the source file reference comments (entire lines)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5035
#, no-wrap
msgid ".reference"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5038
msgid ""
"This matches the individual source file references inside the source file "
"reference comment lines."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5039
#, no-wrap
msgid ".flag-comment"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5041
msgid "This matches the flag comment lines (entire lines)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5042
#, no-wrap
msgid ".flag"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5044
msgid "This matches the individual flags inside flag comment lines."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5045
#, no-wrap
msgid ".fuzzy-flag"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5047
msgid "This matches the `fuzzy' flag inside flag comment lines."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5048
#, no-wrap
msgid ".previous-comment"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5051
msgid ""
"This matches the comments containing the previous untranslated string "
"(entire lines)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5052
#, no-wrap
msgid ".previous"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5055
msgid ""
"This matches the previous untranslated string including the string "
"delimiters, the associated keywords (@code{msgid} etc.) and the spaces "
"between them."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5056
#, no-wrap
msgid ".msgid"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5059
msgid ""
"This matches the untranslated string including the string delimiters, the "
"associated keywords (@code{msgid} etc.) and the spaces between them."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5060
#, no-wrap
msgid ".msgstr"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5063
msgid ""
"This matches the translated string including the string delimiters, the "
"associated keywords (@code{msgstr} etc.) and the spaces between them."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5064
#, no-wrap
msgid ".keyword"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5066
msgid "This matches the keywords (@code{msgid}, @code{msgstr}, etc.)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5067
#, no-wrap
msgid ".string"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5069
msgid "This matches strings, including the string delimiters (double quotes)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5073
msgid "Selectors that apply to parts of strings:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:5075
#, no-wrap
msgid ".text"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5078
msgid ""
"This matches the entire contents of a string (excluding the string "
"delimiters, i.e.@: the double quotes)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5079
#, no-wrap
msgid ".escape-sequence"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5081
msgid "This matches an escape sequence (starting with a backslash)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5082
#, no-wrap
msgid ".format-directive"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5088
msgid ""
"This matches a format string directive (starting with a @samp{%} sign in the "
"case of most programming languages, with a @samp{@{} in the case of "
"@code{java-format} and @code{csharp-format}, with a @samp{~} in the case of "
"@code{lisp-format} and @code{scheme-format}, or with @samp{$} in the case of "
"@code{sh-format})."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5089
#, no-wrap
msgid ".invalid-format-directive"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5091
msgid "This matches an invalid format string directive."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5092
#, no-wrap
msgid ".added"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5096
msgid ""
"In an untranslated string, this matches a part of the string that was not "
"present in the previous untranslated string.  (Not yet implemented in this "
"release.)"
msgstr ""

#. type: item
#: original_texis/gettext.texi:5097
#, no-wrap
msgid ".changed"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5101
msgid ""
"In an untranslated string or in a previous untranslated string, this matches "
"a part of the string that is changed or replaced.  (Not yet implemented in "
"this release.)"
msgstr ""

#. type: item
#: original_texis/gettext.texi:5102
#, no-wrap
msgid ".removed"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5106
msgid ""
"In a previous untranslated string, this matches a part of the string that is "
"not present in the current untranslated string.  (Not yet implemented in "
"this release.)"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5110
msgid "These selectors can be combined to hierarchical selectors.  For example,"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:5113
#, no-wrap
msgid ".msgstr .invalid-format-directive @{ color: red; @}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5117
msgid "will highlight the invalid format directives in the translated strings."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5120
msgid ""
"In text mode, pseudo-classes (CSS2 spec, section 5.11) and pseudo-elements "
"(CSS2 spec, section 5.12) are not supported."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5123
msgid ""
"The declarations in HTML mode are not limited; any graphical attribute "
"supported by the browsers can be used."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5126
msgid ""
"The declarations in text mode are limited to the following properties.  "
"Other properties will be silently ignored."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5128
#, no-wrap
msgid "@code{color} (CSS2 spec, section 14.1)"
msgstr ""

#. type: itemx
#: original_texis/gettext.texi:5129
#, no-wrap
msgid "@code{background-color} (CSS2 spec, section 14.2.1)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5132
msgid ""
"These properties is supported.  Colors will be adjusted to match the "
"terminal's capabilities.  Note that many terminals support only 8 colors."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5133
#, no-wrap
msgid "@code{font-weight} (CSS2 spec, section 15.2.3)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5137
msgid ""
"This property is supported, but most terminals can only render two different "
"weights: @code{normal} and @code{bold}.  Values >= 600 are rendered as "
"@code{bold}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5138
#, no-wrap
msgid "@code{font-style} (CSS2 spec, section 15.2.3)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5141
msgid ""
"This property is supported.  The values @code{italic} and @code{oblique} are "
"rendered the same way."
msgstr ""

#. type: item
#: original_texis/gettext.texi:5142
#, no-wrap
msgid "@code{text-decoration} (CSS2 spec, section 16.3.1)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:5145
msgid ""
"This property is supported, limited to the values @code{none} and "
"@code{underline}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5153
msgid ""
"The @samp{less} program is a popular text file browser for use in a text "
"screen or terminal emulator.  It also supports text with embedded escape "
"sequences for colors and text decorations."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5156
msgid ""
"You can use @code{less} to view a PO file like this (assuming an UTF-8 "
"environment):"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:5159
#, no-wrap
msgid "msgcat --to-code=UTF-8 --color xyz.po | less -R\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5162
msgid "You can simplify this to this simple command:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:5165
#, no-wrap
msgid "less xyz.po\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5169
msgid "after these three preparations:"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:5174
msgid ""
"Add the options @samp{-R} and @samp{-f} to the @code{LESS} environment "
"variable.  In sh shells:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:5177
#, no-wrap
msgid ""
"$ LESS=\"$LESS -R -f\"\n"
"$ export LESS\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:5184
msgid ""
"If your system does not already have the @file{lessopen.sh} and "
"@file{lessclose.sh} scripts, create them and set the @code{LESSOPEN} and "
"@code{LESSCLOSE} environment variables, as indicated in the manual page "
"(@samp{man less})."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:5189
msgid ""
"Add to @file{lessopen.sh} a piece of script that recognizes PO files through "
"their file extension and invokes @code{msgcat} on them, producing a "
"temporary file.  Like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:5199
#, no-wrap
msgid ""
"case \"$1\" in\n"
"  *.po)\n"
"    tmpfile=`mktemp \"$@{TMPDIR-/tmp@}/less.XXXXXX\"`\n"
"    msgcat --to-code=UTF-8 --color \"$1\" > \"$tmpfile\"\n"
"    echo \"$tmpfile\"\n"
"    exit 0\n"
"    ;;\n"
"esac\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5205
#, no-wrap
msgid "Pology"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5208
msgid ""
"The ``Pology'' package is a Free Software package for manipulating PO "
"files.  It features, in particular:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5212
msgid "Examination and in-place modification of collections of PO files."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5214
msgid "Format-aware diffing and patching of PO files."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5216
msgid "Handling of version-control branches."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5218
msgid "Fine-grained asynchronous review workflow."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5220
msgid "Custom translation validation."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:5222
msgid "Language and project specific support."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5225
msgid "Its home page is at @url{http://pology.nedohodnik.net/}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5235
msgid ""
"For the tasks for which a combination of @samp{msgattrib}, @samp{msgcat} "
"etc.  is not sufficient, a set of C functions is provided in a library, to "
"make it possible to process PO files in your own programs.  When you use "
"this library, you don't need to write routines to parse the PO file; "
"instead, you retrieve a pointer in memory to each of messages contained in "
"the PO file.  Functions for writing PO files are not provided at this time."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5238
msgid ""
"The functions are declared in the header file @samp{<gettext-po.h>}, and are "
"defined in a library called @samp{libgettextpo}."
msgstr ""

#. type: deftp
#: original_texis/gettext.texi:5239
#, no-wrap
msgid "{Data Type} po_file_t"
msgstr ""

#. type: deftp
#: original_texis/gettext.texi:5242
msgid ""
"This is a pointer type that refers to the contents of a PO file, after it "
"has been read into memory."
msgstr ""

#. type: deftp
#: original_texis/gettext.texi:5244
#, no-wrap
msgid "{Data Type} po_message_iterator_t"
msgstr ""

#. type: deftp
#: original_texis/gettext.texi:5247
msgid ""
"This is a pointer type that refers to an iterator that produces a sequence "
"of messages."
msgstr ""

#. type: deftp
#: original_texis/gettext.texi:5249
#, no-wrap
msgid "{Data Type} po_message_t"
msgstr ""

#. type: deftp
#: original_texis/gettext.texi:5252
msgid ""
"This is a pointer type that refers to a message of a PO file, including its "
"translation."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5254
#, no-wrap
msgid "po_file_t po_file_read (const char *@var{filename})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5259
msgid ""
"The @code{po_file_read} function reads a PO file into memory.  The file name "
"is given as argument.  The return value is a handle to the PO file's "
"contents, valid until @code{po_file_free} is called on it.  In case of "
"error, the return value is @code{NULL}, and @code{errno} is set."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5261
#, no-wrap
msgid "void po_file_free (po_file_t @var{file})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5264
msgid ""
"The @code{po_file_free} function frees a PO file's contents from memory, "
"including all messages that are only implicitly accessible through "
"iterators."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5266
#, no-wrap
msgid "{const char * const *} po_file_domains (po_file_t @var{file})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5272
msgid ""
"The @code{po_file_domains} function returns the domains for which the given "
"PO file has messages.  The return value is a @code{NULL} terminated array "
"which is valid as long as the @var{file} handle is valid.  For PO files "
"which contain no @samp{domain} directive, the return value contains only one "
"domain, namely the default domain @code{\"messages\"}."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5274
#, no-wrap
msgid ""
"po_message_iterator_t po_message_iterator (po_file_t @var{file}, const char "
"*@var{domain})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5279
msgid ""
"The @code{po_message_iterator} returns an iterator that will produce the "
"messages of @var{file} that belong to the given @var{domain}.  If "
"@var{domain} is @code{NULL}, the default domain is used instead.  To list "
"the messages, use the function @code{po_next_message} repeatedly."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5281
#, no-wrap
msgid "void po_message_iterator_free (po_message_iterator_t @var{iterator})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5284
msgid ""
"The @code{po_message_iterator_free} function frees an iterator previously "
"allocated through the @code{po_message_iterator} function."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5286
#, no-wrap
msgid "po_message_t po_next_message (po_message_iterator_t @var{iterator})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5290
msgid ""
"The @code{po_next_message} function returns the next message from "
"@var{iterator} and advances the iterator.  It returns @code{NULL} when the "
"iterator has reached the end of its message list."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5294
msgid ""
"The following functions returns details of a @code{po_message_t}.  Recall "
"that the results are valid as long as the @var{file} handle is valid."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5295
#, no-wrap
msgid "{const char *} po_message_msgid (po_message_t @var{message})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5298
msgid ""
"The @code{po_message_msgid} function returns the @code{msgid} (untranslated "
"English string) of a message.  This is guaranteed to be non-@code{NULL}."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5300
#, no-wrap
msgid "{const char *} po_message_msgid_plural (po_message_t @var{message})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5304
msgid ""
"The @code{po_message_msgid_plural} function returns the @code{msgid_plural} "
"(untranslated English plural string) of a message with plurals, or "
"@code{NULL} for a message without plural."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5306
#, no-wrap
msgid "{const char *} po_message_msgstr (po_message_t @var{message})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5310
msgid ""
"The @code{po_message_msgstr} function returns the @code{msgstr} "
"(translation)  of a message.  For an untranslated message, the return value "
"is an empty string."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5312
#, no-wrap
msgid ""
"{const char *} po_message_msgstr_plural (po_message_t @var{message}, int "
"@var{index})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5316
msgid ""
"The @code{po_message_msgstr_plural} function returns the "
"@code{msgstr[@var{index}]} of a message with plurals, or @code{NULL} when "
"the @var{index} is out of range or for a message without plural."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5319
msgid "Here is an example code how these functions can be used."
msgstr ""

#. type: example
#: original_texis/gettext.texi:5323
#, no-wrap
msgid ""
"const char *filename = @dots{};\n"
"po_file_t file = po_file_read (filename);\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5329
#, no-wrap
msgid ""
"if (file == NULL)\n"
"  error (EXIT_FAILURE, errno, \"couldn't open the PO file %s\", filename);\n"
"@{\n"
"  const char * const *domains = po_file_domains (file);\n"
"  const char * const *domainp;\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5334
#, no-wrap
msgid ""
"  for (domainp = domains; *domainp; domainp++)\n"
"    @{\n"
"      const char *domain = *domainp;\n"
"      po_message_iterator_t iterator = po_message_iterator (file, domain);\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5338
#, no-wrap
msgid ""
"      for (;;)\n"
"        @{\n"
"          po_message_t *message = po_next_message (iterator);\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5344
#, no-wrap
msgid ""
"          if (message == NULL)\n"
"            break;\n"
"          @{\n"
"            const char *msgid = po_message_msgid (message);\n"
"            const char *msgstr = po_message_msgstr (message);\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5352
#, no-wrap
msgid ""
"            @dots{}\n"
"          @}\n"
"        @}\n"
"      po_message_iterator_free (iterator);\n"
"    @}\n"
"@}\n"
"po_file_free (file);\n"
msgstr ""

#. type: include
#: original_texis/gettext.texi:5368
#, no-wrap
msgid "msgfmt.texi"
msgstr ""

#. type: include
#: original_texis/gettext.texi:5373
#, no-wrap
msgid "msgunfmt.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5377
#, no-wrap
msgid "MO file's format"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5378
#, no-wrap
msgid "file format, @file{.mo}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5382
msgid ""
"The format of the generated MO files is best described by a picture, which "
"appears below."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5383
#, no-wrap
msgid "magic signature of MO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5388
msgid ""
"The first two words serve the identification of the file.  The magic number "
"will always signal GNU MO files.  The number is stored in the byte order "
"used when the MO file was generated, so the magic number really is two "
"numbers: @code{0x950412de} and @code{0xde120495}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5399
msgid ""
"The second word describes the current revision of the file format, composed "
"of a major and a minor revision number.  The revision numbers ensure that "
"the readers of MO files can distinguish new formats from old ones and handle "
"their contents, as far as possible.  For now the major revision is 0 or 1, "
"and the minor revision is also 0 or 1.  More revisions might be added in the "
"future.  A program seeing an unexpected major revision number should stop "
"reading the MO file entirely; whereas an unexpected minor revision number "
"means that the file can be read but will not reveal its full contents, when "
"parsed by a program that supports only smaller minor revision numbers."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5404
msgid ""
"The version is kept separate from the magic number, instead of using "
"different magic numbers for different formats, mainly because "
"@file{/etc/magic} is not updated often."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5410
msgid ""
"Follow a number of pointers to later tables in the file, allowing for the "
"extension of the prefix part of MO files without having to recompile "
"programs reading them.  This might become useful for later inserting a few "
"flag bits, indication about the charset used, new tables, or other things."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5421
msgid ""
"Then, at offset @var{O} and offset @var{T} in the picture, two tables of "
"string descriptors can be found.  In both tables, each string descriptor "
"uses two 32 bits integers, one for the string length, another for the offset "
"of the string in the MO file, counting in bytes from the start of the file.  "
"The first table contains descriptors for the original strings, and is sorted "
"so the original strings are in increasing lexicographical order.  The second "
"table contains descriptors for the translated strings, and is parallel to "
"the first table: to find the corresponding translation one has to access the "
"array slot in the second array with the same index."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5430
msgid ""
"Having the original strings sorted enables the use of simple binary search, "
"for when the MO file does not contain an hashing table, or for when it is "
"not practical to use the hashing table provided in the MO file.  This also "
"has another advantage, as the empty string in a PO file GNU @code{gettext} "
"is usually @emph{translated} into some system information attached to that "
"particular MO file, and the empty string necessarily becomes the first in "
"both the original and translated tables, making the system information very "
"easy to find."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5431
#, no-wrap
msgid "hash table, inside MO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5439
msgid ""
"The size @var{S} of the hash table can be zero.  In this case, the hash "
"table itself is not contained in the MO file.  Some people might prefer this "
"because a precomputed hashing table takes disk space, and does not win "
"@emph{that} much speed.  The hash table contains indices to the sorted array "
"of strings in the MO file.  Conflict resolution is done by double hashing.  "
"The precise hashing algorithm used is fairly dependent on GNU @code{gettext} "
"code, and is not documented here."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5447
msgid ""
"As for the strings themselves, they follow the hash file, and each is "
"terminated with a @key{NUL}, and this @key{NUL} is not counted in the length "
"which appears in the string descriptor.  The @code{msgfmt} program has an "
"option selecting the alignment for MO file strings.  With this option, each "
"string is separately aligned so it starts at an offset which is a multiple "
"of the alignment value.  On some RISC machines, a correct alignment will "
"speed things up."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5448
#, no-wrap
msgid "context, in MO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5451
msgid ""
"Contexts are stored by storing the concatenation of the context, a @key{EOT} "
"byte, and the original string, instead of the original string."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5452
#, no-wrap
msgid "plural forms, in MO files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5461
msgid ""
"Plural forms are stored by letting the plural of the original string follow "
"the singular of the original string, separated through a @key{NUL} byte.  "
"The length which appears in the string descriptor includes both.  However, "
"only the singular of the original string takes part in the hash table "
"lookup.  The plural variants of the translation are all stored "
"consecutively, separated through a @key{NUL} byte.  Here also, the length in "
"the string descriptor includes all of them."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5472
msgid ""
"Nothing prevents a MO file from having embedded @key{NUL}s in strings.  "
"However, the program interface currently used already presumes that strings "
"are @key{NUL} terminated, so embedded @key{NUL}s are somewhat useless.  But "
"the MO file format is general enough so other interfaces would be later "
"possible, if for example, we ever want to implement wide characters right in "
"MO files, where @key{NUL} bytes may accidentally appear.  (No, we don't want "
"to have wide characters in MO files.  They would make the file unnecessarily "
"large, and the @samp{wchar_t} type being platform dependent, MO files would "
"be platform dependent as well.)"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5480
msgid ""
"This particular issue has been strongly debated in the GNU @code{gettext} "
"development forum, and it is expectable that MO file format will evolve or "
"change over time.  It is even possible that many formats may later be "
"supported concurrently.  But surely, we have to start somewhere, and the MO "
"file format described here is a good start.  Nothing is cast in concrete, "
"and the format may later evolve fairly easily, so we should feel comfortable "
"with the current approach."
msgstr ""

#. type: group
#: original_texis/gettext.texi:5530
#, no-wrap
msgid ""
"        byte\n"
"             +------------------------------------------+\n"
"          0  | magic number = 0x950412de                |\n"
"             |                                          |\n"
"          4  | file format revision = 0                 |\n"
"             |                                          |\n"
"          8  | number of strings                        |  == N\n"
"             |                                          |\n"
"         12  | offset of table with original strings    |  == O\n"
"             |                                          |\n"
"         16  | offset of table with translation strings |  == T\n"
"             |                                          |\n"
"         20  | size of hashing table                    |  == S\n"
"             |                                          |\n"
"         24  | offset of hashing table                  |  == H\n"
"             |                                          |\n"
"             .                                          .\n"
"             .    (possibly more entries later)         .\n"
"             .                                          .\n"
"             |                                          |\n"
"          O  | length & offset 0th string  ----------------.\n"
"      O + 8  | length & offset 1st string  ------------------.\n"
"              ...                                    ...   | |\n"
"O + ((N-1)*8)| length & offset (N-1)th string           |  | |\n"
"             |                                          |  | |\n"
"          T  | length & offset 0th translation  ---------------.\n"
"      T + 8  | length & offset 1st translation  -----------------.\n"
"              ...                                    ...   | | | |\n"
"T + ((N-1)*8)| length & offset (N-1)th translation      |  | | | |\n"
"             |                                          |  | | | |\n"
"          H  | start hash table                         |  | | | |\n"
"              ...                                    ...   | | | |\n"
"  H + S * 4  | end hash table                           |  | | | |\n"
"             |                                          |  | | | |\n"
"             | NUL terminated 0th string  <----------------' | | |\n"
"             |                                          |    | | |\n"
"             | NUL terminated 1st string  <------------------' | |\n"
"             |                                          |      | |\n"
"              ...                                    ...       | |\n"
"             |                                          |      | |\n"
"             | NUL terminated 0th translation  <---------------' |\n"
"             |                                          |        |\n"
"             | NUL terminated 1st translation  <-----------------'\n"
"             |                                          |\n"
"              ...                                    ...\n"
"             |                                          |\n"
"             +------------------------------------------+\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5548
msgid ""
"One aim of the current message catalog implementation provided by GNU "
"@code{gettext} was to use the system's message catalog handling, if the "
"installer wishes to do so.  So we perhaps should first take a look at the "
"solutions we know about.  The people in the POSIX committee did not manage "
"to agree on one of the semi-official standards which we'll describe below.  "
"In fact they couldn't agree on anything, so they decided only to include an "
"example of an interface.  The major Unix vendors are split in the usage of "
"the two most important specifications: X/Open's catgets vs. Uniforum's "
"gettext interface.  We'll describe them both and later explain our solution "
"of this dilemma."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5560
#, no-wrap
msgid "@code{catgets}, X/Open specification"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5569
msgid ""
"The @code{catgets} implementation is defined in the X/Open Portability "
"Guide, Volume 3, XSI Supplementary Definitions, Chapter 5.  But the process "
"of creating this standard seemed to be too slow for some of the Unix vendors "
"so they created their implementations on preliminary versions of the "
"standard.  Of course this leads again to problems while writing platform "
"independent programs: even the usage of @code{catgets} does not guarantee a "
"unique interface."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5575
msgid ""
"Another, personal comment on this that only a bunch of committee members "
"could have made this interface.  They never really tried to program using "
"this interface.  It is a fast, memory-saving implementation, an user can "
"happily live with it.  But programmers hate it (at least I and some others "
"do@dots{})"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5582
msgid ""
"But we must not forget one point: after all the trouble with transferring "
"the rights on Unix(tm) they at last came to X/Open, the very same who "
"published this specification.  This leads me to making the prediction that "
"this interface will be in future Unix standards (e.g.@: Spec1170) and "
"therefore part of all Unix implementation (implementations, which are "
"@emph{allowed} to wear this name)."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:5589 original_texis/gettext.texi:5697
#, no-wrap
msgid "The Interface"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5590
#, no-wrap
msgid "interface to @code{catgets}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5598
msgid ""
"The interface to the @code{catgets} implementation consists of three "
"functions which correspond to those used in file access: @code{catopen} to "
"open the catalog for using, @code{catgets} for accessing the message tables, "
"and @code{catclose} for closing after work is done.  Prototypes for the "
"functions and the needed definitions are in the @code{<nl_types.h>} header "
"file."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5599
#, no-wrap
msgid "@code{catopen}, a @code{catgets} function"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5601
msgid "@code{catopen} is used like in this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5604
#, no-wrap
msgid "nl_catd catd = catopen (\"catalog_name\", 0);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5612
msgid ""
"The function takes as the argument the name of the catalog.  This usual "
"refers to the name of the program or the package.  The second parameter is "
"not further specified in the standard.  I don't even know whether it is "
"implemented consistently among various systems.  So the common advice is to "
"use @code{0} as the value.  The return value is a handle to the message "
"catalog, equivalent to handles to file returned by @code{open}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5613
#, no-wrap
msgid "@code{catgets}, a @code{catgets} function"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5616
msgid ""
"This handle is of course used in the @code{catgets} function which can be "
"used like this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5619
#, no-wrap
msgid "char *translation = catgets (catd, set_no, msg_id, \"original string\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5625
msgid ""
"The first parameter is this catalog descriptor.  The second parameter "
"specifies the set of messages in this catalog, in which the message "
"described by @code{msg_id} is obtained.  @code{catgets} therefore uses a "
"three-stage addressing:"
msgstr ""

#. type: display
#: original_texis/gettext.texi:5628
#, no-wrap
msgid ""
"catalog name @result{} set number @result{} message ID @result{} "
"translation\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5638
msgid ""
"The fourth argument is not used to address the translation.  It is given as "
"a default value in case when one of the addressing stages fail.  One "
"important thing to remember is that although the return type of catgets is "
"@code{char *} the resulting string @emph{must not} be changed.  It should "
"better be @code{const char *}, but the standard is published in 1988, one "
"year before ANSI C."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5640
#, no-wrap
msgid "@code{catclose}, a @code{catgets} function"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5642
msgid "The last of these functions is used and behaves as expected:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5645
#, no-wrap
msgid "catclose (catd);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5648
msgid "After this no @code{catgets} call using the descriptor is legal anymore."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:5650
#, no-wrap
msgid "Problems with the @code{catgets} Interface?!"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5651
#, no-wrap
msgid "problems with @code{catgets} interface"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5664
msgid ""
"Now that this description seemed to be really easy --- where are the "
"problems we speak of? In fact the interface could be used in a reasonable "
"way, but constructing the message catalogs is a pain.  The reason for this "
"lies in the third argument of @code{catgets}: the unique message ID.  This "
"has to be a numeric value for all messages in a single set.  Perhaps you "
"could imagine the problems keeping such a list while changing the source "
"code.  Add a new message here, remove one there.  Of course there have been "
"developed a lot of tools helping to organize this chaos but one as the other "
"fails in one aspect or the other.  We don't want to say that the other "
"approach has no problems but they are far more easy to manage."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5667
#, no-wrap
msgid "@code{gettext}, a programmer's view"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5673
msgid ""
"The definition of the @code{gettext} interface comes from a Uniforum "
"proposal.  It was submitted there by Sun, who had implemented the "
"@code{gettext} function in SunOS 4, around 1990.  Nowadays, the "
"@code{gettext} interface is specified by the OpenI18N standard."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5680
msgid ""
"The main point about this solution is that it does not follow the method of "
"normal file handling (open-use-close) and that it does not burden the "
"programmer with so many tasks, especially the unique key handling.  Of "
"course here also a unique key is needed, but this key is the message itself "
"(how long or short it is).  See @ref{Comparison} for a more detailed "
"comparison of the two methods."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5685
msgid ""
"The following section contains a rather detailed description of the "
"interface.  We make it that detailed because this is the interface we chose "
"for the GNU @code{gettext} Library.  Programmers interested in using this "
"library will be interested in this description."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5698
#, no-wrap
msgid "@code{gettext} interface"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5704
msgid ""
"The minimal functionality an interface must have is a) to select a domain "
"the strings are coming from (a single domain for all programs is not "
"reasonable because its construction and maintenance is difficult, perhaps "
"impossible) and b) to access a string in a selected domain."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5708
msgid ""
"This is principally the description of the @code{gettext} interface.  It has "
"a global domain which unqualified usages reference.  Of course this domain "
"is selectable by the user."
msgstr ""

#. type: example
#: original_texis/gettext.texi:5711
#, no-wrap
msgid "char *textdomain (const char *domain_name);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5723
msgid ""
"This provides the possibility to change or query the current status of the "
"current global domain of the @code{LC_MESSAGE} category.  The argument is a "
"null-terminated string, whose characters must be legal in the use in "
"filenames.  If the @var{domain_name} argument is @code{NULL}, the function "
"returns the current value.  If no value has been set before, the name of the "
"default domain is returned: @emph{messages}.  Please note that although the "
"return value of @code{textdomain} is of type @code{char *} no changing is "
"allowed.  It is also important to know that no checks of the availability "
"are made.  If the name is not available you will see this by the fact that "
"no translations are provided."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5726
msgid "To use a domain set by @code{textdomain} the function"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5729
#, no-wrap
msgid "char *gettext (const char *msgid);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5736
msgid ""
"is to be used.  This is the simplest reasonable form one can imagine.  The "
"translation of the string @var{msgid} is returned if it is available in the "
"current domain.  If it is not available, the argument itself is returned.  "
"If the argument is @code{NULL} the result is undefined."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5742
msgid ""
"One thing which should come into mind is that no explicit dependency to the "
"used domain is given.  The current value of the domain is used.  If this "
"changes between two executions of the same @code{gettext} call in the "
"program, both calls reference a different message catalog."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5749
msgid ""
"For the easiest case, which is normally used in internationalized packages, "
"once at the beginning of execution a call to @code{textdomain} is issued, "
"setting the domain to a unique name, normally the package name.  In the "
"following code all strings which have to be translated are filtered through "
"the gettext function.  That's all, the package speaks your language."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:5751
#, no-wrap
msgid "Solving Ambiguities"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5752
#, no-wrap
msgid "several domains"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5753
#, no-wrap
msgid "domain ambiguities"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5754
#, no-wrap
msgid "large package"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5767
msgid ""
"While this single name domain works well for most applications there might "
"be the need to get translations from more than one domain.  Of course one "
"could switch between different domains with calls to @code{textdomain}, but "
"this is really not convenient nor is it fast.  A possible situation could be "
"one case subject to discussion during this writing: all error messages of "
"functions in the set of common used functions should go into a separate "
"domain @code{error}.  By this mean we would only need to translate them "
"once.  Another case are messages from a library, as these @emph{have} to be "
"independent of the current domain set by the application."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5770
msgid "For this reasons there are two more functions to retrieve strings:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5775
#, no-wrap
msgid ""
"char *dgettext (const char *domain_name, const char *msgid);\n"
"char *dcgettext (const char *domain_name, const char *msgid,\n"
"                 int category);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5785
msgid ""
"Both take an additional argument at the first place, which corresponds to "
"the argument of @code{textdomain}.  The third argument of @code{dcgettext} "
"allows to use another locale category but @code{LC_MESSAGES}.  But I really "
"don't know where this can be useful.  If the @var{domain_name} is "
"@code{NULL} or @var{category} has an value beside the known ones, the result "
"is undefined.  It should also be noted that this function is not part of the "
"second known implementation of this function family, the one found in "
"Solaris."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5789
msgid ""
"A second ambiguity can arise by the fact, that perhaps more than one domain "
"has the same name.  This can be solved by specifying where the needed "
"message catalog files can be found."
msgstr ""

#. type: example
#: original_texis/gettext.texi:5793
#, no-wrap
msgid ""
"char *bindtextdomain (const char *domain_name,\n"
"                      const char *dir_name);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5804
msgid ""
"Calling this function binds the given domain to a file in the specified "
"directory (how this file is determined follows below).  Especially a file in "
"the systems default place is not favored against the specified file anymore "
"(as it would be by solely using @code{textdomain}).  A @code{NULL} pointer "
"for the @var{dir_name} parameter returns the binding associated with "
"@var{domain_name}.  If @var{domain_name} itself is @code{NULL} nothing "
"happens and a @code{NULL} pointer is returned.  Here again as for all the "
"other functions is true that none of the return value must be changed!"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5811
msgid ""
"It is important to remember that relative path names for the @var{dir_name} "
"parameter can be trouble.  Since the path is always computed relative to the "
"current directory different results will be achieved when the program "
"executes a @code{chdir} command.  Relative paths should always be avoided to "
"avoid dependencies and unreliabilities."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:5813
#, no-wrap
msgid "Locating Message Catalog Files"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5814
#, no-wrap
msgid "message catalog files location"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5823
msgid ""
"Because many different languages for many different packages have to be "
"stored we need some way to add these information to file message catalog "
"files.  The way usually used in Unix environments is have this encoding in "
"the file name.  This is also done here.  The directory name given in "
"@code{bindtextdomain}s second argument (or the default directory), followed "
"by the name of the locale, the locale category, and the domain name are "
"concatenated:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5826
#, no-wrap
msgid "@var{dir_name}/@var{locale}/LC_@var{category}/@var{domain_name}.mo\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5830
msgid ""
"The default value for @var{dir_name} is system specific.  For the GNU "
"library, and for packages adhering to its conventions, it's:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5832
#, no-wrap
msgid "/usr/local/share/locale\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5848
msgid ""
"@var{locale} is the name of the locale category which is designated by "
"@code{LC_@var{category}}.  For @code{gettext} and @code{dgettext} this "
"@code{LC_@var{category}} is always @code{LC_MESSAGES}.@footnote{Some system, "
"e.g.@: mingw, don't have @code{LC_MESSAGES}.  Here we use a more or less "
"arbitrary value for it, namely 1729, the smallest positive integer which can "
"be represented in two different ways as the sum of two cubes.} The name of "
"the locale category is determined through @code{setlocale "
"(LC_@var{category}, NULL)}.  @footnote{When the system does not support "
"@code{setlocale} its behavior in setting the locale values is simulated by "
"looking at the environment variables.} When using the function "
"@code{dcgettext}, you can specify the locale category through the third "
"argument."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:5850
#, no-wrap
msgid "How to specify the output character set @code{gettext} uses"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5851
#, no-wrap
msgid "charset conversion at runtime"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5852
#, no-wrap
msgid "encoding conversion at runtime"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5860
msgid ""
"@code{gettext} not only looks up a translation in a message catalog.  It "
"also converts the translation on the fly to the desired output character "
"set.  This is useful if the user is working in a different character set "
"than the translator who created the message catalog, because it avoids "
"distributing variants of message catalogs which differ only in the character "
"set."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5867
msgid ""
"The output character set is, by default, the value of @code{nl_langinfo "
"(CODESET)}, which depends on the @code{LC_CTYPE} part of the current "
"locale.  But programs which store strings in a locale independent way "
"(e.g.@: UTF-8) can request that @code{gettext} and related functions return "
"the translations in that encoding, by use of the "
"@code{bind_textdomain_codeset} function."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5873
msgid ""
"Note that the @var{msgid} argument to @code{gettext} is not subject to "
"character set conversion.  Also, when @code{gettext} does not find a "
"translation for @var{msgid}, it returns @var{msgid} unchanged -- "
"independently of the current output character set.  It is therefore "
"recommended that all @var{msgid}s be US-ASCII strings."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5874
#, no-wrap
msgid ""
"{char *} bind_textdomain_codeset (const char *@var{domainname}, const char "
"*@var{codeset})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5879
msgid ""
"The @code{bind_textdomain_codeset} function can be used to specify the "
"output character set for message catalogs for domain @var{domainname}.  The "
"@var{codeset} argument must be a valid codeset name which can be used for "
"the @code{iconv_open} function, or a null pointer."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5884
msgid ""
"If the @var{codeset} parameter is the null pointer, "
"@code{bind_textdomain_codeset} returns the currently selected codeset for "
"the domain with the name @var{domainname}.  It returns @code{NULL} if no "
"codeset has yet been selected."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5888
msgid ""
"The @code{bind_textdomain_codeset} function can be used several times.  If "
"used multiple times with the same @var{domainname} argument, the later call "
"overrides the settings made by the earlier one."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:5895
msgid ""
"The @code{bind_textdomain_codeset} function returns a pointer to a string "
"containing the name of the selected codeset.  The string is allocated "
"internally in the function and must not be changed by the user.  If the "
"system went out of core during the execution of "
"@code{bind_textdomain_codeset}, the return value is @code{NULL} and the "
"global variable @var{errno} is set accordingly."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:5898
#, no-wrap
msgid "Using contexts for solving ambiguities"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5899
#, no-wrap
msgid "context"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5900
#, no-wrap
msgid "GUI programs"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5901
#, no-wrap
msgid "translating menu entries"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:5902
#, no-wrap
msgid "menu entries"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5913
msgid ""
"One place where the @code{gettext} functions, if used normally, have big "
"problems is within programs with graphical user interfaces (GUIs).  The "
"problem is that many of the strings which have to be translated are very "
"short.  They have to appear in pull-down menus which restricts the length.  "
"But strings which are not containing entire sentences or at least large "
"fragments of a sentence may appear in more than one situation in the program "
"but might have different translations.  This is especially true for the "
"one-word strings which are frequently used in GUI programs."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5918
msgid ""
"As a consequence many people say that the @code{gettext} approach is wrong "
"and instead @code{catgets} should be used which indeed does not have this "
"problem.  But there is a very simple and powerful method to handle this kind "
"of problems with the @code{gettext} functions."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5925
msgid ""
"Contexts can be added to strings to be translated.  A context dependent "
"translation lookup is when a translation for a given string is searched, "
"that is limited to a given context.  The translation for the same string in "
"a different context can be different.  The different translations of the "
"same string in different contexts can be stored in the in the same MO file, "
"and can be edited by the translator in the same PO file."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5929
msgid ""
"The @file{gettext.h} include file contains the lookup macros for strings "
"with contexts.  They are implemented as thin macros and inline functions "
"over the functions from @code{<libintl.h>}."
msgstr ""

#. type: findex
#: original_texis/gettext.texi:5930
#, no-wrap
msgid "pgettext"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5933
#, no-wrap
msgid "const char *pgettext (const char *msgctxt, const char *msgid);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5938
msgid ""
"In a call of this macro, @var{msgctxt} and @var{msgid} must be string "
"literals.  The macro returns the translation of @var{msgid}, restricted to "
"the context given by @var{msgctxt}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5943
msgid ""
"The @var{msgctxt} string is visible in the PO file to the translator.  You "
"should try to make it somehow canonical and never changing.  Because every "
"time you change an @var{msgctxt}, the translator will have to review the "
"translation of @var{msgid}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5951
msgid ""
"Finding a canonical @var{msgctxt} string that doesn't change over time can "
"be hard.  But you shouldn't use the file name or class name containing the "
"@code{pgettext} call -- because it is a common development task to rename a "
"file or a class, and it shouldn't cause translator work.  Also you shouldn't "
"use a comment in the form of a complete English sentence as @var{msgctxt} -- "
"because orthography or grammar changes are often applied to such sentences, "
"and again, it shouldn't force the translator to do a review."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5954
msgid ""
"The @samp{p} in @samp{pgettext} stands for ``particular'': @code{pgettext} "
"fetches a particular translation of the @var{msgid}."
msgstr ""

#. type: findex
#: original_texis/gettext.texi:5955
#, no-wrap
msgid "dpgettext"
msgstr ""

#. type: findex
#: original_texis/gettext.texi:5956
#, no-wrap
msgid "dcpgettext"
msgstr ""

#. type: example
#: original_texis/gettext.texi:5963
#, no-wrap
msgid ""
"const char *dpgettext (const char *domain_name,\n"
"                       const char *msgctxt, const char *msgid);\n"
"const char *dcpgettext (const char *domain_name,\n"
"                        const char *msgctxt, const char *msgid,\n"
"                        int category);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5969
msgid ""
"These are generalizations of @code{pgettext}.  They behave similarly to "
"@code{dgettext} and @code{dcgettext}, respectively.  The @var{domain_name} "
"argument defines the translation domain.  The @var{category} argument allows "
"to use another locale category than @code{LC_MESSAGES}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5972
msgid ""
"As as example consider the following fictional situation.  A GUI program has "
"a menu bar with the following entries:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:5981
#, no-wrap
msgid ""
"+------------+------------+--------------------------------------+\n"
"| File       | Printer    |                                      |\n"
"+------------+------------+--------------------------------------+\n"
"| Open     | | Select   |\n"
"| New      | | Open     |\n"
"+----------+ | Connect  |\n"
"             +----------+\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5989
msgid ""
"To have the strings @code{File}, @code{Printer}, @code{Open}, @code{New}, "
"@code{Select}, and @code{Connect} translated there has to be at some point "
"in the code a call to a function of the @code{gettext} family.  But in two "
"places the string passed into the function would be @code{Open}.  The "
"translations might not be the same and therefore we are in the dilemma "
"described above."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:5992
msgid ""
"What distinguishes the two places is the menu path from the menu root to the "
"particular menu entries:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6001
#, no-wrap
msgid ""
"Menu|File\n"
"Menu|Printer\n"
"Menu|File|Open\n"
"Menu|File|New\n"
"Menu|Printer|Select\n"
"Menu|Printer|Open\n"
"Menu|Printer|Connect\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6005
msgid ""
"The context is thus the menu path without its last part.  So, the calls look "
"like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6014
#, no-wrap
msgid ""
"pgettext (\"Menu|\", \"File\")\n"
"pgettext (\"Menu|\", \"Printer\")\n"
"pgettext (\"Menu|File|\", \"Open\")\n"
"pgettext (\"Menu|File|\", \"New\")\n"
"pgettext (\"Menu|Printer|\", \"Select\")\n"
"pgettext (\"Menu|Printer|\", \"Open\")\n"
"pgettext (\"Menu|Printer|\", \"Connect\")\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6018
msgid ""
"Whether or not to use the @samp{|} character at the end of the context is a "
"matter of style."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6021
msgid ""
"For more complex cases, where the @var{msgctxt} or @var{msgid} are not "
"string literals, more general macros are available:"
msgstr ""

#. type: findex
#: original_texis/gettext.texi:6022
#, no-wrap
msgid "pgettext_expr"
msgstr ""

#. type: findex
#: original_texis/gettext.texi:6023
#, no-wrap
msgid "dpgettext_expr"
msgstr ""

#. type: findex
#: original_texis/gettext.texi:6024
#, no-wrap
msgid "dcpgettext_expr"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6032
#, no-wrap
msgid ""
"const char *pgettext_expr (const char *msgctxt, const char *msgid);\n"
"const char *dpgettext_expr (const char *domain_name,\n"
"                            const char *msgctxt, const char *msgid);\n"
"const char *dcpgettext_expr (const char *domain_name,\n"
"                             const char *msgctxt, const char *msgid,\n"
"                             int category);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6038
msgid ""
"Here @var{msgctxt} and @var{msgid} can be arbitrary string-valued "
"expressions.  These macros are more general.  But in the case that both "
"argument expressions are string literals, the macros without the "
"@samp{_expr} suffix are more efficient."
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:6040
#, no-wrap
msgid "Additional functions for plural forms"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6041
#, no-wrap
msgid "plural forms"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6047
msgid ""
"The functions of the @code{gettext} family described so far (and all the "
"@code{catgets} functions as well) have one problem in the real world which "
"have been neglected completely in all existing approaches.  What is meant "
"here is the handling of plural forms."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6051
msgid ""
"Looking through Unix source code before the time anybody thought about "
"internationalization (and, sadly, even afterwards) one can often find code "
"similar to the following:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6054
#, no-wrap
msgid "   printf (\"%d file%s deleted\", n, n == 1 ? \"\" : \"s\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6061
msgid ""
"After the first complaints from people internationalizing the code people "
"either completely avoided formulations like this or used strings like "
"@code{\"file(s)\"}.  Both look unnatural and should be avoided.  First tries "
"to solve the problem correctly looked like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6067
#, no-wrap
msgid ""
"   if (n == 1)\n"
"     printf (\"%d file deleted\", n);\n"
"   else\n"
"     printf (\"%d files deleted\", n);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6071
msgid ""
"But this does not solve the problem.  It helps languages where the plural "
"form of a noun is not simply constructed by adding an"
msgstr ""

#. type: ifhtml
#: original_texis/gettext.texi:6073
msgid "‘s’"
msgstr ""

#. type: ifnothtml
#: original_texis/gettext.texi:6076
msgid "`s'"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6081
msgid ""
"but that is all.  Once again people fell into the trap of believing the "
"rules their language is using are universal.  But the handling of plural "
"forms differs widely between the language families.  For example, Rafal "
"Maszkowski @code{<rzm@@mat.uni.torun.pl>} reports:"
msgstr ""

#. type: quotation
#: original_texis/gettext.texi:6084
msgid "In Polish we use e.g.@: plik (file) this way:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6090
#, no-wrap
msgid ""
"1 plik\n"
"2,3,4 pliki\n"
"5-21 pliko'w\n"
"22-24 pliki\n"
"25-31 pliko'w\n"
msgstr ""

#. type: quotation
#: original_texis/gettext.texi:6093
msgid ""
"and so on (o' means 8859-2 oacute which should be rather okreska, similar to "
"aogonek)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6097
msgid ""
"There are two things which can differ between languages (and even inside "
"language families);"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6105
msgid ""
"The form how plural forms are built differs.  This is a problem with "
"languages which have many irregularities.  German, for instance, is a "
"drastic case.  Though English and German are part of the same language "
"family (Germanic), the almost regular forming of plural noun forms "
"(appending an"
msgstr ""

#. type: ifhtml
#: original_texis/gettext.texi:6107
msgid "‘s’)"
msgstr ""

#. type: ifnothtml
#: original_texis/gettext.texi:6110
msgid "`s')"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6112
msgid "is hardly found in German."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6117
msgid ""
"The number of plural forms differ.  This is somewhat surprising for those "
"who only have experiences with Romanic and Germanic languages since here the "
"number is the same (there are two)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6120
msgid ""
"But other language families have only one form or many forms.  More "
"information on this in an extra section."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6126
msgid ""
"The consequence of this is that application writers should not try to solve "
"the problem in their code.  This would be localization since it is only "
"usable for certain, hardcoded language environments.  Instead the extended "
"@code{gettext} interface should be used."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6136
msgid ""
"These extra functions are taking instead of the one key string two strings "
"and a numerical argument.  The idea behind this is that using the numerical "
"argument and the first string as a key, the implementation can select using "
"rules specified by the translator the right plural form.  The two string "
"arguments then will be used to provide a return value in case no message "
"catalog is found (similar to the normal @code{gettext} behavior).  In this "
"case the rules for Germanic language is used and it is assumed that the "
"first string argument is the singular form, the second the plural form."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6144
msgid ""
"This has the consequence that programs without language catalogs can display "
"the correct strings only if the program itself is written using a Germanic "
"language.  This is a limitation but since the GNU C library (as well as the "
"GNU @code{gettext} package) are written as part of the GNU package and the "
"coding standards for the GNU project require program being written in "
"English, this solution nevertheless fulfills its purpose."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6145
#, no-wrap
msgid ""
"{char *} ngettext (const char *@var{msgid1}, const char *@var{msgid2}, "
"unsigned long int @var{n})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6154
msgid ""
"The @code{ngettext} function is similar to the @code{gettext} function as it "
"finds the message catalogs in the same way.  But it takes two extra "
"arguments.  The @var{msgid1} parameter must contain the singular form of the "
"string to be converted.  It is also used as the key for the search in the "
"catalog.  The @var{msgid2} parameter is the plural form.  The parameter "
"@var{n} is used to determine the plural form.  If no message catalog is "
"found @var{msgid1} is returned if @code{n == 1}, otherwise @code{msgid2}."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6156
msgid "An example for the use of this function is:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6159
#, no-wrap
msgid "printf (ngettext (\"%d file removed\", \"%d files removed\", n), n);\n"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6164
msgid ""
"Please note that the numeric value @var{n} has to be passed to the "
"@code{printf} function as well.  It is not sufficient to pass it only to "
"@code{ngettext}."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6167
msgid ""
"In the English singular case, the number -- always 1 -- can be replaced with "
"\"one\":"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6170
#, no-wrap
msgid "printf (ngettext (\"One file removed\", \"%d files removed\", n), n);\n"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6175
msgid ""
"This works because the @samp{printf} function discards excess arguments that "
"are not consumed by the format string."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6178
msgid ""
"If this function is meant to yield a format string that takes two or more "
"arguments, you can not use it like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6184
#, no-wrap
msgid ""
"printf (ngettext (\"%d file removed from directory %s\",\n"
"                  \"%d files removed from directory %s\",\n"
"                  n),\n"
"        n, dir);\n"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6192
msgid ""
"because in many languages the translators want to replace the @samp{%d} with "
"an explicit word in the singular case, just like ``one'' in English, and C "
"format strings cannot consume the second argument but skip the first "
"argument.  Instead, you have to reorder the arguments so that @samp{n} comes "
"last:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6198
#, no-wrap
msgid ""
"printf (ngettext (\"%2$d file removed from directory %1$s\",\n"
"                  \"%2$d files removed from directory %1$s\",\n"
"                  n),\n"
"        dir, n);\n"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6202
msgid "See @ref{c-format} for details about this argument reordering syntax."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6207
msgid ""
"When you know that the value of @code{n} is within a given range, you can "
"specify it as a comment directed to the @code{xgettext} tool.  This "
"information may help translators to use more adequate translations.  Like "
"this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6214
#, no-wrap
msgid ""
"if (days > 7 && days < 14)\n"
"  /* xgettext: range: 1..6 */\n"
"  printf (ngettext (\"one week and one day\", \"one week and %d days\",\n"
"                    days - 7),\n"
"          days - 7);\n"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6218
msgid ""
"It is also possible to use this function when the strings don't contain a "
"cardinal number:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6223
#, no-wrap
msgid ""
"puts (ngettext (\"Delete the selected file?\",\n"
"                \"Delete the selected files?\",\n"
"                n));\n"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6226
msgid "In this case the number @var{n} is only used to choose the plural form."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6228
#, no-wrap
msgid ""
"{char *} dngettext (const char *@var{domain}, const char *@var{msgid1}, "
"const char *@var{msgid2}, unsigned long int @var{n})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6233
msgid ""
"The @code{dngettext} is similar to the @code{dgettext} function in the way "
"the message catalog is selected.  The difference is that it takes two extra "
"parameter to provide the correct plural form.  These two parameters are "
"handled in the same way @code{ngettext} handles them."
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6235
#, no-wrap
msgid ""
"{char *} dcngettext (const char *@var{domain}, const char *@var{msgid1}, "
"const char *@var{msgid2}, unsigned long int @var{n}, int @var{category})"
msgstr ""

#. type: deftypefun
#: original_texis/gettext.texi:6240
msgid ""
"The @code{dcngettext} is similar to the @code{dcgettext} function in the way "
"the message catalog is selected.  The difference is that it takes two extra "
"parameter to provide the correct plural form.  These two parameters are "
"handled in the same way @code{ngettext} handles them."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6247
msgid ""
"Now, how do these functions solve the problem of the plural forms? Without "
"the input of linguists (which was not available) it was not possible to "
"determine whether there are only a few different forms in which plural forms "
"are formed or whether the number can increase with every new supported "
"language."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6253
msgid ""
"Therefore the solution implemented is to allow the translator to specify the "
"rules of how to select the plural form.  Since the formula varies with every "
"language this is the only viable solution except for hardcoding the "
"information in the code (which still would require the possibility of "
"extensions to not prevent the use of new languages)."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6254
#, no-wrap
msgid "specifying plural form in a PO file"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:6255
#, no-wrap
msgid "nplurals@r{, in a PO file header}"
msgstr ""

#. type: kwindex
#: original_texis/gettext.texi:6256
#, no-wrap
msgid "plural@r{, in a PO file header}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6260
msgid ""
"The information about the plural form selection has to be stored in the "
"header entry of the PO file (the one with the empty @code{msgid} string).  "
"The plural form information looks like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6263
#, no-wrap
msgid "Plural-Forms: nplurals=2; plural=n == 1 ? 0 : 1;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6278
msgid ""
"The @code{nplurals} value must be a decimal number which specifies how many "
"different plural forms exist for this language.  The string following "
"@code{plural} is an expression which is using the C language syntax.  "
"Exceptions are that no negative numbers are allowed, numbers must be "
"decimal, and the only variable allowed is @code{n}.  Spaces are allowed in "
"the expression, but backslash-newlines are not; in the examples below the "
"backslash-newlines are present for formatting purposes only.  This "
"expression will be evaluated whenever one of the functions @code{ngettext}, "
"@code{dngettext}, or @code{dcngettext} is called.  The numeric value passed "
"to these functions is then substituted for all uses of the variable @code{n} "
"in the expression.  The resulting value then must be greater or equal to "
"zero and smaller than the value given as the value of @code{nplurals}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6280
#, no-wrap
msgid "plural form formulas"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6290
msgid ""
"The following rules are known at this point.  The language with families are "
"listed.  But this does not necessarily mean the information can be "
"generalized for the whole family (as can be easily seen in the table "
"below).@footnote{Additions are welcome.  Send appropriate information to "
"@email{bug-gnu-gettext@@gnu.org} and @email{bug-glibc-manual@@gnu.org}.  The "
"Unicode CLDR Project (@uref{http://cldr.unicode.org}) provides a "
"comprehensive set of plural forms in a different format.  The @code{msginit} "
"program has preliminary support for the format so you can use it as a "
"baseline (@pxref{msginit Invocation}).}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6292
#, no-wrap
msgid "Only one form:"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6296
msgid ""
"Some languages only require one single form.  There is no distinction "
"between the singular and plural form.  An appropriate header entry would "
"look like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6299
#, no-wrap
msgid "Plural-Forms: nplurals=1; plural=0;\n"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6303 original_texis/gettext.texi:6326 original_texis/gettext.texi:6386 original_texis/gettext.texi:6402 original_texis/gettext.texi:6417 original_texis/gettext.texi:6433 original_texis/gettext.texi:6450 original_texis/gettext.texi:6467 original_texis/gettext.texi:6487 original_texis/gettext.texi:6505 original_texis/gettext.texi:6521 original_texis/gettext.texi:6538
msgid "Languages with this property include:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6305
#, no-wrap
msgid "Asian family"
msgstr ""

#.    122.1 million speakers
#.   68.6 million speakers
#.        66.3 million speakers
#. type: table
#: original_texis/gettext.texi:6309
msgid "Japanese, Vietnamese, Korean"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6309
#, no-wrap
msgid "Tai-Kadai family"
msgstr ""

#.          20.4 million speakers
#. type: table
#: original_texis/gettext.texi:6311
msgid "Thai"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6313
#, no-wrap
msgid "Two forms, singular used for one only"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6316
msgid ""
"This is the form used in most existing programs since it is what English is "
"using.  A header entry would look like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6319
#, no-wrap
msgid "Plural-Forms: nplurals=2; plural=n != 1;\n"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6323
msgid ""
"(Note: this uses the feature of C expressions that boolean expressions have "
"to value zero or one.)"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6328
#, no-wrap
msgid "Germanic family"
msgstr ""

#.     328.0 million speakers
#.       96.9 million speakers
#.        21.7 million speakers
#.       8.3 million speakers
#.        5.6 million speakers
#.     4.6 million speakers
#.        0.05 million speakers
#. type: table
#: original_texis/gettext.texi:6336
msgid "English, German, Dutch, Swedish, Danish, Norwegian, Faroese"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6336 original_texis/gettext.texi:6388 original_texis/gettext.texi:6435
#, no-wrap
msgid "Romanic family"
msgstr ""

#.     328.5 million speakers
#.  178.0 million speakers - 163 million Brazilian Portuguese
#.       61.7 million speakers
#. type: table
#: original_texis/gettext.texi:6340
msgid "Spanish, Portuguese, Italian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6340
#, no-wrap
msgid "Latin/Greek family"
msgstr ""

#.         13.1 million speakers
#. type: table
#: original_texis/gettext.texi:6342
msgid "Greek"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6342 original_texis/gettext.texi:6469 original_texis/gettext.texi:6489 original_texis/gettext.texi:6507 original_texis/gettext.texi:6523
#, no-wrap
msgid "Slavic family"
msgstr ""

#.      9.1 million speakers
#. type: table
#: original_texis/gettext.texi:6344
msgid "Bulgarian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6344 original_texis/gettext.texi:6359
#, no-wrap
msgid "Finno-Ugric family"
msgstr ""

#.       5.0 million speakers
#.       1.0 million speakers
#. type: table
#: original_texis/gettext.texi:6347
msgid "Finnish, Estonian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6347
#, no-wrap
msgid "Semitic family"
msgstr ""

#.         5.3 million speakers
#. type: table
#: original_texis/gettext.texi:6349
msgid "Hebrew"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6349
#, no-wrap
msgid "Austronesian family"
msgstr ""

#.  23.2 million speakers
#. type: table
#: original_texis/gettext.texi:6351
msgid "Bahasa Indonesian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6351
#, no-wrap
msgid "Artificial"
msgstr ""

#.        2 million speakers
#. type: table
#: original_texis/gettext.texi:6353
msgid "Esperanto"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6357
msgid "Other languages using the same header entry are:"
msgstr ""

#.    12.5 million speakers
#. type: table
#: original_texis/gettext.texi:6361
msgid "Hungarian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6361
#, no-wrap
msgid "Turkic/Altaic family"
msgstr ""

#.      50.8 million speakers
#. type: table
#: original_texis/gettext.texi:6363
msgid "Turkish"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6371
msgid ""
"Hungarian does not appear to have a plural if you look at sentences "
"involving cardinal numbers.  For example, ``1 apple'' is ``1 alma'', and "
"``123 apples'' is ``123 alma''.  But when the number is not explicit, the "
"distinction between singular and plural exists: ``the apple'' is ``az "
"alma'', and ``the apples'' is ``az alm@'{a}k''.  Since @code{ngettext} has "
"to support both types of sentences, it is classified here, under ``two "
"forms''."
msgstr ""

#. type: table
#: original_texis/gettext.texi:6376
msgid ""
"The same holds for Turkish: ``1 apple'' is ``1 elma'', and ``123 apples'' is "
"``123 elma''.  But when the number is omitted, the distinction between "
"singular and plural exists: ``the apple'' is ``elma'', and ``the apples'' is "
"``elmalar''."
msgstr ""

#. type: item
#: original_texis/gettext.texi:6377
#, no-wrap
msgid "Two forms, singular used for zero and one"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6379
msgid "Exceptional case in the language family.  The header entry would be:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6382
#, no-wrap
msgid "Plural-Forms: nplurals=2; plural=n>1;\n"
msgstr ""

#.  163 million speakers
#.                  67.8 million speakers
#. type: table
#: original_texis/gettext.texi:6391
msgid "Brazilian Portuguese, French"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6393
#, no-wrap
msgid "Three forms, special case for zero"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6395 original_texis/gettext.texi:6410 original_texis/gettext.texi:6425
msgid "The header entry would be:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6398
#, no-wrap
msgid ""
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : "
"2;\n"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6404 original_texis/gettext.texi:6452
#, no-wrap
msgid "Baltic family"
msgstr ""

#.      1.5 million speakers
#. type: table
#: original_texis/gettext.texi:6406
msgid "Latvian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6408
#, no-wrap
msgid "Three forms, special cases for one and two"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6413
#, no-wrap
msgid "Plural-Forms: nplurals=3; plural=n==1 ? 0 : n==2 ? 1 : 2;\n"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6419
#, no-wrap
msgid "Celtic"
msgstr ""

#.  0.4 million speakers
#. type: table
#: original_texis/gettext.texi:6421
msgid "Gaeilge (Irish)"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6423
#, no-wrap
msgid "Three forms, special case for numbers ending in 00 or [2-9][0-9]"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6429
#, no-wrap
msgid ""
"Plural-Forms: nplurals=3; \\\n"
"    plural=n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2;\n"
msgstr ""

#.     23.4 million speakers
#. type: table
#: original_texis/gettext.texi:6437
msgid "Romanian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6439
#, no-wrap
msgid "Three forms, special case for numbers ending in 1[2-9]"
msgstr ""

#. type: table
#: original_texis/gettext.texi:6441 original_texis/gettext.texi:6458 original_texis/gettext.texi:6479 original_texis/gettext.texi:6496 original_texis/gettext.texi:6513 original_texis/gettext.texi:6529
msgid "The header entry would look like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6446
#, no-wrap
msgid ""
"Plural-Forms: nplurals=3; \\\n"
"    plural=n%10==1 && n%100!=11 ? 0 : \\\n"
"           n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
msgstr ""

#.   3.2 million speakers
#. type: table
#: original_texis/gettext.texi:6454
msgid "Lithuanian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6456
#, no-wrap
msgid ""
"Three forms, special cases for numbers ending in 1 and 2, 3, 4, except those "
"ending in 1[1-4]"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6463
#, no-wrap
msgid ""
"Plural-Forms: nplurals=3; \\\n"
"    plural=n%10==1 && n%100!=11 ? 0 : \\\n"
"           n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
msgstr ""

#.     143.6 million speakers
#.    37.0 million speakers
#.    8.6 million speakers
#.       7.0 million speakers
#.       5.5 million speakers
#. type: table
#: original_texis/gettext.texi:6475
msgid "Russian, Ukrainian, Belarusian, Serbian, Croatian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6477
#, no-wrap
msgid "Three forms, special cases for 1 and 2, 3, 4"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6483
#, no-wrap
msgid ""
"Plural-Forms: nplurals=3; \\\n"
"    plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\n"
msgstr ""

#.       9.5 million speakers
#.       5.0 million speakers
#. type: table
#: original_texis/gettext.texi:6492
msgid "Czech, Slovak"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6494
#, no-wrap
msgid "Three forms, special case for one and some numbers ending in 2, 3, or 4"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6501
#, no-wrap
msgid ""
"Plural-Forms: nplurals=3; \\\n"
"    plural=n==1 ? 0 : \\\n"
"           n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
msgstr ""

#.       40.0 million speakers
#. type: table
#: original_texis/gettext.texi:6509
msgid "Polish"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6511
#, no-wrap
msgid "Four forms, special case for one and all numbers ending in 02, 03, or 04"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6517
#, no-wrap
msgid ""
"Plural-Forms: nplurals=4; \\\n"
"    plural=n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3;\n"
msgstr ""

#.    1.9 million speakers
#. type: table
#: original_texis/gettext.texi:6525
msgid "Slovenian"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6527
#, no-wrap
msgid ""
"Six forms, special cases for one, two, all numbers ending in 02, 03, @dots{} "
"10, all numbers ending in 11 @dots{} 99, and others"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6534
#, no-wrap
msgid ""
"Plural-Forms: nplurals=6; \\\n"
"    plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 \\\n"
"    : n%100>=11 ? 4 : 5;\n"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6540
#, no-wrap
msgid "Afroasiatic family"
msgstr ""

#.     246.0 million speakers
#. type: table
#: original_texis/gettext.texi:6542
msgid "Arabic"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6548
msgid ""
"You might now ask, @code{ngettext} handles only numbers @var{n} of type "
"@samp{unsigned long}.  What about larger integer types? What about negative "
"numbers? What about floating-point numbers?"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6560
msgid ""
"About larger integer types, such as @samp{uintmax_t} or @samp{unsigned long "
"long}: they can be handled by reducing the value to a range that fits in an "
"@samp{unsigned long}.  Simply casting the value to @samp{unsigned long} "
"would not do the right thing, since it would treat @code{ULONG_MAX + 1} like "
"zero, @code{ULONG_MAX + 2} like singular, and the like.  Here you can "
"exploit the fact that all mentioned plural form formulas eventually become "
"periodic, with a period that is a divisor of 100 (or 1000 or 1000000).  So, "
"when you reduce a large value to another one in the range [1000000, 1999999] "
"that ends in the same 6 decimal digits, you can assume that it will lead to "
"the same plural form selection.  This code does this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6570
#, no-wrap
msgid ""
"#include <inttypes.h>\n"
"uintmax_t nbytes = ...;\n"
"printf (ngettext (\"The file has %\"PRIuMAX\" byte.\",\n"
"                  \"The file has %\"PRIuMAX\" bytes.\",\n"
"                  (nbytes > ULONG_MAX\n"
"                   ? (nbytes % 1000000) + 1000000\n"
"                   : nbytes)),\n"
"        nbytes);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6576
msgid ""
"Negative and floating-point values usually represent physical entities for "
"which singular and plural don't clearly apply.  In such cases, there is no "
"need to use @code{ngettext}; a simple @code{gettext} call with a form "
"suitable for all values will do.  For example:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6580
#, no-wrap
msgid ""
"printf (gettext (\"Time elapsed: %.3f seconds\"),\n"
"        num_milliseconds * 0.001);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6584
msgid "Even if @var{num_milliseconds} happens to be a multiple of 1000, the output"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:6586
#, no-wrap
msgid "Time elapsed: 1.000 seconds\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6589
msgid "is acceptable in English, and similarly for other languages."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6592
msgid ""
"The translators' perspective regarding plural forms is explained in "
"@ref{Translating plural forms}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6595
#, no-wrap
msgid "optimization of @code{gettext} functions"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6604
msgid ""
"At this point of the discussion we should talk about an advantage of the GNU "
"@code{gettext} implementation.  Some readers might have pointed out that an "
"internationalized program might have a poor performance if some string has "
"to be translated in an inner loop.  While this is unavoidable when the "
"string varies from one run of the loop to the other it is simply a waste of "
"time when the string is always the same.  Take the following example:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:6613
#, no-wrap
msgid ""
"@{\n"
"  while (@dots{})\n"
"    @{\n"
"      puts (gettext (\"Hello world\"));\n"
"    @}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6619
msgid ""
"When the locale selection does not change between two runs the resulting "
"string is always the same.  One way to use this is:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:6629
#, no-wrap
msgid ""
"@{\n"
"  str = gettext (\"Hello world\");\n"
"  while (@dots{})\n"
"    @{\n"
"      puts (str);\n"
"    @}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6635
msgid ""
"But this solution is not usable in all situation (e.g.@: when the locale "
"selection changes) nor does it lead to legible code."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6640
msgid ""
"For this reason, GNU @code{gettext} caches previous translation results.  "
"When the same translation is requested twice, with no new message catalogs "
"being loaded in between, @code{gettext} will, the second time, find the "
"result through a single cache lookup."
msgstr ""

#. type: section
#: original_texis/gettext.texi:6642
#, no-wrap
msgid "Comparing the Two Interfaces"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6643
#, no-wrap
msgid "@code{gettext} vs @code{catgets}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6644
#, no-wrap
msgid "comparison of interfaces"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6653
msgid ""
"The following discussion is perhaps a little bit colored.  As said above we "
"implemented GNU @code{gettext} following the Uniforum proposal and this "
"surely has its reasons.  But it should show how we came to this decision."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6660
msgid ""
"First we take a look at the developing process.  When we write an "
"application using NLS provided by @code{gettext} we proceed as always.  Only "
"when we come to a string which might be seen by the users and thus has to be "
"translated we use @code{gettext(\"@dots{}\")} instead of "
"@code{\"@dots{}\"}.  At the beginning of each source file (or in a central "
"header file) we define"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6663
#, no-wrap
msgid "#define gettext(String) (String)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6672
msgid ""
"Even this definition can be avoided when the system supports the "
"@code{gettext} function in its C library.  When we compile this code the "
"result is the same as if no NLS code is used.  When you take a look at the "
"GNU @code{gettext} code you will see that we use @code{_(\"@dots{}\")} "
"instead of @code{gettext(\"@dots{}\")}.  This reduces the number of "
"additional characters per translatable string to @emph{3} (in words: three)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6675
msgid ""
"When now a production version of the program is needed we simply replace the "
"definition"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6678
#, no-wrap
msgid "#define _(String) (String)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6682
msgid "by"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6694
msgid ""
"Additionally we run the program @file{xgettext} on all source code file "
"which contain translatable strings and that's it: we have a running program "
"which does not depend on translations to be available, but which can use any "
"that becomes available."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6695
#, no-wrap
msgid "@code{N_}, a convenience macro"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6699
msgid ""
"The same procedure can be done for the @code{gettext_noop} invocations "
"(@pxref{Special cases}).  One usually defines @code{gettext_noop} as a no-op "
"macro.  So you should consider the following code for your project:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6703
#, no-wrap
msgid ""
"#define gettext_noop(String) String\n"
"#define N_(String) gettext_noop (String)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6709
msgid ""
"@code{N_} is a short form similar to @code{_}.  The @file{Makefile} in the "
"@file{po/} directory of GNU @code{gettext} knows by default both of the "
"mentioned short forms so you are invited to follow this proposal for your "
"own ease."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6719
msgid ""
"Now to @code{catgets}.  The main problem is the work for the programmer.  "
"Every time he comes to a translatable string he has to define a number (or a "
"symbolic constant) which has also be defined in the message catalog file.  "
"He also has to take care for duplicate entries, duplicate message IDs etc.  "
"If he wants to have the same quality in the message catalog as the GNU "
"@code{gettext} program provides he also has to put the descriptive comments "
"for the strings and the location in all source code files in the message "
"catalog.  This is nearly a Mission: Impossible."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6724
msgid ""
"But there are also some points people might call advantages speaking for "
"@code{catgets}.  If you have a single word in a string and this string is "
"used in different contexts it is likely that in one or the other language "
"the word has different translations.  Example:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6727
#, no-wrap
msgid ""
"printf (\"%s: %d\", gettext (\"number\"), number_of_errors)\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6730
#, no-wrap
msgid ""
"printf (\"you should see %d %s\", number_count,\n"
"        number_count == 1 ? gettext (\"number\") : gettext (\"numbers\"))\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6737
msgid ""
"Here we have to translate two times the string @code{\"number\"}.  Even if "
"you do not speak a language beside English it might be possible to recognize "
"that the two words have a different meaning.  In German the first appearance "
"has to be translated to @code{\"Anzahl\"} and the second to @code{\"Zahl\"}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6742
msgid ""
"Now you can say that this example is really esoteric.  And you are right! "
"This is exactly how we felt about this problem and decide that it does not "
"weight that much.  The solution for the above problem could be very easy:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6745
#, no-wrap
msgid ""
"printf (\"%s %d\", gettext (\"number:\"), number_of_errors)\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6749
#, no-wrap
msgid ""
"printf (number_count == 1 ? gettext (\"you should see %d number\")\n"
"                          : gettext (\"you should see %d numbers\"),\n"
"        number_count)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6754
msgid ""
"We believe that we can solve all conflicts with this method.  If it is "
"difficult one can also consider changing one of the conflicting string a "
"little bit.  But it is not impossible to overcome."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6758
msgid ""
"@code{catgets} allows same original entry to have different translations, "
"but @code{gettext} has another, scalable approach for solving ambiguities of "
"this kind: @xref{Ambiguities}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6766
msgid ""
"Starting with version 0.9.4 the library @code{libintl.h} should be "
"self-contained.  I.e., you can use it in your own programs without providing "
"additional functions.  The @file{Makefile} will put the header and the "
"library in directories selected using the @code{$(prefix)}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6772 original_texis/gettext.texi:6850 original_texis/gettext.texi:6984 original_texis/gettext.texi:7048 original_texis/gettext.texi:7088 original_texis/gettext.texi:7165 original_texis/gettext.texi:7366 original_texis/gettext.texi:12762
msgid ""
"@strong{ NOTE: } This documentation section is outdated and needs to be "
"revised."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6777
msgid ""
"To fully exploit the functionality of the GNU @code{gettext} library it is "
"surely helpful to read the source code.  But for those who don't want to "
"spend that much time in reading the (sometimes complicated) code here is a "
"list comments:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6779
#, no-wrap
msgid "Changing the language at runtime"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:6780
#, no-wrap
msgid "language selection at runtime"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6787
msgid ""
"For interactive programs it might be useful to offer a selection of the used "
"language at runtime.  To understand how to do this one need to know how the "
"used language is determined while executing the @code{gettext} function.  "
"The method which is presented here only works correctly with the GNU "
"implementation of the @code{gettext} functions."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6792
msgid ""
"In the function @code{dcgettext} at every call the current setting of the "
"highest priority environment variable is determined and used.  Highest "
"priority means here the following list with decreasing priority:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:6804
#, no-wrap
msgid "@code{LC_xxx}, according to selected locale category"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6811
msgid ""
"Afterwards the path is constructed using the found value and the translation "
"file is loaded if available."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6817
msgid ""
"What happens now when the value for, say, @code{LANGUAGE} changes? According "
"to the process explained above the new value of this variable is found as "
"soon as the @code{dcgettext} function is called.  But this also means the "
"(perhaps) different message catalog file is loaded.  In other words: the "
"used language is changed."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6825
msgid ""
"But there is one little hook.  The code for gcc-2.7.0 and up provides some "
"optimization.  This optimization normally prevents the calling of the "
"@code{dcgettext} function as long as no new catalog is loaded.  But if "
"@code{dcgettext} is not called the program also cannot find the "
"@code{LANGUAGE} variable be changed (@pxref{Optimized gettext}).  A solution "
"for this is very easy.  Include the following code in the language switching "
"function."
msgstr ""

#. type: example
#: original_texis/gettext.texi:6829
#, no-wrap
msgid ""
"  /* Change language.  */\n"
"  setenv (\"LANGUAGE\", \"fr\", 1);\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:6835
#, no-wrap
msgid ""
"  /* Make change known.  */\n"
"  @{\n"
"    extern int  _nl_msg_cat_cntr;\n"
"    ++_nl_msg_cat_cntr;\n"
"  @}\n"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:6837
#, no-wrap
msgid "_nl_msg_cat_cntr"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:6842
msgid ""
"The variable @code{_nl_msg_cat_cntr} is defined in @file{loadmsgcat.c}.  You "
"don't need to know what this is for.  But it can be used to detect whether a "
"@code{gettext} implementation is GNU gettext and not non-GNU system's native "
"gettext implementation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6870
msgid ""
"There are two competing methods for language independent messages: the "
"X/Open @code{catgets} method, and the Uniforum @code{gettext} method.  The "
"@code{catgets} method indexes messages by integers; the @code{gettext} "
"method indexes them by their English translations.  The @code{catgets} "
"method has been around longer and is supported by more vendors.  The "
"@code{gettext} method is supported by Sun, and it has been heard that the "
"COSE multi-vendor initiative is supporting it.  Neither method is a POSIX "
"standard; the POSIX.1 committee had a lot of disagreement in this area."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6878
msgid ""
"Neither one is in the POSIX standard.  There was much disagreement in the "
"POSIX.1 committee about using the @code{gettext} routines vs. @code{catgets} "
"(XPG).  In the end the committee couldn't agree on anything, so no messaging "
"system was included as part of the standard.  I believe the informative "
"annex of the standard includes the XPG3 messaging interfaces, ``@dots{}as an "
"example of a messaging system that has been implemented@dots{}''"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6882
msgid ""
"They were very careful not to say anywhere that you should use one set of "
"interfaces over the other.  For more on this topic please see the "
"Programming for Internationalization FAQ."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6890
msgid ""
"There have been a few discussions of late on the use of @code{catgets} as a "
"base.  I think it important to present both sides of the argument and hence "
"am opting to play devil's advocate for a little bit."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6894
msgid ""
"I'll not deny the fact that @code{catgets} could have been designed a lot "
"better.  It currently has quite a number of limitations and these have "
"already been pointed out."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6903
msgid ""
"However there is a great deal to be said for consistency and "
"standardization.  A common recurring problem when writing Unix software is "
"the myriad portability problems across Unix platforms.  It seems as if every "
"Unix vendor had a look at the operating system and found parts they could "
"improve upon.  Undoubtedly, these modifications are probably innovative and "
"solve real problems.  However, software developers have a hard time keeping "
"up with all these changes across so many platforms."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6910
msgid ""
"And this has prompted the Unix vendors to begin to standardize their "
"systems.  Hence the impetus for Spec1170.  Every major Unix vendor has "
"committed to supporting this standard and every Unix software developer "
"waits with glee the day they can write software to this standard and simply "
"recompile (without having to use autoconf)  across different platforms."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6916
msgid ""
"As I understand it, Spec1170 is roughly based upon version 4 of the X/Open "
"Portability Guidelines (XPG4).  Because @code{catgets} and friends are "
"defined in XPG4, I'm led to believe that @code{catgets} is a part of "
"Spec1170 and hence will become a standardized component of all Unix systems."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6928
msgid ""
"Now it seems kind of wasteful to me to have two different systems installed "
"for accessing message catalogs.  If we do want to remedy @code{catgets} "
"deficiencies why don't we try to expand @code{catgets} (in a compatible "
"manner) rather than implement an entirely new system.  Otherwise, we'll end "
"up with two message catalog access systems installed with an operating "
"system - one set of routines for packages using GNU @code{gettext} for their "
"internationalization, and another set of routines (catgets) for all other "
"software.  Bloated?"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6942
msgid ""
"Supposing another catalog access system is implemented.  Which do we "
"recommend? At least for Linux, we need to attract as many software "
"developers as possible.  Hence we need to make it as easy for them to port "
"their software as possible.  Which means supporting @code{catgets}.  We will "
"be implementing the @code{libintl} code within our @code{libc}, but does "
"this mean we also have to incorporate another message catalog access scheme "
"within our @code{libc} as well? And what about people who are going to be "
"using the @code{libintl} + non-@code{catgets} routines.  When they port "
"their software to other platforms, they're now going to have to include the "
"front-end (@code{libintl}) code plus the back-end code (the "
"non-@code{catgets} access routines) with their software instead of just "
"including the @code{libintl} code with their software."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6948
msgid ""
"Message catalog support is however only the tip of the iceberg.  What about "
"the data for the other locale categories? They also have a number of "
"deficiencies.  Are we going to abandon them as well and develop another "
"duplicate set of routines (should @code{libintl} expand beyond message "
"catalog support)?"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6952
msgid ""
"Like many parts of Unix that can be improved upon, we're stuck with "
"balancing compatibility with the past with useful improvements and "
"innovations for the future."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6959
msgid ""
"X/Open agreed very late on the standard form so that many implementations "
"differ from the final form.  Both of my system (old Linux catgets and "
"Ultrix-4) have a strange variation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6963
msgid ""
"OK.  After incorporating the last changes I have to spend some time on "
"making the GNU/Linux @code{libc} @code{gettext} functions.  So in future "
"Solaris is not the only system having @code{gettext}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6988
msgid ""
"Free software is going international! The Translation Project is a way to "
"get maintainers, translators and users all together, so free software will "
"gradually become able to speak many native languages."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:6994
msgid ""
"The GNU @code{gettext} tool set contains @emph{everything} maintainers need "
"for internationalizing their packages for messages.  It also contains quite "
"useful tools for helping translators at localizing messages to their native "
"language, once a package has already been internationalized."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7000
msgid ""
"To achieve the Translation Project, we need many interested people who like "
"their own language and write it well, and who are also able to synergize "
"with other translators speaking the same language.  If you'd like to "
"volunteer to @emph{work} at translating messages, please send mail to your "
"translating team."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7007
msgid ""
"Each team has its own mailing list, courtesy of Linux International.  You "
"may reach your translating team at the address @file{@var{ll}@@li.org}, "
"replacing @var{ll} by the two-letter @w{ISO 639} code for your language.  "
"Language codes are @emph{not} the same as country codes given in @w{ISO "
"3166}.  The following translating teams exist:"
msgstr ""

#. type: quotation
#: original_texis/gettext.texi:7015
msgid ""
"Chinese @code{zh}, Czech @code{cs}, Danish @code{da}, Dutch @code{nl}, "
"Esperanto @code{eo}, Finnish @code{fi}, French @code{fr}, Irish @code{ga}, "
"German @code{de}, Greek @code{el}, Italian @code{it}, Japanese @code{ja}, "
"Indonesian @code{in}, Norwegian @code{no}, Polish @code{pl}, Portuguese "
"@code{pt}, Russian @code{ru}, Spanish @code{es}, Swedish @code{sv} and "
"Turkish @code{tr}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7023
msgid ""
"For example, you may reach the Chinese translating team by writing to "
"@file{zh@@li.org}.  When you become a member of the translating team for "
"your own language, you may subscribe to its list.  For example, Swedish "
"people can send a message to @w{@file{sv-request@@li.org}}, having this "
"message body:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:7026
#, no-wrap
msgid "subscribe\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7033
msgid ""
"Keep in mind that team members should be interested in @emph{working} at "
"translations, or at solving translational difficulties, rather than merely "
"lurking around.  If your team does not exist yet and you want to start one, "
"please write to @w{@file{coordinator@@translationproject.org}}; you will "
"then reach the coordinator for all translator teams."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7042
msgid ""
"A handful of GNU packages have already been adapted and provided with "
"message translations for several languages.  Translation teams have begun to "
"organize, using these packages as a starting point.  But there are many more "
"packages and many languages for which we have no volunteer translators.  If "
"you would like to volunteer to work at translating messages, please send "
"mail to @file{coordinator@@translationproject.org} indicating what "
"language(s)  you can work on."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7051
msgid ""
"This is now official, GNU is going international! Here is the announcement "
"submitted for the January 1995 GNU Bulletin:"
msgstr ""

#. type: quotation
#: original_texis/gettext.texi:7061
msgid ""
"A handful of GNU packages have already been adapted and provided with "
"message translations for several languages.  Translation teams have begun to "
"organize, using these packages as a starting point.  But there are many more "
"packages and many languages for which we have no volunteer translators.  If "
"you'd like to volunteer to work at translating messages, please send mail to "
"@samp{coordinator@@translationproject.org} indicating what language(s)  you "
"can work on."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7067
msgid ""
"This document should answer many questions for those who are curious about "
"the process or would like to contribute.  Please at least skim over it, "
"hoping to cut down a little of the high volume of e-mail generated by this "
"collective effort towards internationalization of free software."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7072
msgid ""
"Most free programming which is widely shared is done in English, and "
"currently, English is used as the main communicating language between "
"national communities collaborating to free software.  This very document is "
"written in English.  This will not change in the foreseeable future."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7079
msgid ""
"However, there is a strong appetite from national communities for having "
"more software able to write using national language and habits, and there is "
"an on-going effort to modify free software in such a way that it becomes "
"able to do so.  The experiments driven so far raised an enthusiastic "
"response from pretesters, so we believe that internationalization of free "
"software is dedicated to succeed."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7082
msgid ""
"For suggestion clarifications, additions or corrections to this document, "
"please e-mail to @file{coordinator@@translationproject.org}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7091
msgid ""
"Facing this internationalization effort, a few users expressed their "
"concerns.  Some of these doubts are presented and discussed, here."
msgstr ""

#. type: item
#: original_texis/gettext.texi:7093
#, no-wrap
msgid "Smaller groups"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7100
msgid ""
"Some languages are not spoken by a very large number of people, so people "
"speaking them sometimes consider that there may not be all that much demand "
"such versions of free software packages.  Moreover, many people being "
"@emph{into computers}, in some countries, generally seem to prefer English "
"versions of their software."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7106
msgid ""
"On the other end, people might enjoy their own language a lot, and be very "
"motivated at providing to themselves the pleasure of having their beloved "
"free software speaking their mother tongue.  They do themselves a personal "
"favor, and do not pay that much attention to the number of people benefiting "
"of their work."
msgstr ""

#. type: item
#: original_texis/gettext.texi:7107
#, no-wrap
msgid "Misinterpretation"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7112
msgid ""
"Other users are shy to push forward their own language, seeing in this some "
"kind of misplaced propaganda.  Someone thought there must be some users of "
"the language over the networks pestering other people with it."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7116
msgid ""
"But any spoken language is worth localization, because there are people "
"behind the language for whom the language is important and dear to their "
"hearts."
msgstr ""

#. type: item
#: original_texis/gettext.texi:7117
#, no-wrap
msgid "Odd translations"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7126
msgid ""
"The biggest problem is to find the right translations so that everybody can "
"understand the messages.  Translations are usually a little odd.  Some "
"people get used to English, to the extent they may find translations into "
"their own language ``rather pushy, obnoxious and sometimes even hilarious.'' "
"As a French speaking man, I have the experience of those instruction manuals "
"for goods, so poorly translated in French in Korea or Taiwan@dots{}"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7132
msgid ""
"The fact is that we sometimes have to create a kind of national computer "
"culture, and this is not easy without the collaboration of many people "
"liking their mother tongue.  This is why translations are better achieved by "
"people knowing and loving their own language, and ready to work together at "
"improving the results they obtain."
msgstr ""

#. type: item
#: original_texis/gettext.texi:7133
#, no-wrap
msgid "Dependencies over the GPL or LGPL"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7140
msgid ""
"Some people wonder if using GNU @code{gettext} necessarily brings their "
"package under the protective wing of the GNU General Public License or the "
"GNU Lesser General Public License, when they do not want to make their "
"program free, or want other kinds of freedom.  The simplest answer is "
"``normally not''."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7146
msgid ""
"The @code{gettext-runtime} part of GNU @code{gettext}, i.e.@: the contents "
"of @code{libintl}, is covered by the GNU Lesser General Public License.  The "
"@code{gettext-tools} part of GNU @code{gettext}, i.e.@: the rest of the GNU "
"@code{gettext} package, is covered by the GNU General Public License."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7157
msgid ""
"The mere marking of localizable strings in a package, or conditional "
"inclusion of a few lines for initialization, is not really including GPL'ed "
"or LGPL'ed code.  However, since the localization routines in @code{libintl} "
"are under the LGPL, the LGPL needs to be considered.  It gives the right to "
"distribute the complete unmodified source of @code{libintl} even with "
"non-free programs.  It also gives the right to use @code{libintl} as a "
"shared library, even for non-free programs.  But it gives the right to use "
"@code{libintl} as a static library or to incorporate @code{libintl} into "
"another library only to free software."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7174
msgid ""
"On a larger scale, the true solution would be to organize some kind of "
"fairly precise set up in which volunteers could participate.  I gave some "
"thought to this idea lately, and realize there will be some touchy points.  "
"I thought of writing to Richard Stallman to launch such a project, but feel "
"it might be good to shake out the ideas between ourselves first.  Most "
"probably that Linux International has some experience in the field already, "
"or would like to orchestrate the volunteer work, maybe.  Food for thought, "
"in any case!"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7182
msgid ""
"I guess we have to setup something early, somehow, that will help many "
"possible contributors of the same language to interlock and avoid work "
"duplication, and further be put in contact for solving together problems "
"particular to their tongue (in most languages, there are many difficulties "
"peculiar to translating technical English).  My Swedish contributor "
"acknowledged these difficulties, and I'm well aware of them for French."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7186
msgid ""
"This is surely not a technical issue, but we should manage so the effort of "
"locale contributors be maximally useful, despite the national team layer "
"interface between contributors and maintainers."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7196
msgid ""
"The Translation Project needs some setup for coordinating language "
"coordinators.  Localizing evolving programs will surely become a permanent "
"and continuous activity in the free software community, once well started.  "
"The setup should be minimally completed and tested before GNU @code{gettext} "
"becomes an official reality.  The e-mail address "
"@file{coordinator@@translationproject.org} has been set up for receiving "
"offers from volunteers and general e-mail on these topics.  This address "
"reaches the Translation Project coordinator."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7212
msgid ""
"I also think GNU will need sooner than it thinks, that someone set up a way "
"to organize and coordinate these groups.  Some kind of group of groups.  My "
"opinion is that it would be good that GNU delegates this task to a small "
"group of collaborating volunteers, shortly.  Perhaps in @file{gnu.announce} "
"a list of this national committee's can be published."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7222
msgid ""
"My role as coordinator would simply be to refer to Ulrich any German "
"speaking volunteer interested to localization of free software packages, and "
"maybe helping national groups to initially organize, while maintaining "
"national registries for until national groups are ready to take over.  In "
"fact, the coordinator should ease volunteers to get in contact with one "
"another for creating national teams, which should then select one "
"coordinator per language, or country (regionalized language).  If well done, "
"the coordination should be useful without being an overwhelming task, the "
"time to put delegations in place."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7230
msgid ""
"I suggest we look for volunteer coordinators/editors for individual "
"languages.  These people will scan contributions of translation files for "
"various programs, for their own languages, and will ensure high and uniform "
"standards of diction."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7237
msgid ""
"From my current experience with other people in these days, those who "
"provide localizations are very enthusiastic about the process, and are more "
"interested in the localization process than in the program they localize, "
"and want to do many programs, not just one.  This seems to confirm that "
"having a coordinator/editor for each language is a good idea."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7242
msgid ""
"We need to choose someone who is good at writing clear and concise prose in "
"the language in question.  That is hard---we can't check it ourselves.  So "
"we need to ask a few people to judge each others' writing and select the one "
"who is best."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7248
msgid ""
"I announce my prerelease to a few dozen people, and you would not believe "
"all the discussions it generated already.  I shudder to think what will "
"happen when this will be launched, for true, officially, world wide.  Who am "
"I to arbitrate between two Czekolsovak users contradicting each other, for "
"example?"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7258
msgid ""
"I assume that your German is not much better than my French so that I would "
"not be able to judge about these formulations.  What I would suggest is that "
"for each language there is a group for people who maintain the PO files and "
"judge about changes.  I suspect there will be cultural differences between "
"how such groups of people will behave.  Some will have relaxed ways, reach "
"consensus easily, and have anyone of the group relate to the maintainers, "
"while others will fight to death, organize heavy administrations up to "
"national standards, and use strict channels."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7265
msgid ""
"The German team is putting out a good example.  Right now, they are maybe "
"half a dozen people revising translations of each other and discussing the "
"linguistic issues.  I do not even have all the names.  Ulrich Drepper is "
"taking care of coordinating the German team.  He subscribed to all my "
"pretest lists, so I do not even have to warn him specifically of incoming "
"releases."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7269
msgid ""
"I'm sure, that is a good idea to get teams for each language working on "
"translations.  That will make the translations better and more consistent."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7283
msgid ""
"Taking French for example, there are a few sub-cultures around computers "
"which developed diverging vocabularies.  Picking volunteers here and there "
"without addressing this problem in an organized way, soon in the project, "
"might produce a distasteful mix of internationalized programs, and possibly "
"trigger endless quarrels among those who really care."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7291
msgid ""
"Keeping some kind of unity in the way French localization of "
"internationalized programs is achieved is a difficult (and delicate) job.  "
"Knowing the latin character of French people (:-), if we take this the wrong "
"way, we could end up nowhere, or spoil a lot of energies.  Maybe we should "
"begin to address this problem seriously @emph{before} GNU @code{gettext} "
"become officially published.  And I suspect that this means soon!"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7299
msgid ""
"I expect the next big changes after the official release.  Please note that "
"I use the German translation of the short GPL message.  We need to set a few "
"good examples before the localization goes out for true in the free software "
"community.  Here are a few points to discuss:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7303
msgid "Each group should have one FTP server (at least one master)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7308
msgid ""
"The files on the server should reflect the latest version (of course!) and "
"it should also contain a RCS directory with the corresponding archives (I "
"don't have this now)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7313
msgid ""
"There should also be a ChangeLog file (this is more useful than the RCS "
"archive but can be generated automatically from the later by Emacs)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7318
msgid ""
"A @dfn{core group} should judge about questionable changes (for now this "
"group consists solely by me but I ask some others occasionally; this also "
"seems to work)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7325
msgid "If we get any inquiries about GNU @code{gettext}, send them on to:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:7328
#, no-wrap
msgid "@file{coordinator@@translationproject.org}\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7333
msgid ""
"The @file{*-pretest} lists are quite useful to me, maybe the idea could be "
"generalized to many GNU, and non-GNU packages.  But each maintainer his/her "
"way!"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7338
msgid ""
"Fran@,{c}ois, we have a mechanism in place here at @file{gnu.ai.mit.edu} to "
"track teams, support mailing lists for them and log members.  We have a "
"slight preference that you use it.  If this is OK with you, I can get you "
"clued in."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7346
msgid ""
"Things are changing! A few years ago, when Daniel Fekete and I asked for a "
"mailing list for GNU localization, nested at the FSF, we were politely "
"invited to organize it anywhere else, and so did we.  For communicating with "
"my pretesters, I later made a handful of mailing lists located at "
"iro.umontreal.ca and administrated by @code{majordomo}.  These lists have "
"been @emph{very} dependable so far@dots{}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7352
msgid ""
"I suspect that the German team will organize itself a mailing list located "
"in Germany, and so forth for other countries.  But before they organize for "
"true, it could surely be useful to offer mailing lists located at the FSF to "
"each national team.  So yes, please explain me how I should proceed to "
"create and handle them."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7360
msgid ""
"We should create temporary mailing lists, one per country, to help people "
"organize.  Temporary, because once regrouped and structured, it would be "
"fair the volunteers from country bring back @emph{their} list in there and "
"manage it as they want.  My feeling is that, in the long run, each team "
"should run its own list, from within their country.  There also should be "
"some central list to which all teams could subscribe as they see fit, as "
"long as each team is represented in it."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7372
msgid ""
"There will surely be some discussion about this messages after the packages "
"are finally released.  If people now send you some proposals for better "
"messages, how do you proceed? Jim, please note that right now, as I put "
"forward nearly a dozen of localizable programs, I receive both the "
"translations and the coordination concerns about them."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7381
msgid ""
"If I put one of my things to pretest, Ulrich receives the announcement and "
"passes it on to the German team, who make last minute revisions.  Then he "
"submits the translation files to me @emph{as the maintainer}.  For free "
"packages I do not maintain, I would not even hear about it.  This scheme "
"could be made to work for the whole Translation Project, I think.  For "
"security reasons, maybe Ulrich (national coordinators, in fact) should "
"update central registry kept at the Translation Project (Jim, me, or Len's "
"recruits) once in a while."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7388
msgid ""
"In December/January, I was aggressively ready to internationalize all of "
"GNU, giving myself the duty of one small GNU package per week or so, taking "
"many weeks or months for bigger packages.  But it does not work this way.  I "
"first did all the things I'm responsible for.  I've nothing against some "
"missionary work on other maintainers, but I'm also losing a lot of energy "
"over it---same debates over again."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7393
msgid ""
"And when the first localized packages are released we'll get a lot of "
"responses about ugly translations :-).  Surely, and we need to have "
"beforehand a fairly good idea about how to handle the information flow "
"between the national teams and the package maintainers."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7401
msgid ""
"Please start saving somewhere a quick history of each PO file.  I know for "
"sure that the file format will change, allowing for comments.  It would be "
"nice that each file has a kind of log, and references for those who want to "
"submit comments or gripes, or otherwise contribute.  I sent a proposal for a "
"fast and flexible format, but it is not receiving acceptance yet by the GNU "
"deciders.  I'll tell you when I have more information about this."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7405
#, no-wrap
msgid "plural forms, translating"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7407
msgid "Suppose you are translating a PO file, and it contains an entry like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7414
#, no-wrap
msgid ""
"#, c-format\n"
"msgid \"One file removed\"\n"
"msgid_plural \"%d files removed\"\n"
"msgstr[0] \"\"\n"
"msgstr[1] \"\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7418
msgid "What does this mean? How do you fill it in?"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7424
msgid ""
"Such an entry denotes a message with plural forms, that is, a message where "
"the text depends on a cardinal number.  The general form of the message, in "
"English, is the @code{msgid_plural} line.  The @code{msgid} line is the "
"English singular form, that is, the form for when the number is equal to 1.  "
"More details about plural forms are explained in @ref{Plural forms}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7432
msgid ""
"The first thing you need to look at is the @code{Plural-Forms} line in the "
"header entry of the PO file.  It contains the number of plural forms and a "
"formula.  If the PO file does not yet have such a line, you have to add it.  "
"It only depends on the language into which you are translating.  You can get "
"this info by using the @code{msginit} command (see @ref{Creating}) -- it "
"contains a database of known plural formulas -- or by asking other members "
"of your translation team."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7434
msgid "Suppose the line looks as follows:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7438
#, no-wrap
msgid ""
"\"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n\"\n"
"\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\\n\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7442
msgid ""
"It's logically one line; recall that the PO file formatting is allowed to "
"break long lines so that each physical line fits in 80 monospaced columns."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7446
msgid ""
"The value of @code{nplurals} here tells you that there are three plural "
"forms.  The first thing you need to do is to ensure that the entry contains "
"an @code{msgstr} line for each of the forms:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7454
#, no-wrap
msgid ""
"#, c-format\n"
"msgid \"One file removed\"\n"
"msgid_plural \"%d files removed\"\n"
"msgstr[0] \"\"\n"
"msgstr[1] \"\"\n"
"msgstr[2] \"\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7458
msgid ""
"Then translate the @code{msgid_plural} line and fill it in into each "
"@code{msgstr} line:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7466
#, no-wrap
msgid ""
"#, c-format\n"
"msgid \"One file removed\"\n"
"msgid_plural \"%d files removed\"\n"
"msgstr[0] \"%d slika uklonjenih\"\n"
"msgstr[1] \"%d slika uklonjenih\"\n"
"msgstr[2] \"%d slika uklonjenih\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7473
msgid ""
"Now you can refine the translation so that it matches the plural form.  "
"According to the formula above, @code{msgstr[0]} is used when the number "
"ends in 1 but does not end in 11; @code{msgstr[1]} is used when the number "
"ends in 2, 3, 4, but not in 12, 13, 14; and @code{msgstr[2]} is used in all "
"other cases.  With this knowledge, you can refine the translations:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7481
#, no-wrap
msgid ""
"#, c-format\n"
"msgid \"One file removed\"\n"
"msgid_plural \"%d files removed\"\n"
"msgstr[0] \"%d slika je uklonjena\"\n"
"msgstr[1] \"%d datoteke uklonjenih\"\n"
"msgstr[2] \"%d slika uklonjenih\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7486
msgid ""
"You noticed that in the English singular form (@code{msgid}) the number "
"placeholder could be omitted and replaced by the numeral word ``one''.  Can "
"you do this in your translation as well?"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7489
#, no-wrap
msgid "msgstr[0] \"jednom datotekom je uklonjen\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7498
msgid ""
"Well, it depends on whether @code{msgstr[0]} applies only to the number 1, "
"or to other numbers as well.  If, according to the plural formula, "
"@code{msgstr[0]} applies only to @code{n == 1}, then you can use the "
"specialized translation without the number placeholder.  In our case, "
"however, @code{msgstr[0]} also applies to the numbers 21, 31, 41, etc., and "
"therefore you cannot omit the placeholder."
msgstr ""

#. type: section
#: original_texis/gettext.texi:7500
#, no-wrap
msgid "Prioritizing messages: How to determine which messages to translate first"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7509
msgid ""
"A translator sometimes has only a limited amount of time per week to spend "
"on a package, and some packages have quite large message catalogs (over 1000 "
"messages).  Therefore she wishes to translate the messages first that are "
"the most visible to the user, or that occur most frequently.  This section "
"describes how to determine these \"most urgent\" messages.  It also applies "
"to determine the \"next most urgent\" messages after the message catalog has "
"already been partially translated."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7513
msgid ""
"In a first step, she uses the programs like a user would do.  While she does "
"this, the GNU @code{gettext} library logs into a file the not yet translated "
"messages for which a translation was requested from the program."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7516
msgid ""
"In a second step, she uses the PO mode to translate precisely this set of "
"messages."
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:7517
#, no-wrap
msgid "GETTEXT_LOG_UNTRANSLATED@r{, environment variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7526
msgid ""
"Here a more details.  The GNU @code{libintl} library (but not the "
"corresponding functions in GNU @code{libc}) supports an environment variable "
"@code{GETTEXT_LOG_UNTRANSLATED}.  The GNU @code{libintl} library will log "
"into this file the messages for which @code{gettext()} and related functions "
"couldn't find the translation.  If the file doesn't exist, it will be "
"created as needed.  On systems with GNU @code{libc} a shared library "
"@samp{preloadable_libintl.so} is provided that can be used with the ELF "
"@samp{LD_PRELOAD} mechanism."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7529
msgid ""
"So, in the first step, the translator uses these commands on systems with "
"GNU @code{libc}:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7535
#, no-wrap
msgid ""
"$ LD_PRELOAD=/usr/local/lib/preloadable_libintl.so\n"
"$ export LD_PRELOAD\n"
"$ GETTEXT_LOG_UNTRANSLATED=$HOME/gettextlogused\n"
"$ export GETTEXT_LOG_UNTRANSLATED\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7539
msgid "and these commands on other systems:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7543
#, no-wrap
msgid ""
"$ GETTEXT_LOG_UNTRANSLATED=$HOME/gettextlogused\n"
"$ export GETTEXT_LOG_UNTRANSLATED\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7549
msgid ""
"Then she uses and peruses the programs.  (It is a good and recommended "
"practice to use the programs for which you provide translations: it gives "
"you the needed context.)  When done, she removes the environment variables:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7553
#, no-wrap
msgid ""
"$ unset LD_PRELOAD\n"
"$ unset GETTEXT_LOG_UNTRANSLATED\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7556
msgid "The second step starts with removing duplicates:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7559
#, no-wrap
msgid "$ msguniq $HOME/gettextlogused > missing.po\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7566
msgid ""
"The result is a PO file, but needs some preprocessing before a PO file "
"editor can be used with it.  First, it is a multi-domain PO file, containing "
"messages from many translation domains.  Second, it lacks all translator "
"comments and source references.  Here is how to get a list of the affected "
"translation domains:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7569
#, no-wrap
msgid "$ sed -n -e 's,^domain \"\\(.*\\)\"$,\\1,p' < missing.po | sort | uniq\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7574
msgid ""
"Then the translator can handle the domains one by one.  For simplicity, "
"let's use environment variables to denote the language, domain and source "
"package."
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7579
#, no-wrap
msgid ""
"$ lang=nl             # your language\n"
"$ domain=coreutils    # the name of the domain to be handled\n"
"$ package=/usr/src/gnu/coreutils-4.5.4   # the package where it comes from\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7588
msgid ""
"She takes the latest copy of @file{$lang.po} from the Translation Project, "
"or from the package (in most cases, @file{$package/po/$lang.po}), or creates "
"a fresh one if she's the first translator (see @ref{Creating}).  She then "
"uses the following commands to mark the not urgent messages as "
"\"obsolete\".  (This doesn't mean that these messages - translated and "
"untranslated ones - will go away.  It simply means that the PO file editor "
"will ignore them in the following editing session.)"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7594
#, no-wrap
msgid ""
"$ msggrep --domain=$domain missing.po | grep -v '^domain' \\\n"
"  > $domain-missing.po\n"
"$ msgattrib --set-obsolete --ignore-file $domain-missing.po $domain.$lang.po "
"\\\n"
"  > $domain.$lang-urgent.po\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7602
msgid ""
"The she translates @file{$domain.$lang-urgent.po} by use of a PO file editor "
"(@pxref{Editing}).  (FIXME: I don't know whether @code{KBabel} and "
"@code{gtranslator} also preserve obsolete messages, as they should.)  "
"Finally she restores the not urgent messages (with their earlier "
"translations, for those which were already translated) through this command:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:7606
#, no-wrap
msgid ""
"$ msgmerge --no-fuzzy-matching $domain.$lang-urgent.po "
"$package/po/$domain.pot \\\n"
"  > $domain.$lang.po\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7609
msgid "Then she can submit @file{$domain.$lang.po} and proceed to the next domain."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7612
#, no-wrap
msgid "package maintainer's view of @code{gettext}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7618
msgid ""
"The maintainer of a package has many responsibilities.  One of them is "
"ensuring that the package will install easily on many platforms, and that "
"the magic we described earlier (@pxref{Users}) will work for installers and "
"end users."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7628
msgid ""
"Of course, there are many possible ways by which GNU @code{gettext} might be "
"integrated in a distribution, and this chapter does not cover them in all "
"generality.  Instead, it details one possible approach which is especially "
"adequate for many free software distributions following GNU standards, or "
"even better, Gnits standards, because GNU @code{gettext} is purposely for "
"helping the internationalization of the whole GNU project, and as many other "
"good free packages as possible.  So, the maintainer's view presented here "
"presumes that the package already has a @file{configure.ac} file and uses "
"GNU Autoconf."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7634
msgid ""
"Nevertheless, GNU @code{gettext} may surely be useful for free packages not "
"following GNU standards and conventions, but the maintainers of such "
"packages might have to show imagination and initiative in organizing their "
"distributions so @code{gettext} work for them in all situations.  There are "
"surely many, out there."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7639
msgid ""
"Even if @code{gettext} methods are now stabilizing, slight adjustments might "
"be needed between successive @code{gettext} versions, so you should ideally "
"revise this chapter in subsequent releases, looking for changes."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7661
msgid ""
"Some free software packages are distributed as @code{tar} files which unpack "
"in a single directory, these are said to be @dfn{flat} distributions.  Other "
"free software packages have a one level hierarchy of subdirectories, using "
"for example a subdirectory named @file{doc/} for the Texinfo manual and man "
"pages, another called @file{lib/} for holding functions meant to replace or "
"complement C libraries, and a subdirectory @file{src/} for holding the "
"proper sources for the package.  These other distributions are said to be "
"@dfn{non-flat}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7670
msgid ""
"We cannot say much about flat distributions.  A flat directory structure has "
"the disadvantage of increasing the difficulty of updating to a new version "
"of GNU @code{gettext}.  Also, if you have many PO files, this could somewhat "
"pollute your single directory.  Also, GNU @code{gettext}'s libintl sources "
"consist of C sources, shell scripts, @code{sed} scripts and complicated "
"Makefile rules, which don't fit well into an existing flat structure.  For "
"these reasons, we recommend to use non-flat approach in this case as well."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7675
msgid ""
"Maybe because GNU @code{gettext} itself has a non-flat structure, we have "
"more experience with this approach, and this is what will be described in "
"the remaining of this chapter.  Some maintainers might use this as an "
"opportunity to unflatten their package structure."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7678
#, no-wrap
msgid "converting a package to use @code{gettext}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7679
#, no-wrap
msgid "migration from earlier versions of @code{gettext}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7680
#, no-wrap
msgid "upgrading to new versions of @code{gettext}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7686
msgid ""
"There are some works which are required for using GNU @code{gettext} in one "
"of your package.  These works have some kind of generality that escape the "
"point by point descriptions used in the remainder of this chapter.  So, we "
"describe them here."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7696
msgid ""
"Before attempting to use @code{gettextize} you should install some other "
"packages first.  Ensure that recent versions of GNU @code{m4}, GNU Autoconf "
"and GNU @code{gettext} are already installed at your site, and if not, "
"proceed to do this first.  If you get to install these things, beware that "
"GNU @code{m4} must be fully installed before GNU Autoconf is even "
"@emph{configured}."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7701
msgid ""
"To further ease the task of a package maintainer the @code{automake} package "
"was designed and implemented.  GNU @code{gettext} now uses this tool and the "
"@file{Makefile} in the @file{po/} directory therefore knows about all the "
"goals necessary for using @code{automake}."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7710
msgid ""
"Those four packages are only needed by you, as a maintainer; the installers "
"of your own package and end users do not really need any of GNU @code{m4}, "
"GNU Autoconf, GNU @code{gettext}, or GNU @code{automake} for successfully "
"installing and running your package, with messages properly translated.  But "
"this is not completely true if you provide internationalized shell scripts "
"within your own package: GNU @code{gettext} shall then be installed at the "
"user site if the end users want to see the translation of shell script "
"messages."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7717
msgid ""
"Your package should use Autoconf and have a @file{configure.ac} or "
"@file{configure.in} file.  If it does not, you have to learn how.  The "
"Autoconf documentation is quite well written, it is a good idea that you "
"print it and get familiar with it."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7721
msgid ""
"Your C sources should have already been modified according to instructions "
"given earlier in this manual.  @xref{Sources}."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:7730
msgid ""
"Your @file{po/} directory should receive all PO files submitted to you by "
"the translator teams, each having @file{@var{ll}.po} as a name.  This is not "
"usually easy to get translation work done before your package gets "
"internationalized and available! Since the cycle has to start somewhere, the "
"easiest for the maintainer is to start with absolutely no PO files, and wait "
"until various translator teams get interested in your package, and submit PO "
"files."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7741
msgid ""
"It is worth adding here a few words about how the maintainer should ideally "
"behave with PO files submissions.  As a maintainer, your role is to "
"authenticate the origin of the submission as being the representative of the "
"appropriate translating teams of the Translation Project (forward the "
"submission to @file{coordinator@@translationproject.org} in case of doubt), "
"to ensure that the PO file format is not severely broken and does not "
"prevent successful installation, and for the rest, to merely put these PO "
"files in @file{po/} for distribution."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7751
msgid ""
"As a maintainer, you do not have to take on your shoulders the "
"responsibility of checking if the translations are adequate or complete, and "
"should avoid diving into linguistic matters.  Translation teams drive "
"themselves and are fully responsible of their linguistic choices for the "
"Translation Project.  Keep in mind that translator teams are @emph{not} "
"driven by maintainers.  You can help by carefully redirecting all "
"communications and reports from users about linguistic matters to the "
"appropriate translation team, or explain users how to reach or join their "
"team."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7759
msgid ""
"Maintainers should @emph{never ever} apply PO file bug reports themselves, "
"short-cutting translation teams.  If some translator has difficulty to get "
"some of her points through her team, it should not be an option for her to "
"directly negotiate translations with maintainers.  Teams ought to settle "
"their problems themselves, if any.  If you, as a maintainer, ever think "
"there is a real problem with a team, please never try to @emph{solve} a "
"team's problem on your own."
msgstr ""

#. type: include
#: original_texis/gettext.texi:7763
#, no-wrap
msgid "gettextize.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7767
#, no-wrap
msgid "@code{gettext} files"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7775
msgid ""
"Besides files which are automatically added through @code{gettextize}, there "
"are many files needing revision for properly interacting with GNU "
"@code{gettext}.  If you are closely following GNU standards for Makefile "
"engineering and auto-configuration, the adaptations should be easier to "
"achieve.  Here is a point by point description of the changes needed in "
"each."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7783
msgid ""
"So, here comes a list of files, each one followed by a description of all "
"alterations it needs.  Many examples are taken out from the GNU "
"@code{gettext} @value{VERSION} distribution itself, or from the GNU "
"@code{hello} distribution (@uref{https://www.gnu.org/software/hello}).  You "
"may indeed refer to the source code of the GNU @code{gettext} and GNU "
"@code{hello} packages, as they are intended to be good examples for using "
"GNU gettext functionality."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7801
#, no-wrap
msgid "@file{POTFILES.in} file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7807
msgid ""
"The @file{po/} directory should receive a file named @file{POTFILES.in}.  "
"This file tells which files, among all program sources, have marked strings "
"needing translation.  Here is an example of such a file:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:7812
#, no-wrap
msgid ""
"# List of source files containing translatable strings.\n"
"# Copyright (C) 1995 Free Software Foundation, Inc.\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:7817
#, no-wrap
msgid ""
"# Common library files\n"
"lib/error.c\n"
"lib/getopt.c\n"
"lib/xmalloc.c\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:7822
#, no-wrap
msgid ""
"# Package source files\n"
"src/gettext.c\n"
"src/msgfmt.c\n"
"src/xgettext.c\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7831
msgid ""
"Hash-marked comments and white lines are ignored.  All other lines list "
"those source files containing strings marked for translation (@pxref{Mark "
"Keywords}), in a notation relative to the top level of your whole "
"distribution, rather than the location of the @file{POTFILES.in} file "
"itself."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7837
msgid ""
"When a C file is automatically generated by a tool, like @code{flex} or "
"@code{bison}, that doesn't introduce translatable strings by itself, it is "
"recommended to list in @file{po/POTFILES.in} the real source file (ending in "
"@file{.l} in the case of @code{flex}, or in @file{.y} in the case of "
"@code{bison}), not the generated C file."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7840
#, no-wrap
msgid "@file{LINGUAS} file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7846
msgid ""
"The @file{po/} directory should also receive a file named @file{LINGUAS}.  "
"This file contains the list of available translations.  It is a whitespace "
"separated list.  Hash-marked comments and white lines are ignored.  Here is "
"an example file:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:7851
#, no-wrap
msgid ""
"# Set of available languages.\n"
"de fr\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7861
msgid ""
"This example means that German and French PO files are available, so that "
"these languages are currently supported by your package.  If you want to "
"further restrict, at installation time, the set of installed languages, this "
"should not be done by modifying the @file{LINGUAS} file, but rather by using "
"the @code{LINGUAS} environment variable (@pxref{Installers})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7870
msgid ""
"It is recommended that you add the \"languages\" @samp{en@@quot} and "
"@samp{en@@boldquot} to the @code{LINGUAS} file.  @code{en@@quot} is a "
"variant of English message catalogs (@code{en}) which uses real quotation "
"marks instead of the ugly looking asymmetric ASCII substitutes @samp{`} and "
"@samp{'}.  @code{en@@boldquot} is a variant of @code{en@@quot} that "
"additionally outputs quoted pieces of text in a bold font, when used in a "
"terminal emulator which supports the VT100 escape sequences (such as "
"@code{xterm} or the Linux console, but not Emacs in @kbd{M-x shell} mode)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7877
msgid ""
"These extra message catalogs @samp{en@@quot} and @samp{en@@boldquot} are "
"constructed automatically, not by translators; to support them, you need the "
"files @file{Rules-quot}, @file{quot.sed}, @file{boldquot.sed}, "
"@file{en@@quot.header}, @file{en@@boldquot.header}, @file{insert-header.sin} "
"in the @file{po/} directory.  You can copy them from GNU gettext's "
"@file{po/} directory; they are also installed by running @code{gettextize}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7880
#, no-wrap
msgid "@file{Makevars} file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7887
msgid ""
"The @file{po/} directory also has a file named @file{Makevars}.  It contains "
"variables that are specific to your project.  @file{po/Makevars} gets "
"inserted into the @file{po/Makefile} when the latter is created.  The "
"variables thus take effect when the POT file is created or updated, and when "
"the message catalogs get installed."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7893
msgid ""
"The first three variables can be left unmodified if your package has a "
"single message domain and, accordingly, a single @file{po/} directory.  Only "
"packages which have multiple @file{po/} directories at different locations "
"need to adjust the three first variables defined in @file{Makevars}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7897
msgid ""
"As an alternative to the @code{XGETTEXT_OPTIONS} variables, it is also "
"possible to specify @code{xgettext} options through the "
"@code{AM_XGETTEXT_OPTION} autoconf macro.  See @ref{AM_XGETTEXT_OPTION}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7900
#, no-wrap
msgid "@file{Makefile.in.in} extensions"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7906
msgid ""
"All files called @file{Rules-*} in the @file{po/} directory get appended to "
"the @file{po/Makefile} when it is created.  They present an opportunity to "
"add rules for special PO files to the Makefile, without needing to mess with "
"@file{po/Makefile.in.in}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7922
msgid ""
"GNU gettext comes with a @file{Rules-quot} file, containing rules for "
"building catalogs @file{en@@quot.po} and @file{en@@boldquot.po}.  The effect "
"of @file{en@@quot.po} is that people who set their @code{LANGUAGE} "
"environment variable to @samp{en@@quot} will get messages with proper "
"looking symmetric Unicode quotation marks instead of abusing the ASCII grave "
"accent and the ASCII apostrophe for indicating quotations.  To enable this "
"catalog, simply add @code{en@@quot} to the @file{po/LINGUAS} file.  The "
"effect of @file{en@@boldquot.po} is that people who set @code{LANGUAGE} to "
"@samp{en@@boldquot} will get not only proper quotation marks, but also the "
"quoted text will be shown in a bold font on terminals and consoles.  This "
"catalog is useful only for command-line programs, not GUI programs.  To "
"enable it, similarly add @code{en@@boldquot} to the @file{po/LINGUAS} file."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7927
msgid ""
"Similarly, you can create rules for building message catalogs for the "
"@file{sr@@latin} locale -- Serbian written with the Latin alphabet -- from "
"those for the @file{sr} locale -- Serbian written with Cyrillic letters.  "
"See @ref{msgfilter Invocation}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7933
msgid ""
"@file{configure.ac} or @file{configure.in} - this is the source from which "
"@code{autoconf} generates the @file{configure} script."
msgstr ""

#. type: item
#: original_texis/gettext.texi:7935
#, no-wrap
msgid "Declare the package and version."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:7936
#, no-wrap
msgid "package and version declaration in @file{configure.ac}"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:7939
msgid "This is done by a set of lines like these:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:7947
#, no-wrap
msgid ""
"PACKAGE=gettext\n"
"VERSION=@value{VERSION}\n"
"AC_DEFINE_UNQUOTED(PACKAGE, \"$PACKAGE\")\n"
"AC_DEFINE_UNQUOTED(VERSION, \"$VERSION\")\n"
"AC_SUBST(PACKAGE)\n"
"AC_SUBST(VERSION)\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:7951
msgid "or, if you are using GNU @code{automake}, by a line like this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:7954
#, no-wrap
msgid "AM_INIT_AUTOMAKE(gettext, @value{VERSION})\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:7961
msgid ""
"Of course, you replace @samp{gettext} with the name of your package, and "
"@samp{@value{VERSION}} by its version numbers, exactly as they should appear "
"in the packaged @code{tar} file name of your distribution "
"(@file{gettext-@value{VERSION}.tar.gz}, here)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:7962
#, no-wrap
msgid "Check for internationalization support."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:7966
msgid ""
"Here is the main @code{m4} macro for triggering internationalization "
"support.  Just add this line to @file{configure.ac}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:7969
#, no-wrap
msgid "AM_GNU_GETTEXT([external])\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:7974
msgid ""
"This call is purposely simple, even if it generates a lot of configure time "
"checking and actions."
msgstr ""

#. type: item
#: original_texis/gettext.texi:7975
#, no-wrap
msgid "Have output files created."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:7979
msgid ""
"The @code{AC_OUTPUT} directive, at the end of your @file{configure.ac} file, "
"needs to be modified in two ways:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:7983
#, no-wrap
msgid ""
"AC_OUTPUT([@var{existing configuration files} po/Makefile.in],\n"
"[@var{existing additional actions}])\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:7989
msgid ""
"The modification to the first argument to @code{AC_OUTPUT} asks for "
"substitution in the @file{po/} directory.  Note the @samp{.in} suffix used "
"for @file{po/} only.  This is because the distributed file is really "
"@file{po/Makefile.in.in}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:7999
msgid ""
"You need to add the GNU @file{config.guess} and @file{config.sub} files to "
"your distribution.  They are needed because the @code{AM_ICONV} macro "
"contains knowledge about specific platforms and therefore needs to identify "
"the platform."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8003
msgid ""
"You can obtain the newest version of @file{config.guess} and "
"@file{config.sub} from the @samp{config} project at "
"@file{https://savannah.gnu.org/}. The commands to fetch them are"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:8006
#, no-wrap
msgid ""
"$ wget -O config.guess "
"'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD'\n"
"$ wget -O config.sub "
"'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD'\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8010
msgid ""
"Less recent versions are also contained in the GNU @code{automake} and GNU "
"@code{libtool} packages."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8017
msgid ""
"Normally, @file{config.guess} and @file{config.sub} are put at the top level "
"of a distribution.  But it is also possible to put them in a subdirectory, "
"altogether with other configuration support files like @file{install-sh}, "
"@file{ltconfig}, @file{ltmain.sh} or @file{missing}.  All you need to do, "
"other than moving the files, is to add the following line to your "
"@file{configure.ac}."
msgstr ""

#. type: example
#: original_texis/gettext.texi:8020
#, no-wrap
msgid "AC_CONFIG_AUX_DIR([@var{subdir}])\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8024
#, no-wrap
msgid "@file{mkinstalldirs} file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8029
msgid ""
"With earlier versions of GNU gettext, you needed to add the GNU "
"@file{mkinstalldirs} script to your distribution.  This is not needed any "
"more.  You can remove it."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8032
#, no-wrap
msgid "@file{aclocal.m4} file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8040
msgid ""
"If you do not have an @file{aclocal.m4} file in your distribution, the "
"simplest is to concatenate the files @file{gettext.m4}, "
"@file{host-cpu-c-abi.m4}, @file{intlmacosx.m4}, @file{iconv.m4}, "
"@file{lib-ld.m4}, @file{lib-link.m4}, @file{lib-prefix.m4}, @file{nls.m4}, "
"@file{po.m4}, @file{progtest.m4} from GNU @code{gettext}'s @file{m4/} "
"directory into a single file."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8049
msgid ""
"If you already have an @file{aclocal.m4} file, then you will have to merge "
"the said macro files into your @file{aclocal.m4}.  Note that if you are "
"upgrading from a previous release of GNU @code{gettext}, you should most "
"probably @emph{replace} the macros (@code{AM_GNU_GETTEXT}, etc.), as they "
"usually change a little from one release of GNU @code{gettext} to the next.  "
"Their contents may vary as we get more experience with strange systems out "
"there."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8056
msgid ""
"You should be using GNU @code{automake} 1.9 or newer.  With it, you need to "
"copy the files @file{gettext.m4}, @file{host-cpu-c-abi.m4}, "
"@file{intlmacosx.m4}, @file{iconv.m4}, @file{lib-ld.m4}, @file{lib-link.m4}, "
"@file{lib-prefix.m4}, @file{nls.m4}, @file{po.m4}, @file{progtest.m4} from "
"GNU @code{gettext}'s @file{m4/} directory to a subdirectory named @file{m4/} "
"and add the line"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8059
#, no-wrap
msgid "ACLOCAL_AMFLAGS = -I m4\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8063
msgid "to your top level @file{Makefile.am}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8066
msgid ""
"If you are using GNU @code{automake} 1.10 or newer, it is even easier: Add "
"the line"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8069
#, no-wrap
msgid "ACLOCAL_AMFLAGS = --install -I m4\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8075
msgid ""
"to your top level @file{Makefile.am}, and run @samp{aclocal --install -I "
"m4}.  This will copy the needed files to the @file{m4/} subdirectory "
"automatically, before updating @file{aclocal.m4}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8081
msgid ""
"These macros check for the internationalization support functions and "
"related informations.  Hopefully, once stabilized, these macros might be "
"integrated in the standard Autoconf set, because this piece of @code{m4} "
"code will be the same for all projects using GNU @code{gettext}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8084
#, no-wrap
msgid "@file{config.h.in} file"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8089
msgid ""
"The include file template that holds the C macros to be defined by "
"@code{configure} is usually called @file{config.h.in} and may be maintained "
"either manually or automatically."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8093
msgid ""
"If it is maintained automatically, by use of the @samp{autoheader} program, "
"you need to do nothing about it.  This is the case in particular if you are "
"using GNU @code{automake}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8096
msgid ""
"If it is maintained manually, you can get away by adding the following lines "
"to @file{config.h.in}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8101
#, no-wrap
msgid ""
"/* Define to 1 if translation of program messages to the user's\n"
"   native language is requested. */\n"
"#undef ENABLE_NLS\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8108
msgid ""
"Here are a few modifications you need to make to your main, top-level "
"@file{Makefile.in} file."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8113
msgid ""
"Add the following lines near the beginning of your @file{Makefile.in}, so "
"the @samp{dist:} goal will work properly (as explained further down):"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8117 original_texis/gettext.texi:8183
#, no-wrap
msgid ""
"PACKAGE = @@PACKAGE@@\n"
"VERSION = @@VERSION@@\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8124
msgid ""
"Wherever you process subdirectories in your @file{Makefile.in}, be sure you "
"also process the subdirectory @samp{po}.  Special rules in the "
"@file{Makefiles} take care for the case where no internationalization is "
"wanted."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8129
msgid ""
"If you are using Makefiles, either generated by automake, or hand-written so "
"they carefully follow the GNU coding standards, the effected goals for which "
"the new subdirectories must be handled include @samp{installdirs}, "
"@samp{install}, @samp{uninstall}, @samp{clean}, @samp{distclean}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8133
msgid ""
"Here is an example of a canonical order of processing.  In this example, we "
"also define @code{SUBDIRS} in @code{Makefile.in} for it to be further used "
"in the @samp{dist:} goal."
msgstr ""

#. type: example
#: original_texis/gettext.texi:8136
#, no-wrap
msgid "SUBDIRS = doc lib src po\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8142
msgid ""
"A delicate point is the @samp{dist:} goal, as @file{po/Makefile} will later "
"assume that the proper directory has been set up from the main "
"@file{Makefile}.  Here is an example at what the @samp{dist:} goal might "
"look like:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8159
#, no-wrap
msgid ""
"distdir = $(PACKAGE)-$(VERSION)\n"
"dist: Makefile\n"
"\trm -fr $(distdir)\n"
"\tmkdir $(distdir)\n"
"\tchmod 777 $(distdir)\n"
"\tfor file in $(DISTFILES); do \\\n"
"\t  ln $$file $(distdir) 2>/dev/null || cp -p $$file $(distdir); \\\n"
"\tdone\n"
"\tfor subdir in $(SUBDIRS); do \\\n"
"\t  mkdir $(distdir)/$$subdir || exit 1; \\\n"
"\t  chmod 777 $(distdir)/$$subdir; \\\n"
"\t  (cd $$subdir && $(MAKE) $@@) || exit 1; \\\n"
"\tdone\n"
"\ttar chozf $(distdir).tar.gz $(distdir)\n"
"\trm -fr $(distdir)\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8166
msgid ""
"Note that if you are using GNU @code{automake}, @file{Makefile.in} is "
"automatically generated from @file{Makefile.am}, and all needed changes to "
"@file{Makefile.am} are already made by running @samp{gettextize}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8174
msgid ""
"Some of the modifications made in the main @file{Makefile.in} will also be "
"needed in the @file{Makefile.in} from your package sources, which we assume "
"here to be in the @file{src/} subdirectory.  Here are all the modifications "
"needed in @file{src/Makefile.in}:"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8179
msgid ""
"In view of the @samp{dist:} goal, you should have these lines near the "
"beginning of @file{src/Makefile.in}:"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8189
msgid ""
"If not done already, you should guarantee that @code{top_srcdir} gets "
"defined.  This will serve for @code{cpp} include files.  Just add the line:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8192
#, no-wrap
msgid "top_srcdir = @@top_srcdir@@\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8199
msgid ""
"You might also want to define @code{subdir} as @samp{src}, later allowing "
"for almost uniform @samp{dist:} goals in all your @file{Makefile.in}.  At "
"list, the @samp{dist:} goal below assume that you used:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8202
#, no-wrap
msgid "subdir = src\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8207
msgid ""
"The @code{main} function of your program will normally call "
"@code{bindtextdomain} (see @pxref{Triggering}), like this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8211
#, no-wrap
msgid ""
"bindtextdomain (@var{PACKAGE}, LOCALEDIR);\n"
"textdomain (@var{PACKAGE});\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8215
msgid ""
"To make LOCALEDIR known to the program, add the following lines to "
"@file{Makefile.in}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8221
#, no-wrap
msgid ""
"datadir = @@datadir@@\n"
"datarootdir= @@datarootdir@@\n"
"localedir = @@localedir@@\n"
"DEFS = -DLOCALEDIR=\\\"$(localedir)\\\" @@DEFS@@\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8225
msgid ""
"Note that @code{@@datadir@@} defaults to @samp{$(prefix)/share}, and "
"@code{$(localedir)} defaults to @samp{$(prefix)/share/locale}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8232
msgid ""
"You should ensure that the final linking will use @code{@@LIBINTL@@} or "
"@code{@@LTLIBINTL@@} as a library.  @code{@@LIBINTL@@} is for use without "
"@code{libtool}, @code{@@LTLIBINTL@@} is for use with @code{libtool}.  An "
"easy way to achieve this is to manage that it gets into @code{LIBS}, like "
"this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8235
#, no-wrap
msgid "LIBS = @@LIBINTL@@ @@LIBS@@\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8245
msgid ""
"In most packages internationalized with GNU @code{gettext}, one will find a "
"directory @file{lib/} in which a library containing some helper functions "
"will be build.  (You need at least the few functions which the GNU "
"@code{gettext} Library itself needs.)  However some of the functions in the "
"@file{lib/} also give messages to the user which of course should be "
"translated, too.  Taking care of this, the support library (say "
"@file{libsupport.a}) should be placed before @code{@@LIBINTL@@} and "
"@code{@@LIBS@@} in the above example.  So one has to write this:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8248
#, no-wrap
msgid "LIBS = ../lib/libsupport.a @@LIBINTL@@ @@LIBS@@\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8253
msgid ""
"Your @samp{dist:} goal has to conform with others.  Here is a reasonable "
"definition for it:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8260
#, no-wrap
msgid ""
"distdir = ../$(PACKAGE)-$(VERSION)/$(subdir)\n"
"dist: Makefile $(DISTFILES)\n"
"\tfor file in $(DISTFILES); do \\\n"
"\t  ln $$file $(distdir) 2>/dev/null || cp -p $$file $(distdir) || exit 1; "
"\\\n"
"\tdone\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8268
msgid ""
"Note that if you are using GNU @code{automake}, @file{Makefile.in} is "
"automatically generated from @file{Makefile.am}, and the first three changes "
"and the last change are not necessary.  The remaining needed "
"@file{Makefile.am} modifications are the following:"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8273
msgid ""
"To make LOCALEDIR known to the program, add the following to "
"@file{Makefile.am}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8276
#, no-wrap
msgid "<module>_CPPFLAGS = -DLOCALEDIR=\\\"$(localedir)\\\"\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8280
msgid "for each specific module or compilation unit, or"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8283
#, no-wrap
msgid "AM_CPPFLAGS = -DLOCALEDIR=\\\"$(localedir)\\\"\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8288
msgid ""
"for all modules and compilation units together.  Furthermore, if you are "
"using an Autoconf version older then 2.60, add this line to define "
"@samp{localedir}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8291
#, no-wrap
msgid "localedir = $(datadir)/locale\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8297
msgid ""
"To ensure that the final linking will use @code{@@LIBINTL@@} or "
"@code{@@LTLIBINTL@@} as a library, add the following to @file{Makefile.am}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8300
#, no-wrap
msgid "<program>_LDADD = @@LIBINTL@@\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8304
msgid "for each specific program, or"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8307
#, no-wrap
msgid "LDADD = @@LIBINTL@@\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8312
msgid ""
"for all programs together.  Remember that when you use @code{libtool} to "
"link a program, you need to use @@LTLIBINTL@@ instead of @@LIBINTL@@ for "
"that program."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8317
#, no-wrap
msgid "@file{gettext.h} file"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8318
#, no-wrap
msgid "turning off NLS support"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8319
#, no-wrap
msgid "disabling NLS"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8323
msgid ""
"Internationalization of packages, as provided by GNU @code{gettext}, is "
"optional.  It can be turned off in two situations:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8331
msgid ""
"When the installer has specified @samp{./configure --disable-nls}.  This can "
"be useful when small binaries are more important than features, for example "
"when building utilities for boot diskettes.  It can also be useful in order "
"to get some specific C compiler warnings about code quality with some older "
"versions of GCC (older than 3.0)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8337
msgid ""
"When the libintl.h header (with its associated libintl library, if any) is "
"not already installed on the system, it is preferable that the package "
"builds without internationalization support, rather than to give a "
"compilation error."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8345
msgid ""
"A C preprocessor macro can be used to detect these two cases.  Usually, when "
"@code{libintl.h} was found and not explicitly disabled, the "
"@code{ENABLE_NLS} macro will be defined to 1 in the autoconf generated "
"configuration file (usually called @file{config.h}).  In the two negative "
"situations, however, this macro will not be defined, thus it will evaluate "
"to 0 in C preprocessor expressions."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8355
msgid ""
"@file{gettext.h} is a convenience header file for conditional use of "
"@file{<libintl.h>}, depending on the @code{ENABLE_NLS} macro.  If "
"@code{ENABLE_NLS} is set, it includes @file{<libintl.h>}; otherwise it "
"defines no-op substitutes for the libintl.h functions.  We recommend the use "
"of @code{\"gettext.h\"} over direct use of @file{<libintl.h>}, so that "
"portability to older systems is guaranteed and installers can turn off "
"internationalization if they want to.  In the C code, you will then write"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8358
#, no-wrap
msgid "#include \"gettext.h\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8362
msgid "instead of"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8371
msgid ""
"The location of @code{gettext.h} is usually in a directory containing "
"auxiliary include files.  In many GNU packages, there is a directory "
"@file{lib/} containing helper functions; @file{gettext.h} fits there.  In "
"other packages, it can go into the @file{src} directory."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8374
msgid ""
"Do not install the @code{gettext.h} file in public locations.  Every package "
"that needs it should contain a copy of it on its own."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8377
#, no-wrap
msgid "autoconf macros for @code{gettext}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8383
msgid ""
"GNU @code{gettext} installs macros for use in a package's "
"@file{configure.ac} or @file{configure.in}.  @xref{Top, , Introduction, "
"autoconf, The Autoconf Manual}.  The primary macro is, of course, "
"@code{AM_GNU_GETTEXT}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8402
msgid ""
"The @code{AM_GNU_GETTEXT} macro tests for the presence of the GNU gettext "
"function family in either the C library or a separate @code{libintl} library "
"(shared or static libraries are both supported).  It also invokes "
"@code{AM_PO_SUBDIRS}, thus preparing the @file{po/} directories of the "
"package for building."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8405
msgid ""
"@code{AM_GNU_GETTEXT} accepts up to three optional arguments.  The general "
"syntax is"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8408
#, no-wrap
msgid "AM_GNU_GETTEXT([@var{intlsymbol}], [@var{needsymbol}])\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8415
msgid "@var{intlsymbol} should always be @samp{external}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8427
msgid ""
"If @var{needsymbol} is specified and is @samp{need-ngettext}, then GNU "
"gettext implementations (in libc or libintl) without the @code{ngettext()} "
"function will be ignored.  If @var{needsymbol} is specified and is "
"@samp{need-formatstring-macros}, then GNU gettext implementations that don't "
"support the ISO C 99 @file{<inttypes.h>} formatstring macros will be "
"ignored.  Only one @var{needsymbol} can be specified.  These requirements "
"can also be specified by using the macro @code{AM_GNU_GETTEXT_NEED} "
"elsewhere.  To specify more than one requirement, just specify the strongest "
"one among them, or invoke the @code{AM_GNU_GETTEXT_NEED} macro several "
"times.  The hierarchy among the various alternatives is as follows: "
"@samp{need-formatstring-macros} implies @samp{need-ngettext}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8438
msgid ""
"The @code{AM_GNU_GETTEXT} macro determines whether GNU gettext is available "
"and should be used.  If so, it sets the @code{USE_NLS} variable to "
"@samp{yes}; it defines @code{ENABLE_NLS} to 1 in the autoconf generated "
"configuration file (usually called @file{config.h}); it sets the variables "
"@code{LIBINTL} and @code{LTLIBINTL} to the linker options for use in a "
"Makefile (@code{LIBINTL} for use without libtool, @code{LTLIBINTL} for use "
"with libtool); it adds an @samp{-I} option to @code{CPPFLAGS} if necessary.  "
"In the negative case, it sets @code{USE_NLS} to @samp{no}; it sets "
"@code{LIBINTL} and @code{LTLIBINTL} to empty and doesn't change "
"@code{CPPFLAGS}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8440
msgid "The complexities that @code{AM_GNU_GETTEXT} deals with are the following:"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8443
#, no-wrap
msgid "@code{libintl} library"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8447
msgid ""
"Some operating systems have @code{gettext} in the C library, for example "
"glibc.  Some have it in a separate library @code{libintl}.  GNU "
"@code{libintl} might have been installed as part of the GNU @code{gettext} "
"package."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8452
msgid ""
"GNU @code{libintl}, if installed, is not necessarily already in the search "
"path (@code{CPPFLAGS} for the include file search path, @code{LDFLAGS} for "
"the library search path)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8458
msgid ""
"Except for glibc, the operating system's native @code{gettext} cannot "
"exploit the GNU mo files, doesn't have the necessary locale dependency "
"features, and cannot convert messages from the catalog's text encoding to "
"the user's locale encoding."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8466
msgid ""
"GNU @code{libintl}, if installed, is not necessarily already in the run time "
"library search path.  To avoid the need for setting an environment variable "
"like @code{LD_LIBRARY_PATH}, the macro adds the appropriate run time search "
"path options to the @code{LIBINTL} and @code{LTLIBINTL} variables.  This "
"works on most systems, but not on some operating systems with limited shared "
"library support, like SCO."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8471
msgid ""
"GNU @code{libintl} relies on POSIX/XSI @code{iconv}.  The macro checks for "
"linker options needed to use iconv and appends them to the @code{LIBINTL} "
"and @code{LTLIBINTL} variables."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8479
msgid ""
"The @code{AM_GNU_GETTEXT_VERSION} macro declares the version number of the "
"GNU gettext infrastructure that is used by the package."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8482
msgid ""
"The use of this macro is optional; only the @code{autopoint} program makes "
"use of it (@pxref{Version Control Issues})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8489
msgid ""
"The @code{AM_GNU_GETTEXT_NEED} macro declares a constraint regarding the GNU "
"gettext implementation.  The syntax is"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8492
#, no-wrap
msgid "AM_GNU_GETTEXT_NEED([@var{needsymbol}])\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8499
msgid ""
"If @var{needsymbol} is @samp{need-ngettext}, then GNU gettext "
"implementations (in libc or libintl) without the @code{ngettext()} function "
"will be ignored.  If @var{needsymbol} is @samp{need-formatstring-macros}, "
"then GNU gettext implementations that don't support the ISO C 99 "
"@file{<inttypes.h>} formatstring macros will be ignored."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8502
msgid ""
"The optional second argument of @code{AM_GNU_GETTEXT} is also taken into "
"account."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8505
msgid ""
"The @code{AM_GNU_GETTEXT_NEED} invocations can occur before or after the "
"@code{AM_GNU_GETTEXT} invocation; the order doesn't matter."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8516
msgid ""
"The @code{AM_PO_SUBDIRS} macro prepares the @file{po/} directories of the "
"package for building.  This macro should be used in internationalized "
"programs written in other programming languages than C, C++, Objective C, "
"for example @code{sh}, @code{Python}, @code{Lisp}.  See @ref{Programming "
"Languages} for a list of programming languages that support localization "
"through PO files."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8521
msgid ""
"The @code{AM_PO_SUBDIRS} macro determines whether internationalization "
"should be used.  If so, it sets the @code{USE_NLS} variable to @samp{yes}, "
"otherwise to @samp{no}.  It also determines the right values for Makefile "
"variables in each @file{po/} directory."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8529
msgid ""
"The @code{AM_XGETTEXT_OPTION} macro registers a command-line option to be "
"used in the invocations of @code{xgettext} in the @file{po/} directories of "
"the package."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8532
msgid ""
"For example, if you have a source file that defines a function "
"@samp{error_at_line} whose fifth argument is a format string, you can use"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8534
#, no-wrap
msgid "AM_XGETTEXT_OPTION([--flag=error_at_line:5:c-format])\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8538
msgid ""
"to instruct @code{xgettext} to mark all translatable strings in "
"@samp{gettext} invocations that occur as fifth argument to this function as "
"@samp{c-format}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8541
msgid ""
"See @ref{xgettext Invocation} for the list of options that @code{xgettext} "
"accepts."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8544
msgid ""
"The use of this macro is an alternative to the use of the "
"@samp{XGETTEXT_OPTIONS} variable in @file{po/Makevars}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8562
msgid ""
"The @code{AM_ICONV} macro tests for the presence of the POSIX/XSI "
"@code{iconv} function family in either the C library or a separate "
"@code{libiconv} library.  If found, it sets the @code{am_cv_func_iconv} "
"variable to @samp{yes}; it defines @code{HAVE_ICONV} to 1 in the autoconf "
"generated configuration file (usually called @file{config.h}); it defines "
"@code{ICONV_CONST} to @samp{const} or to empty, depending on whether the "
"second argument of @code{iconv()} is of type @samp{const char **} or "
"@samp{char **}; it sets the variables @code{LIBICONV} and @code{LTLIBICONV} "
"to the linker options for use in a Makefile (@code{LIBICONV} for use without "
"libtool, @code{LTLIBICONV} for use with libtool); it adds an @samp{-I} "
"option to @code{CPPFLAGS} if necessary.  If not found, it sets "
"@code{LIBICONV} and @code{LTLIBICONV} to empty and doesn't change "
"@code{CPPFLAGS}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8564
msgid "The complexities that @code{AM_ICONV} deals with are the following:"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8567
#, no-wrap
msgid "@code{libiconv} library"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8573
msgid ""
"Some operating systems have @code{iconv} in the C library, for example "
"glibc.  Some have it in a separate library @code{libiconv}, for example "
"OSF/1 or FreeBSD.  Regardless of the operating system, GNU @code{libiconv} "
"might have been installed.  In that case, it should be used instead of the "
"operating system's native @code{iconv}."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8578
msgid ""
"GNU @code{libiconv}, if installed, is not necessarily already in the search "
"path (@code{CPPFLAGS} for the include file search path, @code{LDFLAGS} for "
"the library search path)."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8584
msgid ""
"GNU @code{libiconv} is binary incompatible with some operating system's "
"native @code{iconv}, for example on FreeBSD.  Use of an @file{iconv.h} and "
"@file{libiconv.so} that don't fit together would produce program crashes."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8592
msgid ""
"GNU @code{libiconv}, if installed, is not necessarily already in the run "
"time library search path.  To avoid the need for setting an environment "
"variable like @code{LD_LIBRARY_PATH}, the macro adds the appropriate run "
"time search path options to the @code{LIBICONV} variable.  This works on "
"most systems, but not on some operating systems with limited shared library "
"support, like SCO."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8596
msgid ""
"@file{iconv.m4} is distributed with the GNU gettext package because "
"@file{gettext.m4} relies on it."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8604
msgid ""
"Many projects use version control systems for distributed development and "
"source backup.  This section gives some advice how to manage the uses of "
"@code{gettextize}, @code{autopoint} and @code{autoconf} on version "
"controlled files."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8620
msgid ""
"In a project development with multiple developers, there should be a single "
"developer who occasionally - when there is desire to upgrade to a new "
"@code{gettext} version - runs @code{gettextize} and performs the changes "
"listed in @ref{Adjusting Files}, and then commits his changes to the "
"repository."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8626
msgid ""
"It is highly recommended that all developers on a project use the same "
"version of GNU @code{gettext} in the package.  In other words, if a "
"developer runs @code{gettextize}, he should go the whole way, make the "
"necessary remaining changes and commit his changes to the repository.  "
"Otherwise the following damages will likely occur:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8634
msgid ""
"Apparent version mismatch between developers.  Since some @code{gettext} "
"specific portions in @file{configure.ac}, @file{configure.in} and "
"@code{Makefile.am}, @code{Makefile.in} files depend on the @code{gettext} "
"version, the use of infrastructure files belonging to different "
"@code{gettext} versions can easily lead to build errors."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8640
msgid ""
"Hidden version mismatch.  Such version mismatch can also lead to "
"malfunctioning of the package, that may be undiscovered by the developers.  "
"The worst case of hidden version mismatch is that internationalization of "
"the package doesn't work at all."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8649
msgid ""
"Release risks.  All developers implicitly perform constant testing on a "
"package.  This is important in the days and weeks before a release.  If the "
"guy who makes the release tar files uses a different version of GNU "
"@code{gettext} than the other developers, the distribution will be less well "
"tested than if all had been using the same @code{gettext} version.  For "
"example, it is possible that a platform specific bug goes undiscovered due "
"to this constellation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8659
msgid ""
"There are basically three ways to deal with generated files in the context "
"of a version controlled repository, such as @file{configure} generated from "
"@file{configure.ac}, @code{@var{parser}.c} generated from "
"@code{@var{parser}.y}, or @code{po/Makefile.in.in} autoinstalled by "
"@code{gettextize} or @code{autopoint}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8663
msgid "All generated files are always committed into the repository."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8667
msgid ""
"All generated files are committed into the repository occasionally, for "
"example each time a release is made."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8670
msgid "Generated files are never committed into the repository."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8673
msgid "Each of these three approaches has different advantages and drawbacks."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8680
msgid ""
"The advantage is that anyone can check out the source at any moment and gets "
"a working build.  The drawbacks are: 1a. It requires some frequent \"push\" "
"actions by the maintainers.  1b. The repository grows in size quite fast."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8691
msgid ""
"The advantage is that anyone can check out the source, and the usual "
"\"./configure; make\" will work.  The drawbacks are: 2a. The one who checks "
"out the repository needs tools like GNU @code{automake}, GNU "
"@code{autoconf}, GNU @code{m4} installed in his PATH; sometimes he even "
"needs particular versions of them.  2b. When a release is made and a commit "
"is made on the generated files, the other developers get conflicts on the "
"generated files when merging the local work back to the repository.  "
"Although these conflicts are easy to resolve, they are annoying."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8698
msgid ""
"The advantage is less work for the maintainers.  The drawback is that anyone "
"who checks out the source not only needs tools like GNU @code{automake}, GNU "
"@code{autoconf}, GNU @code{m4} installed in his PATH, but also that he needs "
"to perform a package specific pre-build step before being able to "
"\"./configure; make\"."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8703
msgid ""
"For the first and second approach, all files modified or brought in by the "
"occasional @code{gettextize} invocation and update should be committed into "
"the repository."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8708
msgid ""
"For the third approach, the maintainer can omit from the repository all the "
"files that @code{gettextize} mentions as \"copy\".  Instead, he adds to the "
"@file{configure.ac} or @file{configure.in} a line of the form"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8711
#, no-wrap
msgid "AM_GNU_GETTEXT_VERSION(@value{ARCHIVE-VERSION})\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8718
msgid ""
"and adds to the package's pre-build script an invocation of "
"@samp{autopoint}.  For everyone who checks out the source, this "
"@code{autopoint} invocation will copy into the right place the "
"@code{gettext} infrastructure files that have been omitted from the "
"repository."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8730
msgid ""
"The version number used as argument to @code{AM_GNU_GETTEXT_VERSION} is the "
"version of the @code{gettext} infrastructure that the package wants to use.  "
"It is also the minimum version number of the @samp{autopoint} program.  So, "
"if you write @code{AM_GNU_GETTEXT_VERSION(0.11.5)} then the developers can "
"have any version >= 0.11.5 installed; the package will work with the 0.11.5 "
"infrastructure in all developers' builds.  When the maintainer then runs "
"gettextize from, say, version 0.12.1 on the package, the occurrence of "
"@code{AM_GNU_GETTEXT_VERSION(0.11.5)} will be changed into "
"@code{AM_GNU_GETTEXT_VERSION(0.12.1)}, and all other developers that use the "
"CVS will henceforth need to have GNU @code{gettext} 0.12.1 or newer "
"installed."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8738
msgid ""
"Since translations are valuable assets as well as the source code, it would "
"make sense to put them under version control.  The GNU gettext "
"infrastructure supports two ways to deal with translations in the context of "
"a version controlled repository."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8742
msgid "Both POT file and PO files are committed into the repository."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8745
msgid "Only PO files are committed into the repository."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8755
msgid ""
"If a POT file is absent when building, it will be generated by scanning the "
"source files with @code{xgettext}, and then the PO files are regenerated as "
"a dependency.  On the other hand, some maintainers want to keep the POT file "
"unchanged during the development phase.  So, even if a POT file is present "
"and older than the source code, it won't be updated automatically.  You can "
"manually update it with @code{make $(DOMAIN).pot-update}, and commit it at "
"certain point."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8757
msgid "Special advices for particular version control systems:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8765
msgid ""
"Recent version control systems, Git for instance, ignore file's timestamp.  "
"In that case, PO files can be accidentally updated even if a POT file is not "
"updated.  To prevent this, you can set @samp{PO_DEPENDS_ON_POT} variable to "
"@code{no} in the @file{Makevars} file and do @code{make update-po} manually."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8771
msgid ""
"Location comments such as @code{#: lib/error.c:116} are sometimes annoying, "
"since these comments are volatile and may introduce unwanted change to the "
"working copy when building.  To mitigate this, you can decide to omit those "
"comments from the PO files in the repository."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8777
msgid ""
"This is possible with the @code{--no-location} option of the @code{msgmerge} "
"command @footnote{you can also use it through the @samp{MSGMERGE_OPTIONS} "
"option from @file{Makevars}}.  The drawback is that, if the location "
"information is needed, translators have to recover the location comments by "
"running @code{msgmerge} again."
msgstr ""

#. type: include
#: original_texis/gettext.texi:8783
#, no-wrap
msgid "autopoint.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8788
#, no-wrap
msgid "release"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8789
#, no-wrap
msgid "distribution tarball"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8793
msgid ""
"In projects that use GNU @code{automake}, the usual commands for creating a "
"distribution tarball, @samp{make dist} or @samp{make distcheck}, "
"automatically update the PO files as needed."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8796
msgid ""
"If GNU @code{automake} is not used, the maintainer needs to perform this "
"update before making a release:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:8801
#, no-wrap
msgid ""
"$ ./configure\n"
"$ (cd po; make update-po)\n"
"$ make distclean\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8805
#, no-wrap
msgid "package installer's view of @code{gettext}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8806
#, no-wrap
msgid "package distributor's view of @code{gettext}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8807
#, no-wrap
msgid "package build and installation options"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8808
#, no-wrap
msgid "setting up @code{gettext} at build time"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8822
msgid ""
"By default, packages fully using GNU @code{gettext}, internally, are "
"installed in such a way as to allow translation of messages.  At "
"@emph{configuration} time, those packages should automatically detect "
"whether the underlying host system already provides the GNU @code{gettext} "
"functions.  If not, the GNU @code{gettext} library should be automatically "
"prepared and used.  Installers may use special options at configuration time "
"for changing this behavior.  The command @samp{./configure "
"--with-included-gettext} bypasses system @code{gettext} to use the included "
"GNU @code{gettext} instead, while @samp{./configure --disable-nls} produces "
"programs totally unable to translate messages."
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:8823
#, no-wrap
msgid "LINGUAS@r{, environment variable}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8831
msgid ""
"Internationalized packages have usually many @file{@var{ll}.po} files.  "
"Unless translations are disabled, all those available are installed together "
"with the package.  However, the environment variable @code{LINGUAS} may be "
"set, prior to configuration, to limit the installed set.  @code{LINGUAS} "
"should then contain a space separated list of two-letter codes, stating "
"which languages are allowed."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8840
msgid ""
"While the presentation of @code{gettext} focuses mostly on C and implicitly "
"applies to C++ as well, its scope is far broader than that: Many programming "
"languages, scripting languages and other textual data like GUI resources or "
"package descriptions can make use of the gettext approach."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8851
#, no-wrap
msgid "programming languages"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:8852
#, no-wrap
msgid "scripting languages"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8857
msgid ""
"All programming and scripting languages that have the notion of strings are "
"eligible to supporting @code{gettext}.  Supporting @code{gettext} means the "
"following:"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8865
msgid ""
"You should add to the language a syntax for translatable strings.  In "
"principle, a function call of @code{gettext} would do, but a shorthand "
"syntax helps keeping the legibility of internationalized programs.  For "
"example, in C we use the syntax @code{_(\"string\")}, and in GNU awk we use "
"the shorthand @code{_\"string\"}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8870
msgid ""
"You should arrange that evaluation of such a translatable string at runtime "
"calls the @code{gettext} function, or performs equivalent processing."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8882
msgid ""
"Similarly, you should make the functions @code{ngettext}, @code{dcgettext}, "
"@code{dcngettext} available from within the language.  These functions are "
"less often used, but are nevertheless necessary for particular purposes: "
"@code{ngettext} for correct plural handling, and @code{dcgettext} and "
"@code{dcngettext} for obeying other locale-related environment variables "
"than @code{LC_MESSAGES}, such as @code{LC_TIME} or @code{LC_MONETARY}.  For "
"these latter functions, you need to make the @code{LC_*} constants, "
"available in the C header @code{<locale.h>}, referenceable from within the "
"language, usually either as enumeration values or as strings."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8890
msgid ""
"You should allow the programmer to designate a message domain, either by "
"making the @code{textdomain} function available from within the language, or "
"by introducing a magic variable called @code{TEXTDOMAIN}.  Similarly, you "
"should allow the programmer to designate where to search for message "
"catalogs, by providing access to the @code{bindtextdomain} function."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8896
msgid ""
"You should either perform a @code{setlocale (LC_ALL, \"\")} call during the "
"startup of your language runtime, or allow the programmer to do so.  "
"Remember that gettext will act as a no-op if the @code{LC_MESSAGES} and "
"@code{LC_CTYPE} locale categories are not both set."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8904
msgid ""
"A programmer should have a way to extract translatable strings from a "
"program into a PO file.  The GNU @code{xgettext} program is being extended "
"to support very different programming languages.  Please contact the GNU "
"@code{gettext} maintainers to help them doing this.  If the string extractor "
"is best integrated into your language's parser, GNU @code{xgettext} can "
"function as a front end to your string extractor."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8911
msgid ""
"The language's library should have a string formatting facility where the "
"arguments of a format string are denoted by a positional number or a name.  "
"This is needed because for some languages and some messages with more than "
"one substitutable argument, the translation will need to output the "
"substituted arguments in different order.  @xref{c-format Flag}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8918
msgid ""
"If the language has more than one implementation, and not all of the "
"implementations use @code{gettext}, but the programs should be portable "
"across implementations, you should provide a no-i18n emulation, that makes "
"the other implementations accept programs written for yours, without "
"actually translating the strings."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:8925
msgid ""
"To help the programmer in the task of marking translatable strings, which is "
"sometimes performed using the Emacs PO mode (@pxref{Marking}), you are "
"welcome to contact the GNU @code{gettext} maintainers, so they can add "
"support for your language to @file{po-mode.el}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8929
msgid ""
"On the implementation side, two approaches are possible, with different "
"effects on portability and copyright:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8938
msgid ""
"You may link against GNU @code{gettext} functions if they are found in the C "
"library.  For example, an autoconf test for @code{gettext()} and "
"@code{ngettext()} will detect this situation.  For the moment, this test "
"will succeed on GNU systems and on Solaris 11 platforms.  No severe "
"copyright restrictions apply, except if you want to distribute statically "
"linked binaries."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:8946
msgid ""
"You may emulate or reimplement the GNU @code{gettext} functionality.  This "
"has the advantage of full portability and no copyright restrictions, but "
"also the drawback that you have to reimplement the GNU @code{gettext} "
"features (such as the @code{LANGUAGE} environment variable, the locale "
"aliases database, the automatic charset conversion, and plural handling)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8957
msgid ""
"For the programmer, the general procedure is the same as for the C "
"language.  The Emacs PO mode marking supports other languages, and the GNU "
"@code{xgettext} string extractor recognizes other languages based on the "
"file extension or a command-line option.  In some languages, "
"@code{setlocale} is not needed because it is already performed by the "
"underlying language runtime."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:8965
msgid ""
"The translator works exactly as in the C language case.  The only difference "
"is that when translating format strings, she has to be aware of the "
"language's particular syntax for positional arguments in format strings."
msgstr ""

#. type: node
#: original_texis/gettext.texi:8993 original_texis/gettext.texi:9245
#, no-wrap
msgid "kde-kuit-format"
msgstr ""

#. type: subsection
#: original_texis/gettext.texi:8993 original_texis/gettext.texi:9246
#, no-wrap
msgid "KUIT Format Strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9004
msgid ""
"C format strings are described in POSIX (IEEE P1003.1 2001), section XSH 3 "
"fprintf(), "
"@uref{http://www.opengroup.org/onlinepubs/007904975/functions/fprintf.html}.  "
"See also the fprintf() manual page, "
"@uref{http://www.linuxvalley.it/encyclopedia/ldp/manpage/man3/printf.3.php}, "
"@uref{http://informatik.fh-wuerzburg.de/student/i510/man/printf.html}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9006
msgid "Although format strings with positions that reorder arguments, such as"
msgstr ""

#. type: example
#: original_texis/gettext.texi:9009
#, no-wrap
msgid "\"Only %2$d bytes free on '%1$s'.\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9013
msgid "which is semantically equivalent to"
msgstr ""

#. type: example
#: original_texis/gettext.texi:9016
#, no-wrap
msgid "\"'%s' has only %d bytes free.\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9024
msgid ""
"are a POSIX/XSI feature and not specified by ISO C 99, translators can rely "
"on this reordering ability: On the few platforms where @code{printf()}, "
"@code{fprintf()} etc. don't support this feature natively, @file{libintl.a} "
"or @file{libintl.so} provides replacement functions, and GNU "
"@code{<libintl.h>} activates these replacement functions automatically."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9025
#, no-wrap
msgid "outdigits"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9026
#, no-wrap
msgid "Arabic digits"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9034
msgid ""
"As a special feature for Farsi (Persian) and maybe Arabic, translators can "
"insert an @samp{I} flag into numeric format directives.  For example, the "
"translation of @code{\"%d\"} can be @code{\"%Id\"}.  The effect of this "
"flag, on systems with GNU @code{libc}, is that in the output, the ASCII "
"digits are replaced with the @samp{outdigits} defined in the @code{LC_CTYPE} "
"locale category.  On other systems, the @code{gettext} function removes this "
"flag, so that it has no effect."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9039
msgid ""
"Note that the programmer should @emph{not} put this flag into the "
"untranslated string.  (Putting the @samp{I} format directive flag into an "
"@var{msgid} string would lead to undefined behaviour on platforms without "
"glibc when NLS is disabled.)"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9046
msgid ""
"Objective C format strings are like C format strings.  They support an "
"additional format directive: \"%@@\", which when executed consumes an "
"argument of type @code{Object *}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9065
msgid ""
"Shell format strings, as supported by GNU gettext and the @samp{envsubst} "
"program, are strings with references to shell variables in the form "
"@code{$@var{variable}} or @code{$@{@var{variable}@}}.  References of the "
"form @code{$@{@var{variable}-@var{default}@}}, "
"@code{$@{@var{variable}:-@var{default}@}}, "
"@code{$@{@var{variable}=@var{default}@}}, "
"@code{$@{@var{variable}:=@var{default}@}}, "
"@code{$@{@var{variable}+@var{replacement}@}}, "
"@code{$@{@var{variable}:+@var{replacement}@}}, "
"@code{$@{@var{variable}?@var{ignored}@}}, "
"@code{$@{@var{variable}:?@var{ignored}@}}, that would be valid inside shell "
"scripts, are not supported.  The @var{variable} names must consist solely of "
"alphanumeric or underscore ASCII characters, not start with a digit and be "
"nonempty; otherwise such a variable reference is ignored."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9073
msgid ""
"There are two kinds of format strings in Python: those acceptable to the "
"Python built-in format operator @code{%}, labelled as @samp{python-format}, "
"and those acceptable to the @code{format} method of the @samp{str} object."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9080
msgid ""
"Python @code{%} format strings are described in @w{Python Library reference} "
"/ @w{5. Built-in Types} / @w{5.6. Sequence Types} / @w{5.6.2. String "
"Formatting Operations}.  "
"@uref{https://docs.python.org/2/library/stdtypes.html#string-formatting-operations}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9083
msgid ""
"Python brace format strings are described in @w{PEP 3101 -- Advanced String "
"Formatting}, @uref{https://www.python.org/dev/peps/pep-3101/}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9090
msgid ""
"Lisp format strings are described in the Common Lisp HyperSpec, chapter 22.3 "
"@w{Formatted Output}, "
"@uref{http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/sec_22-3.html}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9099
msgid ""
"Emacs Lisp format strings are documented in the Emacs Lisp reference, "
"section @w{Formatting Strings}, "
"@uref{https://www.gnu.org/manual/elisp-manual-21-2.8/html_chapter/elisp_4.html#SEC75}.  "
"Note that as of version 21, XEmacs supports numbered argument specifications "
"in format strings while FSF Emacs doesn't."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9107
msgid ""
"librep format strings are documented in the librep manual, section "
"@w{Formatted Output}, "
"@url{http://librep.sourceforge.net/librep-manual.html#Formatted%20Output}, "
"@url{http://www.gwinnup.org/research/docs/librep.html#SEC122}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9113
msgid ""
"Scheme format strings are documented in the SLIB manual, section @w{Format "
"Specification}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9123
msgid ""
"Smalltalk format strings are described in the GNU Smalltalk documentation, "
"class @code{CharArray}, methods @samp{bindWith:} and "
"@samp{bindWithArguments:}.  "
"@uref{https://www.gnu.org/software/smalltalk/gst-manual/gst_68.html#SEC238}.  "
"In summary, a directive starts with @samp{%} and is followed by @samp{%} or "
"a nonzero digit (@samp{1} to @samp{9})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9132
msgid ""
"Java format strings are described in the JDK documentation for class "
"@code{java.text.MessageFormat}, "
"@uref{http://java.sun.com/j2se/1.4/docs/api/java/text/MessageFormat.html}.  "
"See also the ICU documentation "
"@uref{http://oss.software.ibm.com/icu/apiref/classMessageFormat.html}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9139
msgid ""
"C# format strings are described in the .NET documentation for class "
"@code{System.String} and in "
"@uref{http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpConFormattingOverview.asp}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9146
msgid ""
"awk format strings are described in the gawk documentation, section "
"@w{Printf}, "
"@uref{https://www.gnu.org/manual/gawk/html_node/Printf.html#Printf}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9153
msgid ""
"Object Pascal format strings are described in the documentation of the Free "
"Pascal runtime library, section Format, "
"@uref{https://www.freepascal.org/docs-html/rtl/sysutils/format.html}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9161
msgid ""
"YCP sformat strings are described in the libycp documentation "
"@uref{file:/usr/share/doc/packages/libycp/YCP-builtins.html}.  In summary, a "
"directive starts with @samp{%} and is followed by @samp{%} or a nonzero "
"digit (@samp{1} to @samp{9})."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9167
msgid ""
"Tcl format strings are described in the @file{format.n} manual page, "
"@uref{http://www.scriptics.com/man/tcl8.3/TclCmd/format.htm}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9175
msgid ""
"There are two kinds format strings in Perl: those acceptable to the Perl "
"built-in function @code{printf}, labelled as @samp{perl-format}, and those "
"acceptable to the @code{libintl-perl} function @code{__x}, labelled as "
"@samp{perl-brace-format}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9178
msgid ""
"Perl @code{printf} format strings are described in the @code{sprintf} "
"section of @samp{man perlfunc}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9184
msgid ""
"Perl brace format strings are described in the "
"@file{Locale::TextDomain(3pm)} manual page of the CPAN package "
"libintl-perl.  In brief, Perl format uses placeholders put between braces "
"(@samp{@{} and @samp{@}}).  The placeholder must have the syntax of simple "
"identifiers."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9191
msgid ""
"PHP format strings are described in the documentation of the PHP function "
"@code{sprintf}, in @file{phpdoc/manual/function.sprintf.html} or "
"@uref{http://www.php.net/manual/en/function.sprintf.php}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9209
msgid ""
"These format strings are used inside the GCC sources.  In such a format "
"string, a directive starts with @samp{%}, is optionally followed by a size "
"specifier @samp{l}, an optional flag @samp{+}, another optional flag "
"@samp{#}, and is finished by a specifier: @samp{%} denotes a literal percent "
"sign, @samp{c} denotes a character, @samp{s} denotes a string, @samp{i} and "
"@samp{d} denote an integer, @samp{o}, @samp{u}, @samp{x} denote an unsigned "
"integer, @samp{.*s} denotes a string preceded by a width specification, "
"@samp{H} denotes a @samp{location_t *} pointer, @samp{D} denotes a general "
"declaration, @samp{F} denotes a function declaration, @samp{T} denotes a "
"type, @samp{A} denotes a function argument, @samp{C} denotes a tree code, "
"@samp{E} denotes an expression, @samp{L} denotes a programming language, "
"@samp{O} denotes a binary operator, @samp{P} denotes a function parameter, "
"@samp{Q} denotes an assignment operator, @samp{V} denotes a const/volatile "
"qualifier."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9221
msgid ""
"These format strings are used inside the GNU Fortran Compiler sources, that "
"is, the Fortran frontend in the GCC sources.  In such a format string, a "
"directive starts with @samp{%} and is finished by a specifier: @samp{%} "
"denotes a literal percent sign, @samp{C} denotes the current source "
"location, @samp{L} denotes a source location, @samp{c} denotes a character, "
"@samp{s} denotes a string, @samp{i} and @samp{d} denote an integer, @samp{u} "
"denotes an unsigned integer.  @samp{i}, @samp{d}, and @samp{u} may be "
"preceded by a size specifier @samp{l}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9229
msgid ""
"Qt format strings are described in the documentation of the QString class "
"@uref{file:/usr/lib/qt-4.3.0/doc/html/qstring.html}.  In summary, a "
"directive consists of a @samp{%} followed by a digit. The same directive "
"cannot occur more than once in a format string."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9236
msgid ""
"Qt format strings are described in the documentation of the QObject::tr "
"method @uref{file:/usr/lib/qt-4.3.0/doc/html/qobject.html}.  In summary, the "
"only allowed directive is @samp{%n}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9244
msgid ""
"KDE 4 format strings are defined as follows: A directive consists of a "
"@samp{%} followed by a non-zero decimal number.  If a @samp{%n} occurs in a "
"format strings, all of @samp{%1}, ..., @samp{%(n-1)} must occur as well, "
"except possibly one of them."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9253
msgid ""
"KUIT (KDE User Interface Text) is compatible with KDE 4 format strings, "
"while it also allows programmers to add semantic information to a format "
"string, through XML markup tags.  For example, if the first format directive "
"in a string is a filename, programmers could indicate that with a "
"@samp{filename} tag, like @samp{<filename>%1</filename>}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9256
msgid ""
"KUIT format strings are described in "
"@uref{https://api.kde.org/frameworks/ki18n/html/prg_guide.html#kuit_markup}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9267
msgid ""
"Boost format strings are described in the documentation of the "
"@code{boost::format} class, at "
"@uref{https://www.boost.org/libs/format/doc/format.html}.  In summary, a "
"directive has either the same syntax as in a C format string, such as "
"@samp{%1$+5d}, or may be surrounded by vertical bars, such as "
"@samp{%|1$+5d|} or @samp{%|1$+5|}, or consists of just an argument number "
"between percent signs, such as @samp{%1%}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9273
msgid ""
"Lua format strings are described in the Lua reference manual, section "
"@w{String Manipulation}, "
"@uref{https://www.lua.org/manual/5.1/manual.html#pdf-string.format}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9287
msgid ""
"Although JavaScript specification itself does not define any format strings, "
"many JavaScript implementations provide printf-like functions.  "
"@code{xgettext} understands a set of common format strings used in popular "
"JavaScript implementations including Gjs, Seed, and Node.JS.  In such a "
"format string, a directive starts with @samp{%} and is finished by a "
"specifier: @samp{%} denotes a literal percent sign, @samp{c} denotes a "
"character, @samp{s} denotes a string, @samp{b}, @samp{d}, @samp{o}, "
"@samp{x}, @samp{X} denote an integer, @samp{f} denotes floating-point "
"number, @samp{j} denotes a JSON object."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9294
msgid "For the maintainer, the general procedure differs from the C language case:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9305
msgid ""
"If only a single programming language is used, the @code{XGETTEXT_OPTIONS} "
"variable in @file{po/Makevars} (@pxref{po/Makevars}) should be adjusted to "
"match the @code{xgettext} options for that particular programming language.  "
"If the package uses more than one programming language with @code{gettext} "
"support, it becomes necessary to change the POT file construction rule in "
"@file{po/Makefile.in.in}.  It is recommended to make one @code{xgettext} "
"invocation per programming language, each with the options appropriate for "
"that language, and to combine the resulting files using @code{msgcat}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9392
#, no-wrap
msgid "C and C-like languages"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9395 original_texis/gettext.texi:9458 original_texis/gettext.texi:9790 original_texis/gettext.texi:9882 original_texis/gettext.texi:9935 original_texis/gettext.texi:9988 original_texis/gettext.texi:10039 original_texis/gettext.texi:10093 original_texis/gettext.texi:10148 original_texis/gettext.texi:10204 original_texis/gettext.texi:10403 original_texis/gettext.texi:10670 original_texis/gettext.texi:10729 original_texis/gettext.texi:10789 original_texis/gettext.texi:10843 original_texis/gettext.texi:10897 original_texis/gettext.texi:10963 original_texis/gettext.texi:11830 original_texis/gettext.texi:11884 original_texis/gettext.texi:11935 original_texis/gettext.texi:11986 original_texis/gettext.texi:12057 original_texis/gettext.texi:12116 original_texis/gettext.texi:12176 original_texis/gettext.texi:12239 original_texis/gettext.texi:12262 original_texis/gettext.texi:12279 original_texis/gettext.texi:12296 original_texis/gettext.texi:12316 original_texis/gettext.texi:12500
#, no-wrap
msgid "RPMs"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9397
msgid "gcc, gpp, gobjc, glibc, gettext"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9398 original_texis/gettext.texi:9461 original_texis/gettext.texi:9793 original_texis/gettext.texi:9885 original_texis/gettext.texi:9938 original_texis/gettext.texi:9991 original_texis/gettext.texi:10042 original_texis/gettext.texi:10096 original_texis/gettext.texi:10151 original_texis/gettext.texi:10207 original_texis/gettext.texi:10406 original_texis/gettext.texi:10673 original_texis/gettext.texi:10732 original_texis/gettext.texi:10792 original_texis/gettext.texi:10846 original_texis/gettext.texi:10900 original_texis/gettext.texi:10966 original_texis/gettext.texi:11833 original_texis/gettext.texi:11887 original_texis/gettext.texi:11938 original_texis/gettext.texi:11989 original_texis/gettext.texi:12060 original_texis/gettext.texi:12119 original_texis/gettext.texi:12178 original_texis/gettext.texi:12242 original_texis/gettext.texi:12265 original_texis/gettext.texi:12282 original_texis/gettext.texi:12299 original_texis/gettext.texi:12319 original_texis/gettext.texi:12502
#, no-wrap
msgid "Ubuntu packages"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9400
msgid "gcc, g++, gobjc, libc6-dev, libasprintf-dev"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9401 original_texis/gettext.texi:9464 original_texis/gettext.texi:9796 original_texis/gettext.texi:9888 original_texis/gettext.texi:9941 original_texis/gettext.texi:9994 original_texis/gettext.texi:10045 original_texis/gettext.texi:10099 original_texis/gettext.texi:10154 original_texis/gettext.texi:10210 original_texis/gettext.texi:10409 original_texis/gettext.texi:10676 original_texis/gettext.texi:10735 original_texis/gettext.texi:10795 original_texis/gettext.texi:10849 original_texis/gettext.texi:10903 original_texis/gettext.texi:10969 original_texis/gettext.texi:11836 original_texis/gettext.texi:11890 original_texis/gettext.texi:11941 original_texis/gettext.texi:11998 original_texis/gettext.texi:12063 original_texis/gettext.texi:12122 original_texis/gettext.texi:12180 original_texis/gettext.texi:12245 original_texis/gettext.texi:12268 original_texis/gettext.texi:12285 original_texis/gettext.texi:12302 original_texis/gettext.texi:12322 original_texis/gettext.texi:12504 original_texis/gettext.texi:12544 original_texis/gettext.texi:12552 original_texis/gettext.texi:12560 original_texis/gettext.texi:12583 original_texis/gettext.texi:12593 original_texis/gettext.texi:12604 original_texis/gettext.texi:12614 original_texis/gettext.texi:12624 original_texis/gettext.texi:12635
#, no-wrap
msgid "File extension"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9405
msgid ""
"For C: @code{c}, @code{h}.  @*For C++: @code{C}, @code{c++}, @code{cc}, "
"@code{cxx}, @code{cpp}, @code{hpp}.  @*For Objective C: @code{m}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:9406 original_texis/gettext.texi:9467 original_texis/gettext.texi:9799 original_texis/gettext.texi:9891 original_texis/gettext.texi:9944 original_texis/gettext.texi:9997 original_texis/gettext.texi:10048 original_texis/gettext.texi:10102 original_texis/gettext.texi:10157 original_texis/gettext.texi:10213 original_texis/gettext.texi:10412 original_texis/gettext.texi:10681 original_texis/gettext.texi:10738 original_texis/gettext.texi:10798 original_texis/gettext.texi:10852 original_texis/gettext.texi:10906 original_texis/gettext.texi:10972 original_texis/gettext.texi:11839 original_texis/gettext.texi:11893 original_texis/gettext.texi:11944 original_texis/gettext.texi:12001 original_texis/gettext.texi:12066 original_texis/gettext.texi:12125 original_texis/gettext.texi:12182
#, no-wrap
msgid "String syntax"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9408 original_texis/gettext.texi:9893 original_texis/gettext.texi:9946 original_texis/gettext.texi:9999 original_texis/gettext.texi:10050 original_texis/gettext.texi:10104 original_texis/gettext.texi:10215 original_texis/gettext.texi:10683 original_texis/gettext.texi:10800 original_texis/gettext.texi:10854 original_texis/gettext.texi:10908 original_texis/gettext.texi:10975 original_texis/gettext.texi:11895 original_texis/gettext.texi:11946 original_texis/gettext.texi:12004 original_texis/gettext.texi:12069 original_texis/gettext.texi:12128
#, no-wrap
msgid "\"abc\""
msgstr ""

#. type: item
#: original_texis/gettext.texi:9409 original_texis/gettext.texi:9470 original_texis/gettext.texi:9805 original_texis/gettext.texi:9894 original_texis/gettext.texi:9947 original_texis/gettext.texi:10000 original_texis/gettext.texi:10051 original_texis/gettext.texi:10105 original_texis/gettext.texi:10160 original_texis/gettext.texi:10216 original_texis/gettext.texi:10415 original_texis/gettext.texi:10684 original_texis/gettext.texi:10741 original_texis/gettext.texi:10801 original_texis/gettext.texi:10855 original_texis/gettext.texi:10909 original_texis/gettext.texi:11001 original_texis/gettext.texi:11842 original_texis/gettext.texi:11896 original_texis/gettext.texi:11947 original_texis/gettext.texi:12018 original_texis/gettext.texi:12077 original_texis/gettext.texi:12134 original_texis/gettext.texi:12184
#, no-wrap
msgid "gettext shorthand"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9411 original_texis/gettext.texi:10218 original_texis/gettext.texi:10417 original_texis/gettext.texi:10803 original_texis/gettext.texi:10857 original_texis/gettext.texi:11844 original_texis/gettext.texi:11949 original_texis/gettext.texi:12020 original_texis/gettext.texi:12079 original_texis/gettext.texi:12136
msgid "_(\"abc\")"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9412 original_texis/gettext.texi:9473 original_texis/gettext.texi:9808 original_texis/gettext.texi:9897 original_texis/gettext.texi:9952 original_texis/gettext.texi:10003 original_texis/gettext.texi:10054 original_texis/gettext.texi:10108 original_texis/gettext.texi:10163 original_texis/gettext.texi:10219 original_texis/gettext.texi:10418 original_texis/gettext.texi:10687 original_texis/gettext.texi:10744 original_texis/gettext.texi:10804 original_texis/gettext.texi:10858 original_texis/gettext.texi:10912 original_texis/gettext.texi:11004 original_texis/gettext.texi:11845 original_texis/gettext.texi:11899 original_texis/gettext.texi:11950 original_texis/gettext.texi:12021 original_texis/gettext.texi:12080 original_texis/gettext.texi:12137 original_texis/gettext.texi:12186
#, no-wrap
msgid "gettext/ngettext functions"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9415 original_texis/gettext.texi:11953
msgid ""
"@code{gettext}, @code{dgettext}, @code{dcgettext}, @code{ngettext}, "
"@code{dngettext}, @code{dcngettext}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9416 original_texis/gettext.texi:9480 original_texis/gettext.texi:9813 original_texis/gettext.texi:9900 original_texis/gettext.texi:9955 original_texis/gettext.texi:10006 original_texis/gettext.texi:10057 original_texis/gettext.texi:10111 original_texis/gettext.texi:10113 original_texis/gettext.texi:10166 original_texis/gettext.texi:10223 original_texis/gettext.texi:10424 original_texis/gettext.texi:10690 original_texis/gettext.texi:10747 original_texis/gettext.texi:10807 original_texis/gettext.texi:10861 original_texis/gettext.texi:10915 original_texis/gettext.texi:11010 original_texis/gettext.texi:11849 original_texis/gettext.texi:11902 original_texis/gettext.texi:11954 original_texis/gettext.texi:12025 original_texis/gettext.texi:12084 original_texis/gettext.texi:12141 original_texis/gettext.texi:12188
#, no-wrap
msgid "textdomain"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9418 original_texis/gettext.texi:10059 original_texis/gettext.texi:11012 original_texis/gettext.texi:11851 original_texis/gettext.texi:11904 original_texis/gettext.texi:11956 original_texis/gettext.texi:12027 original_texis/gettext.texi:12086
msgid "@code{textdomain} function"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9419 original_texis/gettext.texi:9484 original_texis/gettext.texi:9817 original_texis/gettext.texi:9903 original_texis/gettext.texi:9958 original_texis/gettext.texi:10009 original_texis/gettext.texi:10060 original_texis/gettext.texi:10114 original_texis/gettext.texi:10116 original_texis/gettext.texi:10171 original_texis/gettext.texi:10226 original_texis/gettext.texi:10427 original_texis/gettext.texi:10693 original_texis/gettext.texi:10750 original_texis/gettext.texi:10810 original_texis/gettext.texi:10864 original_texis/gettext.texi:10918 original_texis/gettext.texi:11013 original_texis/gettext.texi:11852 original_texis/gettext.texi:11905 original_texis/gettext.texi:11957 original_texis/gettext.texi:12028 original_texis/gettext.texi:12087 original_texis/gettext.texi:12144 original_texis/gettext.texi:12190
#, no-wrap
msgid "bindtextdomain"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9421 original_texis/gettext.texi:10062 original_texis/gettext.texi:10695 original_texis/gettext.texi:11015 original_texis/gettext.texi:11854 original_texis/gettext.texi:11907 original_texis/gettext.texi:11959 original_texis/gettext.texi:12030 original_texis/gettext.texi:12089
msgid "@code{bindtextdomain} function"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9422 original_texis/gettext.texi:9488 original_texis/gettext.texi:9821 original_texis/gettext.texi:9906 original_texis/gettext.texi:9961 original_texis/gettext.texi:10012 original_texis/gettext.texi:10063 original_texis/gettext.texi:10117 original_texis/gettext.texi:10174 original_texis/gettext.texi:10229 original_texis/gettext.texi:10431 original_texis/gettext.texi:10696 original_texis/gettext.texi:10753 original_texis/gettext.texi:10813 original_texis/gettext.texi:10867 original_texis/gettext.texi:10921 original_texis/gettext.texi:11019 original_texis/gettext.texi:11855 original_texis/gettext.texi:11908 original_texis/gettext.texi:11960 original_texis/gettext.texi:12031 original_texis/gettext.texi:12090 original_texis/gettext.texi:12147 original_texis/gettext.texi:12192
#, no-wrap
msgid "setlocale"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9424 original_texis/gettext.texi:11857 original_texis/gettext.texi:11962
msgid "Programmer must call @code{setlocale (LC_ALL, \"\")}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9425 original_texis/gettext.texi:9491 original_texis/gettext.texi:9824 original_texis/gettext.texi:9909 original_texis/gettext.texi:9964 original_texis/gettext.texi:10015 original_texis/gettext.texi:10066 original_texis/gettext.texi:10120 original_texis/gettext.texi:10177 original_texis/gettext.texi:10232 original_texis/gettext.texi:10434 original_texis/gettext.texi:10699 original_texis/gettext.texi:10756 original_texis/gettext.texi:10816 original_texis/gettext.texi:10870 original_texis/gettext.texi:10924 original_texis/gettext.texi:11022 original_texis/gettext.texi:11858 original_texis/gettext.texi:11911 original_texis/gettext.texi:11963 original_texis/gettext.texi:12034 original_texis/gettext.texi:12093 original_texis/gettext.texi:12150 original_texis/gettext.texi:12194
#, no-wrap
msgid "Prerequisite"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9429
msgid ""
"@code{#include <libintl.h>} @*@code{#include <locale.h>} @*@code{#define "
"_(string) gettext (string)}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9430 original_texis/gettext.texi:9494 original_texis/gettext.texi:9827 original_texis/gettext.texi:9912 original_texis/gettext.texi:9967 original_texis/gettext.texi:10018 original_texis/gettext.texi:10069 original_texis/gettext.texi:10123 original_texis/gettext.texi:10180 original_texis/gettext.texi:10235 original_texis/gettext.texi:10437 original_texis/gettext.texi:10702 original_texis/gettext.texi:10759 original_texis/gettext.texi:10819 original_texis/gettext.texi:10873 original_texis/gettext.texi:10928 original_texis/gettext.texi:11028 original_texis/gettext.texi:11861 original_texis/gettext.texi:11914 original_texis/gettext.texi:11966 original_texis/gettext.texi:12037 original_texis/gettext.texi:12096 original_texis/gettext.texi:12153 original_texis/gettext.texi:12196
#, no-wrap
msgid "Use or emulate GNU gettext"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9432 original_texis/gettext.texi:11968 original_texis/gettext.texi:12155
msgid "Use"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9433 original_texis/gettext.texi:9497 original_texis/gettext.texi:9830 original_texis/gettext.texi:9915 original_texis/gettext.texi:9970 original_texis/gettext.texi:10021 original_texis/gettext.texi:10072 original_texis/gettext.texi:10126 original_texis/gettext.texi:10183 original_texis/gettext.texi:10238 original_texis/gettext.texi:10440 original_texis/gettext.texi:10705 original_texis/gettext.texi:10762 original_texis/gettext.texi:10822 original_texis/gettext.texi:10876 original_texis/gettext.texi:10931 original_texis/gettext.texi:11031 original_texis/gettext.texi:11864 original_texis/gettext.texi:11917 original_texis/gettext.texi:11969 original_texis/gettext.texi:12040 original_texis/gettext.texi:12099 original_texis/gettext.texi:12156 original_texis/gettext.texi:12198 original_texis/gettext.texi:12248 original_texis/gettext.texi:12271 original_texis/gettext.texi:12288 original_texis/gettext.texi:12305 original_texis/gettext.texi:12325 original_texis/gettext.texi:12506
#, no-wrap
msgid "Extractor"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9435 original_texis/gettext.texi:10128 original_texis/gettext.texi:10240 original_texis/gettext.texi:10442 original_texis/gettext.texi:10933 original_texis/gettext.texi:11971
msgid "xgettext -k_"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9436 original_texis/gettext.texi:9500 original_texis/gettext.texi:9833 original_texis/gettext.texi:9918 original_texis/gettext.texi:9973 original_texis/gettext.texi:10024 original_texis/gettext.texi:10075 original_texis/gettext.texi:10129 original_texis/gettext.texi:10186 original_texis/gettext.texi:10241 original_texis/gettext.texi:10443 original_texis/gettext.texi:10708 original_texis/gettext.texi:10765 original_texis/gettext.texi:10825 original_texis/gettext.texi:10879 original_texis/gettext.texi:10934 original_texis/gettext.texi:11035 original_texis/gettext.texi:11867 original_texis/gettext.texi:11920 original_texis/gettext.texi:11972 original_texis/gettext.texi:12043 original_texis/gettext.texi:12102 original_texis/gettext.texi:12159 original_texis/gettext.texi:12200
#, no-wrap
msgid "Formatting with positions"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9440
msgid ""
"@code{fprintf \"%2$d %1$d\"} @*In C++: @code{autosprintf \"%2$d %1$d\"} "
"(@pxref{Top, , Introduction, autosprintf, GNU autosprintf})"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9441 original_texis/gettext.texi:9503 original_texis/gettext.texi:9836 original_texis/gettext.texi:9921 original_texis/gettext.texi:9976 original_texis/gettext.texi:10027 original_texis/gettext.texi:10078 original_texis/gettext.texi:10134 original_texis/gettext.texi:10189 original_texis/gettext.texi:10244 original_texis/gettext.texi:10446 original_texis/gettext.texi:10711 original_texis/gettext.texi:10768 original_texis/gettext.texi:10830 original_texis/gettext.texi:10882 original_texis/gettext.texi:10937 original_texis/gettext.texi:11040 original_texis/gettext.texi:11870 original_texis/gettext.texi:11923 original_texis/gettext.texi:11975 original_texis/gettext.texi:12046 original_texis/gettext.texi:12105 original_texis/gettext.texi:12162 original_texis/gettext.texi:12202
#, no-wrap
msgid "Portability"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9443 original_texis/gettext.texi:12164
msgid "autoconf (gettext.m4) and #if ENABLE_NLS"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9444 original_texis/gettext.texi:9506 original_texis/gettext.texi:9839 original_texis/gettext.texi:9924 original_texis/gettext.texi:9979 original_texis/gettext.texi:10030 original_texis/gettext.texi:10081 original_texis/gettext.texi:10137 original_texis/gettext.texi:10192 original_texis/gettext.texi:10247 original_texis/gettext.texi:10449 original_texis/gettext.texi:10716 original_texis/gettext.texi:10771 original_texis/gettext.texi:10833 original_texis/gettext.texi:10885 original_texis/gettext.texi:10940 original_texis/gettext.texi:11046 original_texis/gettext.texi:11873 original_texis/gettext.texi:11926 original_texis/gettext.texi:11978 original_texis/gettext.texi:12049 original_texis/gettext.texi:12108 original_texis/gettext.texi:12165 original_texis/gettext.texi:12204
#, no-wrap
msgid "po-mode marking"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9452
msgid ""
"The following examples are available in the @file{examples} directory: "
"@code{hello-c}, @code{hello-c-gnome}, @code{hello-c++}, @code{hello-c++-qt}, "
"@code{hello-c++-kde}, @code{hello-c++-gnome}, @code{hello-c++-wxwidgets}, "
"@code{hello-objc}, @code{hello-objc-gnustep}, @code{hello-objc-gnome}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9455
#, no-wrap
msgid "shell scripts"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9460
msgid "bash, gettext"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9463
msgid "bash, gettext-base"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9469
msgid "@code{\"abc\"}, @code{'abc'}, @code{abc}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9472
msgid "\"`gettext \\\"abc\\\"`\""
msgstr ""

#. type: pindex
#: original_texis/gettext.texi:9475
#, no-wrap
msgid "ngettext"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9479
msgid ""
"@code{gettext}, @code{ngettext} programs @*@code{eval_gettext}, "
"@code{eval_ngettext}, @code{eval_pgettext}, @code{eval_npgettext} shell "
"functions"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:9481
#, no-wrap
msgid "TEXTDOMAIN@r{, environment variable}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9483
msgid "environment variable @code{TEXTDOMAIN}"
msgstr ""

#. type: vindex
#: original_texis/gettext.texi:9485
#, no-wrap
msgid "TEXTDOMAINDIR@r{, environment variable}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9487
msgid "environment variable @code{TEXTDOMAINDIR}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9490 original_texis/gettext.texi:9908 original_texis/gettext.texi:9963 original_texis/gettext.texi:10014 original_texis/gettext.texi:10231 original_texis/gettext.texi:10433 original_texis/gettext.texi:10743 original_texis/gettext.texi:12033 original_texis/gettext.texi:12092
msgid "automatic"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9493
msgid ". gettext.sh"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9496 original_texis/gettext.texi:9914 original_texis/gettext.texi:9969 original_texis/gettext.texi:10020 original_texis/gettext.texi:10071 original_texis/gettext.texi:10125 original_texis/gettext.texi:10704 original_texis/gettext.texi:10875 original_texis/gettext.texi:11863 original_texis/gettext.texi:11916 original_texis/gettext.texi:12039
msgid "use"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9499 original_texis/gettext.texi:9832 original_texis/gettext.texi:10023 original_texis/gettext.texi:10074 original_texis/gettext.texi:10185 original_texis/gettext.texi:10707 original_texis/gettext.texi:10824 original_texis/gettext.texi:10878 original_texis/gettext.texi:11866 original_texis/gettext.texi:12042 original_texis/gettext.texi:12101 original_texis/gettext.texi:12158 original_texis/gettext.texi:12250
msgid "xgettext"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9502 original_texis/gettext.texi:9508 original_texis/gettext.texi:9841 original_texis/gettext.texi:9911 original_texis/gettext.texi:9926 original_texis/gettext.texi:9957 original_texis/gettext.texi:9960 original_texis/gettext.texi:9981 original_texis/gettext.texi:10017 original_texis/gettext.texi:10032 original_texis/gettext.texi:10065 original_texis/gettext.texi:10083 original_texis/gettext.texi:10133 original_texis/gettext.texi:10139 original_texis/gettext.texi:10194 original_texis/gettext.texi:10234 original_texis/gettext.texi:10249 original_texis/gettext.texi:10436 original_texis/gettext.texi:10451 original_texis/gettext.texi:10701 original_texis/gettext.texi:10718 original_texis/gettext.texi:10773 original_texis/gettext.texi:10848 original_texis/gettext.texi:10866 original_texis/gettext.texi:10869 original_texis/gettext.texi:10872 original_texis/gettext.texi:10887 original_texis/gettext.texi:10917 original_texis/gettext.texi:10942 original_texis/gettext.texi:11048 original_texis/gettext.texi:11860 original_texis/gettext.texi:11875 original_texis/gettext.texi:11898 original_texis/gettext.texi:11919 original_texis/gettext.texi:11922 original_texis/gettext.texi:11928 original_texis/gettext.texi:11974 original_texis/gettext.texi:12045 original_texis/gettext.texi:12051 original_texis/gettext.texi:12095 original_texis/gettext.texi:12104 original_texis/gettext.texi:12110 original_texis/gettext.texi:12152
msgid "---"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9505 original_texis/gettext.texi:9838 original_texis/gettext.texi:10191 original_texis/gettext.texi:10246 original_texis/gettext.texi:10448 original_texis/gettext.texi:10832 original_texis/gettext.texi:10884 original_texis/gettext.texi:10939
msgid "fully portable"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9511
msgid "An example is available in the @file{examples} directory: @code{hello-sh}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9526
#, no-wrap
msgid "preparing shell scripts for translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9531
msgid ""
"Preparing a shell script for internationalization is conceptually similar to "
"the steps described in @ref{Sources}.  The concrete steps for shell scripts "
"are as follows."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9535
msgid "Insert the line"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9538
#, no-wrap
msgid ". gettext.sh\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9547
msgid ""
"near the top of the script.  @code{gettext.sh} is a shell function library "
"that provides the functions @code{eval_gettext} (see @ref{eval_gettext "
"Invocation}), @code{eval_ngettext} (see @ref{eval_ngettext Invocation}), "
"@code{eval_pgettext} (see @ref{eval_pgettext Invocation}), and "
"@code{eval_npgettext} (see @ref{eval_npgettext Invocation}).  You have to "
"ensure that @code{gettext.sh} can be found in the @code{PATH}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9553
msgid ""
"Set and export the @code{TEXTDOMAIN} and @code{TEXTDOMAINDIR} environment "
"variables.  Usually @code{TEXTDOMAIN} is the package or program name, and "
"@code{TEXTDOMAINDIR} is the absolute pathname corresponding to "
"@code{$prefix/share/locale}, where @code{$prefix} is the installation "
"location."
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9559
#, no-wrap
msgid ""
"TEXTDOMAIN=@@PACKAGE@@\n"
"export TEXTDOMAIN\n"
"TEXTDOMAINDIR=@@LOCALEDIR@@\n"
"export TEXTDOMAINDIR\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9563
msgid ""
"Prepare the strings for translation, as described in @ref{Preparing "
"Strings}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9571
msgid ""
"Simplify translatable strings so that they don't contain command "
"substitution (@code{\"`...`\"} or @code{\"$(...)\"}), variable access with "
"defaulting (like @code{$@{@var{variable}-@var{default}@}}), access to "
"positional arguments (like @code{$0}, @code{$1}, ...) or highly volatile "
"shell variables (like @code{$?}). This can always be done through simple "
"local code restructuring.  For example,"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9574
#, no-wrap
msgid "echo \"Usage: $0 [OPTION] FILE...\"\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9577 original_texis/gettext.texi:9590 original_texis/gettext.texi:9615
msgid "becomes"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9581
#, no-wrap
msgid ""
"program_name=$0\n"
"echo \"Usage: $program_name [OPTION] FILE...\"\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9584
msgid "Similarly,"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9587
#, no-wrap
msgid "echo \"Remaining files: `ls | wc -l`\"\n"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9594
#, no-wrap
msgid ""
"filecount=\"`ls | wc -l`\"\n"
"echo \"Remaining files: $filecount\"\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9604
msgid ""
"For each translatable string, change the output command @samp{echo} or "
"@samp{$echo} to @samp{gettext} (if the string contains no references to "
"shell variables) or to @samp{eval_gettext} (if it refers to shell "
"variables), followed by a no-argument @samp{echo} command (to account for "
"the terminating newline). Similarly, for cases with plural handling, replace "
"a conditional @samp{echo} command with an invocation of @samp{ngettext} or "
"@samp{eval_ngettext}, followed by a no-argument @samp{echo} command."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9609
msgid ""
"When doing this, you also need to add an extra backslash before the dollar "
"sign in references to shell variables, so that the @samp{eval_gettext} "
"function receives the translatable string before the variable values are "
"substituted into it. For example,"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9612
#, no-wrap
msgid "echo \"Remaining files: $filecount\"\n"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9618
#, no-wrap
msgid "eval_gettext \"Remaining files: \\$filecount\"; echo\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9625
msgid ""
"If the output command is not @samp{echo}, you can make it use @samp{echo} "
"nevertheless, through the use of backquotes. However, note that inside "
"backquotes, backslashes must be doubled to be effective (because the "
"backquoting eats one level of backslashes). For example, assuming that "
"@samp{error} is a shell function that signals an error,"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9628
#, no-wrap
msgid "error \"file not found: $filename\"\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9631
msgid "is first transformed into"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9634
#, no-wrap
msgid "error \"`echo \\\"file not found: \\$filename\\\"`\"\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9637
msgid "which then becomes"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9640
#, no-wrap
msgid "error \"`eval_gettext \\\"file not found: \\\\\\$filename\\\"`\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9648
msgid ""
"@code{gettext.sh}, contained in the run-time package of GNU gettext, "
"provides the following:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:9650
#, no-wrap
msgid "$echo"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9653
msgid ""
"The variable @code{echo} is set to a command that outputs its first argument "
"and a newline, without interpreting backslashes in the argument string."
msgstr ""

#. type: item
#: original_texis/gettext.texi:9654
#, no-wrap
msgid "eval_gettext"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9656
msgid "See @ref{eval_gettext Invocation}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:9657
#, no-wrap
msgid "eval_ngettext"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9659
msgid "See @ref{eval_ngettext Invocation}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:9660
#, no-wrap
msgid "eval_pgettext"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9662
msgid "See @ref{eval_pgettext Invocation}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:9663
#, no-wrap
msgid "eval_npgettext"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9665
msgid "See @ref{eval_npgettext Invocation}."
msgstr ""

#. type: include
#: original_texis/gettext.texi:9670
#, no-wrap
msgid "rt-gettext.texi"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9675
msgid ""
"Note: @code{xgettext} supports only the one-argument form of the "
"@code{gettext} invocation, where no options are present and the "
"@var{textdomain} is implicit, from the environment."
msgstr ""

#. type: include
#: original_texis/gettext.texi:9679
#, no-wrap
msgid "rt-ngettext.texi"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9684
msgid ""
"Note: @code{xgettext} supports only the three-arguments form of the "
"@code{ngettext} invocation, where no options are present and the "
"@var{textdomain} is implicit, from the environment."
msgstr ""

#. type: include
#: original_texis/gettext.texi:9688
#, no-wrap
msgid "rt-envsubst.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9693
#, no-wrap
msgid "@code{eval_gettext} function, usage"
msgstr ""

#. type: example
#: original_texis/gettext.texi:9696
#, no-wrap
msgid "eval_gettext @var{msgid}\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9698
#, no-wrap
msgid "lookup message translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9702
msgid ""
"This function outputs the native language translation of a textual message, "
"performing dollar-substitution on the result.  Note that only shell "
"variables mentioned in @var{msgid} will be dollar-substituted in the result."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9706
#, no-wrap
msgid "@code{eval_ngettext} function, usage"
msgstr ""

#. type: example
#: original_texis/gettext.texi:9709
#, no-wrap
msgid "eval_ngettext @var{msgid} @var{msgid-plural} @var{count}\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9711
#, no-wrap
msgid "lookup plural message translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9716
msgid ""
"This function outputs the native language translation of a textual message "
"whose grammatical form depends on a number, performing dollar-substitution "
"on the result.  Note that only shell variables mentioned in @var{msgid} or "
"@var{msgid-plural} will be dollar-substituted in the result."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9720
#, no-wrap
msgid "@code{eval_pgettext} function, usage"
msgstr ""

#. type: example
#: original_texis/gettext.texi:9723
#, no-wrap
msgid "eval_pgettext @var{msgctxt} @var{msgid}\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9725
#, no-wrap
msgid "lookup message translation with context"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9730
msgid ""
"This function outputs the native language translation of a textual message "
"in the given context @var{msgctxt} (see @ref{Contexts}), performing "
"dollar-substitution on the result.  Note that only shell variables mentioned "
"in @var{msgid} will be dollar-substituted in the result."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9734
#, no-wrap
msgid "@code{eval_npgettext} function, usage"
msgstr ""

#. type: example
#: original_texis/gettext.texi:9737
#, no-wrap
msgid "eval_npgettext @var{msgctxt} @var{msgid} @var{msgid-plural} @var{count}\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9739
#, no-wrap
msgid "lookup plural message translation with context"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9745
msgid ""
"This function outputs the native language translation of a textual message "
"whose grammatical form depends on a number in the given context "
"@var{msgctxt} (see @ref{Contexts}), performing dollar-substitution on the "
"result.  Note that only shell variables mentioned in @var{msgid} or "
"@var{msgid-plural} will be dollar-substituted in the result."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9754
msgid ""
"GNU @code{bash} 2.0 or newer has a special shorthand for translating a "
"string and substituting variable values in it: @code{$\"msgid\"}.  But the "
"use of this construct is @strong{discouraged}, due to the security holes it "
"opens and due to its portability problems."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9759
msgid ""
"The security holes of @code{$\"...\"} come from the fact that after looking "
"up the translation of the string, @code{bash} processes it like it processes "
"any double-quoted string: dollar and backquote processing, like @samp{eval} "
"does."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9774
msgid ""
"In a locale whose encoding is one of BIG5, BIG5-HKSCS, GBK, GB18030, "
"SHIFT_JIS, JOHAB, some double-byte characters have a second byte whose value "
"is @code{0x60}.  For example, the byte sequence @code{\\xe0\\x60} is a "
"single character in these locales.  Many versions of @code{bash} (all "
"versions up to bash-2.05, and newer versions on platforms without "
"@code{mbsrtowcs()} function) don't know about character boundaries and see a "
"backquote character where there is only a particular Chinese character.  "
"Thus it can start executing part of the translation as a command list.  This "
"situation can occur even without the translator being aware of it: if the "
"translator provides translations in the UTF-8 encoding, it is the "
"@code{gettext()} function which will, during its conversion from the "
"translator's encoding to the user's locale's encoding, produce the dangerous "
"@code{\\x60} bytes."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:9779
msgid ""
"A translator could - voluntarily or inadvertently - use backquotes "
"@code{\"`...`\"} or dollar-parentheses @code{\"$(...)\"} in her "
"translations.  The enclosed strings would be executed as command lists by "
"the shell."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9784
msgid ""
"The portability problem is that @code{bash} must be built with "
"internationalization support; this is normally not the case on systems that "
"don't have the @code{gettext()} function in libc."
msgstr ""

#. type: table
#: original_texis/gettext.texi:9792 original_texis/gettext.texi:9795
msgid "python"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9798
msgid "py"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9804
msgid ""
"@code{'abc'}, @code{u'abc'}, @code{r'abc'}, @code{ur'abc'}, "
"@*@code{\"abc\"}, @code{u\"abc\"}, @code{r\"abc\"}, @code{ur\"abc\"}, "
"@*@code{'''abc'''}, @code{u'''abc'''}, @code{r'''abc'''}, "
"@code{ur'''abc'''}, @*@code{\"\"\"abc\"\"\"}, @code{u\"\"\"abc\"\"\"}, "
"@code{r\"\"\"abc\"\"\"}, @code{ur\"\"\"abc\"\"\"}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9807
msgid "@code{_('abc')} etc."
msgstr ""

#. type: table
#: original_texis/gettext.texi:9812
msgid ""
"@code{gettext.gettext}, @code{gettext.dgettext}, @code{gettext.ngettext}, "
"@code{gettext.dngettext}, also @code{ugettext}, @code{ungettext}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9816
msgid ""
"@code{gettext.textdomain} function, or @code{gettext.install(@var{domain})} "
"function"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9820
msgid ""
"@code{gettext.bindtextdomain} function, or "
"@code{gettext.install(@var{domain},@var{localedir})} function"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9823
msgid "not used by the gettext emulation"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9826
msgid "import gettext"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9829 original_texis/gettext.texi:10182
msgid "emulate"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9835
msgid "'...%(ident)d...' % @{ 'ident': value @}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9844
msgid ""
"An example is available in the @file{examples} directory: "
"@code{hello-python}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9849
msgid ""
"A note about format strings: Python supports format strings with unnamed "
"arguments, such as @code{'...%d...'}, and format strings with named "
"arguments, such as @code{'...%(ident)d...'}.  The latter are preferable for "
"internationalized programs, for two reasons:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9855
msgid ""
"When a format string takes more than one argument, the translator can "
"provide a translation that uses the arguments in a different order, if the "
"format string uses named arguments.  For example, the translator can "
"reformulate"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9857
#, no-wrap
msgid "\"'%(volume)s' has only %(freespace)d bytes free.\"\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9860
msgid "to"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:9862
#, no-wrap
msgid "\"Only %(freespace)d bytes free on '%(volume)s'.\"\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9865
msgid "Additionally, the identifiers also provide some context to the translator."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:9873
msgid ""
"In the context of plural forms, the format string used for the singular form "
"does not use the numeric argument in many languages.  Even in English, one "
"prefers to write @code{\"one hour\"} instead of @code{\"1 hour\"}.  Omitting "
"individual arguments from format strings like this is only possible with the "
"named argument syntax.  (With unnamed arguments, Python -- unlike C -- "
"verifies that the format string uses all supplied arguments.)"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9878
#, no-wrap
msgid "Lisp"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9879 original_texis/gettext.texi:9887 original_texis/gettext.texi:9937 original_texis/gettext.texi:9940
#, no-wrap
msgid "clisp"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9884
msgid "clisp 2.28 or newer"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9890
msgid "lisp"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9896
msgid "@code{(_ \"abc\")}, @code{(ENGLISH \"abc\")}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9899
msgid "@code{i18n:gettext}, @code{i18n:ngettext}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9902
msgid "i18n:textdomain"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9905
msgid "i18n:textdomaindir"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9917
msgid "xgettext -k_ -kENGLISH"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9920
msgid "format \"~1@@*~D ~0@@*~D\""
msgstr ""

#. type: table
#: original_texis/gettext.texi:9923 original_texis/gettext.texi:9978 original_texis/gettext.texi:10080 original_texis/gettext.texi:10136
msgid "On platforms without gettext, no translation."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:9929
msgid ""
"An example is available in the @file{examples} directory: "
"@code{hello-clisp}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:9932
#, no-wrap
msgid "clisp C sources"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9943
msgid "d"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9951
msgid ""
"@code{ENGLISH ? \"abc\" : \"\"} @*@code{GETTEXT(\"abc\")} "
"@*@code{GETTEXTL(\"abc\")}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9954
msgid "@code{clgettext}, @code{clgettextl}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9966
msgid "#include \"lispbibl.c\""
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9972
msgid "clisp-xgettext"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9975
msgid "fprintf \"%2$d %1$d\""
msgstr ""

#. type: table
#: original_texis/gettext.texi:9990
msgid "emacs, xemacs"
msgstr ""

#. type: table
#: original_texis/gettext.texi:9993
msgid "emacs, xemacs21"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:9996
msgid "el"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10002 original_texis/gettext.texi:10053
msgid "(_\"abc\")"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10005
msgid "@code{gettext}, @code{dgettext} (xemacs only)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10008
msgid "@code{domain} special form (xemacs only)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10011
msgid "@code{bind-text-domain} function (xemacs only)"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10026 original_texis/gettext.texi:10077
msgid "format \"%2$d %1$d\""
msgstr ""

#. type: table
#: original_texis/gettext.texi:10029
msgid "Only XEmacs.  Without @code{I18N3} defined at build time, no translation."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10036
#, no-wrap
msgid "@code{librep} Lisp"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10041
msgid "librep 0.15.3 or newer"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10044
msgid "librep16"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10047
msgid "jl"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10068
msgid "(require 'rep.i18n.gettext)"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10086
msgid ""
"An example is available in the @file{examples} directory: "
"@code{hello-librep}."
msgstr ""

#. type: table
#: original_texis/gettext.texi:10090 original_texis/gettext.texi:10095
#, no-wrap
msgid "guile"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10098
msgid "guile-2.0"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10101
msgid "scm"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10107
msgid "@code{(_ \"abc\")}, @code{_\"abc\"} (GIMP script-fu extension)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10110
msgid "@code{gettext}, @code{ngettext}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10119
msgid "(catch #t (lambda () (setlocale LC_ALL \"\")) (lambda args #f))"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10122
msgid "(use-modules (ice-9 format))"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10142
msgid ""
"An example is available in the @file{examples} directory: "
"@code{hello-guile}."
msgstr ""

#. type: table
#: original_texis/gettext.texi:10150
msgid "smalltalk"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10153
msgid "gnu-smalltalk"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10156
msgid "st"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10159 original_texis/gettext.texi:10740 original_texis/gettext.texi:10977 original_texis/gettext.texi:12006 original_texis/gettext.texi:12071
#, no-wrap
msgid "'abc'"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10162
msgid "NLS ? 'abc'"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10165
msgid "@code{LcMessagesDomain>>#at:}, @code{LcMessagesDomain>>#at:plural:with:}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10170
msgid ""
"@code{LcMessages>>#domain:localeDirectory:} (returns a "
"@code{LcMessagesDomain} object).@* Example: @code{I18N Locale default "
"messages domain: 'gettext' localeDirectory: /usr/local/share/locale'}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10173
msgid "@code{LcMessages>>#domain:localeDirectory:}, see above."
msgstr ""

#. type: table
#: original_texis/gettext.texi:10176
msgid "Automatic if you use @code{I18N Locale default}."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10179
msgid "PackageLoader fileInPackage: 'I18N'!"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10188
msgid "'%1 %2' bindWith: 'Hello' with: 'world'"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10198
msgid ""
"An example is available in the @file{examples} directory: "
"@code{hello-smalltalk}."
msgstr ""

#. type: table
#: original_texis/gettext.texi:10206
msgid "java, java2"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10209
msgid "default-jdk"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10212
msgid "java"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10222
msgid ""
"@code{GettextResource.gettext}, @code{GettextResource.ngettext}, "
"@code{GettextResource.pgettext}, @code{GettextResource.npgettext}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10225
msgid "---, use @code{ResourceBundle.getResource} instead"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10228
msgid "---, use CLASSPATH instead"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10237
msgid "---, uses a Java specific message catalog format"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10243
msgid "MessageFormat.format \"@{1,number@} @{0,number@}\""
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10256
msgid ""
"Before marking strings as internationalizable, uses of the string "
"concatenation operator need to be converted to @code{MessageFormat} "
"applications.  For example, @code{\"file \"+filename+\" not found\"} becomes "
"@code{MessageFormat.format(\"file @{0@} not found\", new Object[] @{ "
"filename @})}.  Only after this is done, can the strings be marked and "
"extracted."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10264
msgid ""
"GNU gettext uses the native Java internationalization mechanism, namely "
"@code{ResourceBundle}s.  There are two formats of @code{ResourceBundle}s: "
"@code{.properties} files and @code{.class} files.  The @code{.properties} "
"format is a text file which the translators can directly edit, like PO "
"files, but which doesn't support plural forms.  Whereas the @code{.class} "
"format is compiled from @code{.java} source code and can support plural "
"forms (provided it is accessed through an appropriate API, see below)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10272
msgid ""
"To convert a PO file to a @code{.properties} file, the @code{msgcat} program "
"can be used with the option @code{--properties-output}.  To convert a "
"@code{.properties} file back to a PO file, the @code{msgcat} program can be "
"used with the option @code{--properties-input}.  All the tools that "
"manipulate PO files can work with @code{.properties} files as well, if given "
"the @code{--properties-input} and/or @code{--properties-output} option."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10277
msgid ""
"To convert a PO file to a ResourceBundle class, the @code{msgfmt} program "
"can be used with the option @code{--java} or @code{--java2}.  To convert a "
"ResourceBundle back to a PO file, the @code{msgunfmt} program can be used "
"with the option @code{--java}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10282
msgid ""
"Two different programmatic APIs can be used to access ResourceBundles.  Note "
"that both APIs work with all kinds of ResourceBundles, whether GNU gettext "
"generated classes, or other @code{.class} or @code{.properties} files."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10286
msgid "The @code{java.util.ResourceBundle} API."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10289
msgid ""
"In particular, its @code{getString} function returns a string translation.  "
"Note that a missing translation yields a @code{MissingResourceException}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10295
msgid ""
"This has the advantage of being the standard API.  And it does not require "
"any additional libraries, only the @code{msgcat} generated "
"@code{.properties} files or the @code{msgfmt} generated @code{.class} "
"files.  But it cannot do plural handling, even if the resource was generated "
"by @code{msgfmt} from a PO file with plural handling."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10298
msgid "The @code{gnu.gettext.GettextResource} API."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10301
msgid ""
"Reference documentation in Javadoc 1.1 style format is in the "
"@uref{javadoc2/index.html,javadoc2 directory}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10304
msgid ""
"Its @code{gettext} function returns a string translation.  Note that when a "
"translation is missing, the @var{msgid} argument is returned unchanged."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10308
msgid ""
"This has the advantage of having the @code{ngettext} function for plural "
"handling and the @code{pgettext} and @code{npgettext} for strings constraint "
"to a particular context."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10309
#, no-wrap
msgid "@code{libintl} for Java"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10312
msgid ""
"To use this API, one needs the @code{libintl.jar} file which is part of the "
"GNU gettext package and distributed under the LGPL."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10317
msgid ""
"Four examples, using the second API, are available in the @file{examples} "
"directory: @code{hello-java}, @code{hello-java-awt}, "
"@code{hello-java-swing}, @code{hello-java-qtjambi}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10320
msgid ""
"Now, to make use of the API and define a shorthand for @samp{getString}, "
"there are three idioms that you can choose from:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10326
msgid ""
"(This one assumes Java 1.5 or newer.)  In a unique class of your project, "
"say @samp{Util}, define a static variable holding the @code{ResourceBundle} "
"instance and the shorthand:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10333
#, no-wrap
msgid ""
"private static ResourceBundle myResources =\n"
"  ResourceBundle.getBundle(\"domain-name\");\n"
"public static String _(String s) @{\n"
"  return myResources.getString(s);\n"
"@}\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10336 original_texis/gettext.texi:10358 original_texis/gettext.texi:10625
msgid "All classes containing internationalized strings then contain"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10339
#, no-wrap
msgid "import static Util._;\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10343 original_texis/gettext.texi:10366 original_texis/gettext.texi:10387 original_texis/gettext.texi:10633 original_texis/gettext.texi:10654
msgid "and the shorthand is used like this:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10346 original_texis/gettext.texi:10369
#, no-wrap
msgid "System.out.println(_(\"Operation completed.\"));\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10351
msgid ""
"In a unique class of your project, say @samp{Util}, define a static variable "
"holding the @code{ResourceBundle} instance:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10355
#, no-wrap
msgid ""
"public static ResourceBundle myResources =\n"
"  ResourceBundle.getBundle(\"domain-name\");\n"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10362
#, no-wrap
msgid ""
"private static ResourceBundle res = Util.myResources;\n"
"private static String _(String s) @{ return res.getString(s); @}\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10374
msgid ""
"You add a class with a very short name, say @samp{S}, containing just the "
"definition of the resource bundle and of the shorthand:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10383
#, no-wrap
msgid ""
"public class S @{\n"
"  public static ResourceBundle myResources =\n"
"    ResourceBundle.getBundle(\"domain-name\");\n"
"  public static String _(String s) @{\n"
"    return myResources.getString(s);\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10390
#, no-wrap
msgid "System.out.println(S._(\"Operation completed.\"));\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10397
msgid ""
"Which of the three idioms you choose, will depend on whether your project "
"requires portability to Java versions prior to Java 1.5 and, if so, whether "
"copying two lines of codes into every class is more acceptable in your "
"project than a class with a single-letter name."
msgstr ""

#. type: table
#: original_texis/gettext.texi:10405
msgid "mono"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10408
msgid "mono-mcs"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10411
msgid "cs"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10414
msgid "@code{\"abc\"}, @code{@@\"abc\"}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10423
msgid ""
"@code{GettextResourceManager.GetString}, "
"@code{GettextResourceManager.GetPluralString} "
"@code{GettextResourceManager.GetParticularString} "
"@code{GettextResourceManager.GetParticularPluralString}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10426
msgid "new GettextResourceManager(domain)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10430
msgid ""
"---, compiled message catalogs are located in subdirectories of the "
"directory containing the executable"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10439
msgid "---, uses a C# specific message catalog format"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10445
msgid "String.Format \"@{1@} @{0@}\""
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10458
msgid ""
"Before marking strings as internationalizable, uses of the string "
"concatenation operator need to be converted to @code{String.Format} "
"invocations.  For example, @code{\"file \"+filename+\" not found\"} becomes "
"@code{String.Format(\"file @{0@} not found\", filename)}.  Only after this "
"is done, can the strings be marked and extracted."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10466
msgid ""
"GNU gettext uses the native C#/.NET internationalization mechanism, namely "
"the classes @code{ResourceManager} and @code{ResourceSet}.  Applications use "
"the @code{ResourceManager} methods to retrieve the native language "
"translation of strings.  An instance of @code{ResourceSet} is the in-memory "
"representation of a message catalog file.  The @code{ResourceManager} loads "
"and accesses @code{ResourceSet} instances as needed to look up the "
"translations."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10469
msgid ""
"There are two formats of @code{ResourceSet}s that can be directly loaded by "
"the C# runtime: @code{.resources} files and @code{.dll} files."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10477
msgid ""
"The @code{.resources} format is a binary file usually generated through the "
"@code{resgen} or @code{monoresgen} utility, but which doesn't support plural "
"forms.  @code{.resources} files can also be embedded in .NET @code{.exe} "
"files.  This only affects whether a file system access is performed to load "
"the message catalog; it doesn't affect the contents of the message catalog."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10482
msgid ""
"On the other hand, the @code{.dll} format is a binary file that is compiled "
"from @code{.cs} source code and can support plural forms (provided it is "
"accessed through the GNU gettext API, see below)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10487
msgid ""
"Note that these .NET @code{.dll} and @code{.exe} files are not tied to a "
"particular platform; their file format and GNU gettext for C# can be used on "
"any platform."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10496
msgid ""
"To convert a PO file to a @code{.resources} file, the @code{msgfmt} program "
"can be used with the option @samp{--csharp-resources}.  To convert a "
"@code{.resources} file back to a PO file, the @code{msgunfmt} program can be "
"used with the option @samp{--csharp-resources}.  You can also, in some "
"cases, use the @code{monoresgen} program (from the @code{mono}/@code{mcs} "
"package).  This program can also convert a @code{.resources} file back to a "
"PO file.  But beware: as of this writing (January 2004), the "
"@code{monoresgen} converter is quite buggy."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10503
msgid ""
"To convert a PO file to a @code{.dll} file, the @code{msgfmt} program can be "
"used with the option @code{--csharp}.  The result will be a @code{.dll} file "
"containing a subclass of @code{GettextResourceSet}, which itself is a "
"subclass of @code{ResourceSet}.  To convert a @code{.dll} file containing a "
"@code{GettextResourceSet} subclass back to a PO file, the @code{msgunfmt} "
"program can be used with the option @code{--csharp}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10506
msgid ""
"The advantages of the @code{.dll} format over the @code{.resources} format "
"are:"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10516
msgid ""
"Freedom to localize: Users can add their own translations to an application "
"after it has been built and distributed.  Whereas when the programmer uses a "
"@code{ResourceManager} constructor provided by the system, the set of "
"@code{.resources} files for an application must be specified when the "
"application is built and cannot be extended afterwards."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10521
msgid ""
"Plural handling: A message catalog in @code{.dll} format supports the plural "
"handling function @code{GetPluralString}.  Whereas @code{.resources} files "
"can only contain data and only support lookups that depend on a single "
"string."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10527
msgid ""
"Context handling: A message catalog in @code{.dll} format supports the "
"query-with-context functions @code{GetParticularString} and "
"@code{GetParticularPluralString}.  Whereas @code{.resources} files can only "
"contain data and only support lookups that depend on a single string."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10538
msgid ""
"The @code{GettextResourceManager} that loads the message catalogs in "
"@code{.dll} format also provides for inheritance on a per-message basis.  "
"For example, in Austrian (@code{de_AT}) locale, translations from the German "
"(@code{de}) message catalog will be used for messages not found in the "
"Austrian message catalog.  This has the consequence that the Austrian "
"translators need only translate those few messages for which the translation "
"into Austrian differs from the German one.  Whereas when working with "
"@code{.resources} files, each message catalog must provide the translations "
"of all messages by itself."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10545
msgid ""
"The @code{GettextResourceManager} that loads the message catalogs in "
"@code{.dll} format also provides for a fallback: The English @var{msgid} is "
"returned when no translation can be found.  Whereas when working with "
"@code{.resources} files, a language-neutral @code{.resources} file must "
"explicitly be provided as a fallback."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10551
msgid ""
"On the side of the programmatic APIs, the programmer can use either the "
"standard @code{ResourceManager} API and the GNU "
"@code{GettextResourceManager} API.  The latter is an extension of the "
"former, because @code{GettextResourceManager} is a subclass of "
"@code{ResourceManager}."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10555
msgid "The @code{System.Resources.ResourceManager} API."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10557
msgid "This API works with resources in @code{.resources} format."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10559 original_texis/gettext.texi:10577
msgid "The creation of the @code{ResourceManager} is done through"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10561
#, no-wrap
msgid "  new ResourceManager(domainname, Assembly.GetExecutingAssembly())\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10567
msgid ""
"The @code{GetString} function returns a string's translation.  Note that "
"this function returns null when a translation is missing (i.e.@: not even "
"found in the fallback resource file)."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10570
msgid "The @code{GNU.Gettext.GettextResourceManager} API."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10572
msgid "This API works with resources in @code{.dll} format."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10575
msgid ""
"Reference documentation is in the @uref{csharpdoc/index.html,csharpdoc "
"directory}."
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10579
#, no-wrap
msgid "  new GettextResourceManager(domainname)\n"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10583
msgid ""
"The @code{GetString} function returns a string's translation.  Note that "
"when a translation is missing, the @var{msgid} argument is returned "
"unchanged."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10586
msgid ""
"The @code{GetPluralString} function returns a string translation with plural "
"handling, like the @code{ngettext} function in C."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10591
msgid ""
"The @code{GetParticularString} function returns a string's translation, "
"specific to a particular context, like the @code{pgettext} function in C.  "
"Note that when a translation is missing, the @var{msgid} argument is "
"returned unchanged."
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10595
msgid ""
"The @code{GetParticularPluralString} function returns a string translation, "
"specific to a particular context, with plural handling, like the "
"@code{npgettext} function in C."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10596
#, no-wrap
msgid "@code{libintl} for C#"
msgstr ""

#. type: enumerate
#: original_texis/gettext.texi:10599
msgid ""
"To use this API, one needs the @code{GNU.Gettext.dll} file which is part of "
"the GNU gettext package and distributed under the LGPL."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10607
msgid ""
"You can also mix both approaches: use the "
"@code{GNU.Gettext.GettextResourceManager} constructor, but otherwise use "
"only the @code{ResourceManager} type and only the @code{GetString} method.  "
"This is appropriate when you want to profit from the tools for PO files, but "
"don't want to change an existing source code that uses "
"@code{ResourceManager} and don't (yet) need the @code{GetPluralString} "
"method."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10610
msgid ""
"Two examples, using the second API, are available in the @file{examples} "
"directory: @code{hello-csharp}, @code{hello-csharp-forms}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10613
msgid ""
"Now, to make use of the API and define a shorthand for @samp{GetString}, "
"there are two idioms that you can choose from:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10618
msgid ""
"In a unique class of your project, say @samp{Util}, define a static variable "
"holding the @code{ResourceManager} instance:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10622
#, no-wrap
msgid ""
"public static GettextResourceManager MyResourceManager =\n"
"  new GettextResourceManager(\"domain-name\");\n"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10629
#, no-wrap
msgid ""
"private static GettextResourceManager Res = Util.MyResourceManager;\n"
"private static String _(String s) @{ return Res.GetString(s); @}\n"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10636
#, no-wrap
msgid "Console.WriteLine(_(\"Operation completed.\"));\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:10641
msgid ""
"You add a class with a very short name, say @samp{S}, containing just the "
"definition of the resource manager and of the shorthand:"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10650
#, no-wrap
msgid ""
"public class S @{\n"
"  public static GettextResourceManager MyResourceManager =\n"
"    new GettextResourceManager(\"domain-name\");\n"
"  public static String _(String s) @{\n"
"     return MyResourceManager.GetString(s);\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: smallexample
#: original_texis/gettext.texi:10657
#, no-wrap
msgid "Console.WriteLine(S._(\"Operation completed.\"));\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10663
msgid ""
"Which of the two idioms you choose, will depend on whether copying two lines "
"of codes into every class is more acceptable in your project than a class "
"with a single-letter name."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10666
#, no-wrap
msgid "awk"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10672
msgid "gawk 3.1 or newer"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10680
msgid ""
"@code{awk}, @code{gawk}, @code{twjr}.  The file extension @code{twjr} is "
"used by TexiWeb Jr (@uref{https://github.com/arnoldrobbins/texiwebjr})."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10686
msgid "_\"abc\""
msgstr ""

#. type: table
#: original_texis/gettext.texi:10689
msgid "@code{dcgettext}, missing @code{dcngettext} in gawk-3.1.0"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10692
msgid "@code{TEXTDOMAIN} variable"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10698
msgid "automatic, but missing @code{setlocale (LC_MESSAGES, \"\")} in gawk-3.1.0"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10710
msgid "@code{printf \"%2$d %1$d\"} (GNU awk only)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10715
msgid ""
"On platforms without gettext, no translation.  On non-GNU awks, you must "
"define @code{dcgettext}, @code{dcngettext} and @code{bindtextdomain} "
"yourself."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10721
msgid "An example is available in the @file{examples} directory: @code{hello-gawk}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10725
#, no-wrap
msgid "Free Pascal"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10726
#, no-wrap
msgid "Object Pascal"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10731 original_texis/gettext.texi:12264
msgid "fpk"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10734
msgid "fp-compiler, fp-units-fcl"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10737
msgid "@code{pp}, @code{pas}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10746
msgid "---, use @code{ResourceString} data type instead"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10749 original_texis/gettext.texi:10752
msgid "---, use @code{TranslateResourceStrings} function instead"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10755
msgid "automatic, but uses only LANG, not LC_MESSAGES or LC_ALL"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10758
msgid "@code{@{$mode delphi@}} or @code{@{$mode objfpc@}}@*@code{uses gettext;}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10761
msgid "emulate partially"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10764
msgid "@code{ppc386} followed by @code{xgettext} or @code{rstconv}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10767
msgid "@code{uses sysutils;}@*@code{format \"%1:d %0:d\"}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10781
msgid ""
"The Pascal compiler has special support for the @code{ResourceString} data "
"type.  It generates a @code{.rst} file.  This is then converted to a "
"@code{.pot} file by use of @code{xgettext} or @code{rstconv}.  At runtime, a "
"@code{.mo} file corresponding to translations of this @code{.pot} file can "
"be loaded using the @code{TranslateResourceStrings} function in the "
"@code{gettext} unit."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10783
msgid ""
"An example is available in the @file{examples} directory: "
"@code{hello-pascal}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10786
#, no-wrap
msgid "@code{wxWidgets} library"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10791
msgid "wxGTK, gettext"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10794
msgid "libwxgtk3.0-dev"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10797
msgid "cpp"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10806
msgid "@code{wxLocale::GetString}, @code{wxGetTranslation}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10809
msgid "wxLocale::AddCatalog"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10812
msgid "wxLocale::AddCatalogLookupPathPrefix"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10815
msgid "@code{wxLocale::Init}, @code{wxSetLocale}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10818
msgid "#include <wx/intl.h>"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10821
msgid "emulate, see @code{include/wx/intl.h} and @code{src/common/intl.cpp}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10829
msgid ""
"wxString::Format supports positions if and only if the system has "
"@code{wprintf()}, @code{vswprintf()} functions and they support positions "
"according to POSIX."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10840
#, no-wrap
msgid "YaST2 scripting language"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10845
msgid "libycp, libycp-devel, yast2-core, yast2-core-devel"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10851
msgid "ycp"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10860
msgid "@code{_()} with 1 or 3 arguments"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10863
msgid "@code{textdomain} statement"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10881
msgid "sformat \"%2 %1\""
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10890
msgid "An example is available in the @file{examples} directory: @code{hello-ycp}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:10894
#, no-wrap
msgid "Tk's scripting language"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10899 original_texis/gettext.texi:10902 original_texis/gettext.texi:10905
msgid "tcl"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10911
msgid "[_ \"abc\"]"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10914
msgid "::msgcat::mc"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10920
msgid "---, use @code{::msgcat::mcload} instead"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10923
msgid "automatic, uses LANG, but ignores LC_MESSAGES and LC_ALL"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10927
msgid ""
"@code{package require msgcat} @*@code{proc _ @{s@} @{return [::msgcat::mc "
"$s]@}}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10930
msgid "---, uses a Tcl specific message catalog format"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10936
msgid "format \"%2\\$d %1\\$d\""
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10946
msgid ""
"Two examples are available in the @file{examples} directory: "
"@code{hello-tcl}, @code{hello-tcl-tk}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:10957
msgid ""
"Before marking strings as internationalizable, substitutions of variables "
"into the string need to be converted to @code{format} applications.  For "
"example, @code{\"file $filename not found\"} becomes @code{[format \"file %s "
"not found\" $filename]}.  Only after this is done, can the strings be marked "
"and extracted.  After marking, this example becomes @code{[format [_ \"file "
"%s not found\"] $filename]} or @code{[msgcat::mc \"file %s not found\" "
"$filename]}.  Note that the @code{msgcat::mc} function implicitly calls "
"@code{format} when more than one argument is given."
msgstr ""

#. type: table
#: original_texis/gettext.texi:10965
msgid "perl"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10968
msgid "perl, libintl-perl"
msgstr ""

#. type: table
#: original_texis/gettext.texi:10971
msgid "@code{pl}, @code{PL}, @code{pm}, @code{perl}, @code{cgi}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10979
#, no-wrap
msgid "qq (abc)"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10981
#, no-wrap
msgid "q (abc)"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10983
#, no-wrap
msgid "qr /abc/"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10985
#, no-wrap
msgid "qx (/bin/date)"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10987
#, no-wrap
msgid "/pattern match/"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10989
#, no-wrap
msgid "?pattern match?"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10991
#, no-wrap
msgid "s/substitution/operators/"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10993
#, no-wrap
msgid "$tied_hash@{\"message\"@}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:10995
#, no-wrap
msgid "$tied_hash_reference->@{\"message\"@}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:10997
#, no-wrap
msgid "etc., issue the command @samp{man perlsyn} for details"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11003
msgid "@code{__} (double underscore)"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11009
msgid ""
"@code{gettext}, @code{dgettext}, @code{dcgettext}, @code{ngettext}, "
"@code{dngettext}, @code{dcngettext}, @code{pgettext}, @code{dpgettext}, "
"@code{dcpgettext}, @code{npgettext}, @code{dnpgettext}, @code{dcnpgettext}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11016
#, no-wrap
msgid "bind_textdomain_codeset"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11018
msgid "@code{bind_textdomain_codeset} function"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11021
msgid "Use @code{setlocale (LC_ALL, \"\");}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11027
msgid ""
"@code{use POSIX;} @*@code{use Locale::TextDomain;} (included in the package "
"libintl-perl which is available on the Comprehensive Perl Archive Network "
"CPAN, https://www.cpan.org/)."
msgstr ""

#. type: table
#: original_texis/gettext.texi:11030
msgid "platform dependent: gettext_pp emulates, gettext_xs uses GNU gettext"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11034
msgid ""
"xgettext -k__ -k\\$__ -k%__ -k__x -k__n:1,2 -k__nx:1,2 -k__xn:1,2 -kN__ "
"-kN__n:1,2 -k__p:1c,2 -k__np:1c,2,3 -kN__p:1c,2 -kN__np:1c,2,3"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11039
msgid ""
"Both kinds of format strings support formatting with positions.  "
"@*@code{printf \"%2\\$d %1\\$d\", ...} (requires Perl 5.8.0 or newer)  "
"@*@code{__expand(\"[new] replaces [old]\", old => $oldvalue, new => "
"$newvalue)}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11045
msgid ""
"The @code{libintl-perl} package is platform independent but is not part of "
"the Perl core.  The programmer is responsible for providing a dummy "
"implementation of the required functions if the package is not installed on "
"the target system."
msgstr ""

#. type: item
#: original_texis/gettext.texi:11049
#, no-wrap
msgid "Documentation"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11052
msgid "Included in @code{libintl-perl}, available on CPAN (https://www.cpan.org/)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11056
msgid "An example is available in the @file{examples} directory: @code{hello-perl}."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11057
#, no-wrap
msgid "marking Perl sources"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11065
msgid ""
"The @code{xgettext} parser backend for Perl differs significantly from the "
"parser backends for other programming languages, just as Perl itself differs "
"significantly from other programming languages.  The Perl parser backend "
"offers many more string marking facilities than the other backends but it "
"also has some Perl specific limitations, the worst probably being its "
"imperfectness."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11084
msgid ""
"It is often heard that only Perl can parse Perl.  This is not true.  Perl "
"cannot be @emph{parsed} at all, it can only be @emph{executed}.  Perl has "
"various built-in ambiguities that can only be resolved at runtime."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11086
msgid "The following example may illustrate one common problem:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11089 original_texis/gettext.texi:11363
#, no-wrap
msgid "print gettext \"Hello World!\";\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11093
msgid ""
"Although this example looks like a bullet-proof case of a function "
"invocation, it is not:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11097
#, no-wrap
msgid ""
"open gettext, \">testfile\" or die;\n"
"print gettext \"Hello world!\"\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11101
msgid ""
"In this context, the string @code{gettext} looks more like a file handle.  "
"But not necessarily:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11106
#, no-wrap
msgid ""
"use Locale::Messages qw (:libintl_h);\n"
"open gettext \">testfile\" or die;\n"
"print gettext \"Hello world!\";\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11112
msgid ""
"Now, the file is probably syntactically incorrect, provided that the module "
"@code{Locale::Messages} found first in the Perl include path exports a "
"function @code{gettext}.  But what if the module @code{Locale::Messages} "
"really looks like this?"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11115
#, no-wrap
msgid ""
"use vars qw (*gettext);\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11117
#, no-wrap
msgid "1;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11123
msgid ""
"In this case, the string @code{gettext} will be interpreted as a file handle "
"again, and the above example will create a file @file{testfile} and write "
"the string ``Hello world!'' into it.  Even advanced control flow analysis "
"will not really help:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11131
#, no-wrap
msgid ""
"if (0.5 < rand) @{\n"
"   eval \"use Sane\";\n"
"@} else @{\n"
"   eval \"use InSane\";\n"
"@}\n"
"print gettext \"Hello world!\";\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11140
msgid ""
"If the module @code{Sane} exports a function @code{gettext} that does what "
"we expect, and the module @code{InSane} opens a file for writing and "
"associates the @emph{handle} @code{gettext} with this output stream, we are "
"clueless again about what will happen at runtime.  It is completely "
"unpredictable.  The truth is that Perl has so many ways to fill its symbol "
"table at runtime that it is impossible to interpret a particular piece of "
"code without executing it."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11144
msgid ""
"Of course, @code{xgettext} will not execute your Perl sources while scanning "
"for translatable strings, but rather use heuristics in order to guess what "
"you meant."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11147
msgid ""
"Another problem is the ambiguity of the slash and the question mark.  Their "
"interpretation depends on the context:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11151
#, no-wrap
msgid ""
"# A pattern match.\n"
"print \"OK\\n\" if /foobar/;\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11154
#, no-wrap
msgid ""
"# A division.\n"
"print 1 / 2;\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11157
#, no-wrap
msgid ""
"# Another pattern match.\n"
"print \"OK\\n\" if ?foobar?;\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11160
#, no-wrap
msgid ""
"# Conditional.\n"
"print $x ? \"foo\" : \"bar\";\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11175
msgid ""
"The slash may either act as the division operator or introduce a pattern "
"match, whereas the question mark may act as the ternary conditional operator "
"or as a pattern match, too.  Other programming languages like @code{awk} "
"present similar problems, but the consequences of a misinterpretation are "
"particularly nasty with Perl sources.  In @code{awk} for instance, a "
"statement can never exceed one line and the parser can recover from a "
"parsing error at the next newline and interpret the rest of the input stream "
"correctly.  Perl is different, as a pattern match is terminated by the next "
"appearance of the delimiter (the slash or the question mark) in the input "
"stream, regardless of the semantic context.  If a slash is really a division "
"sign but mis-interpreted as a pattern match, the rest of the input file is "
"most probably parsed incorrectly."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11177
msgid "There are certain cases, where the ambiguity cannot be resolved at all:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11180
#, no-wrap
msgid "$x = wantarray ? 1 : 0;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11185
msgid ""
"The Perl built-in function @code{wantarray} does not accept any arguments.  "
"The Perl parser therefore knows that the question mark does not start a "
"regular expression but is the ternary conditional operator."
msgstr ""

#. type: example
#: original_texis/gettext.texi:11189
#, no-wrap
msgid ""
"sub wantarrays @{@}\n"
"$x = wantarrays ? 1 : 0;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11195
msgid ""
"Now the situation is different.  The function @code{wantarrays} takes a "
"variable number of arguments (like any non-prototyped Perl function).  The "
"question mark is now the delimiter of a pattern match, and hence the piece "
"of code does not compile."
msgstr ""

#. type: example
#: original_texis/gettext.texi:11199
#, no-wrap
msgid ""
"sub wantarrays() @{@}\n"
"$x = wantarrays ? 1 : 0;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11204
msgid ""
"Now the function is prototyped, Perl knows that it does not accept any "
"arguments, and the question mark is therefore interpreted as the ternaray "
"operator again.  But that unfortunately outsmarts @code{xgettext}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11217
msgid ""
"The Perl parser in @code{xgettext} cannot know whether a function has a "
"prototype and what that prototype would look like.  It therefore makes an "
"educated guess.  If a function is known to be a Perl built-in and this "
"function does not accept any arguments, a following question mark or slash "
"is treated as an operator, otherwise as the delimiter of a following regular "
"expression.  The Perl built-ins that do not accept arguments are "
"@code{wantarray}, @code{fork}, @code{time}, @code{times}, @code{getlogin}, "
"@code{getppid}, @code{getpwent}, @code{getgrent}, @code{gethostent}, "
"@code{getnetent}, @code{getprotoent}, @code{getservent}, @code{setpwent}, "
"@code{setgrent}, @code{endpwent}, @code{endgrent}, @code{endhostent}, "
"@code{endnetent}, @code{endprotoent}, and @code{endservent}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11224
msgid ""
"If you find that @code{xgettext} fails to extract strings from portions of "
"your sources, you should therefore look out for slashes and/or question "
"marks preceding these sections.  You may have come across a bug in "
"@code{xgettext}'s Perl parser (and of course you should report that bug).  "
"In the meantime you should consider to reformulate your code in a manner "
"less challenging to @code{xgettext}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11227
msgid ""
"In particular, if the parser is too dumb to see that a function does not "
"accept arguments, use parentheses:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11231
#, no-wrap
msgid ""
"$x = somefunc() ? 1 : 0;\n"
"$y = (somefunc) ? 1 : 0;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11235
msgid ""
"In fact the Perl parser itself has similar problems and warns you about such "
"constructs."
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:11237
#, no-wrap
msgid "Which keywords will xgettext look for?"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11238
#, no-wrap
msgid "Perl default keywords"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11243
msgid ""
"Unless you instruct @code{xgettext} otherwise by invoking it with one of the "
"options @code{--keyword} or @code{-k}, it will recognize the following "
"keywords in your Perl sources:"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11248
#, no-wrap
msgid "dgettext:2"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11251 original_texis/gettext.texi:11255
msgid "The second argument will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11252
#, no-wrap
msgid "dcgettext:2"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11256
#, no-wrap
msgid "ngettext:1,2"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11260
msgid "The first (singular) and the second (plural) argument will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11261
#, no-wrap
msgid "dngettext:2,3"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11265 original_texis/gettext.texi:11270
msgid "The second (singular) and the third (plural) argument will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11266
#, no-wrap
msgid "dcngettext:2,3"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11271
#, no-wrap
msgid "pgettext:1c,2"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11274
msgid "The first (message context) and the second argument will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11275
#, no-wrap
msgid "dpgettext:2c,3"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11278 original_texis/gettext.texi:11282
msgid "The second (message context) and the third argument will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11279
#, no-wrap
msgid "dcpgettext:2c,3"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11283
#, no-wrap
msgid "npgettext:1c,2,3"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11287
msgid ""
"The first (message context), second (singular), and third (plural)  argument "
"will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11288
#, no-wrap
msgid "dnpgettext:2c,3,4"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11292 original_texis/gettext.texi:11297
msgid ""
"The second (message context), third (singular), and fourth (plural)  "
"argument will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11293
#, no-wrap
msgid "dcnpgettext:2c,3,4"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11298
#, no-wrap
msgid "gettext_noop"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11300
#, no-wrap
msgid "%gettext"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11303
msgid "The keys of lookups into the hash @code{%gettext} will be extracted."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11304
#, no-wrap
msgid "$gettext"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11307
msgid ""
"The keys of lookups into the hash reference @code{$gettext} will be "
"extracted."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11312
#, no-wrap
msgid "Perl special keywords for hash-lookups"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11318
msgid ""
"Translating messages at runtime is normally performed by looking up the "
"original string in the translation database and returning the translated "
"version.  The ``natural'' Perl implementation is a hash lookup, and, of "
"course, @code{xgettext} supports such practice."
msgstr ""

#. type: example
#: original_texis/gettext.texi:11324
#, no-wrap
msgid ""
"print __\"Hello world!\";\n"
"print $__@{\"Hello world!\"@};\n"
"print $__->@{\"Hello world!\"@};\n"
"print $$__@{\"Hello world!\"@};\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11330
msgid ""
"The above four lines all do the same thing.  The Perl module "
"@code{Locale::TextDomain} exports by default a hash @code{%__} that is tied "
"to the function @code{__()}.  It also exports a reference @code{$__} to "
"@code{%__}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11336
msgid ""
"If an argument to the @code{xgettext} option @code{--keyword}, "
"resp. @code{-k} starts with a percent sign, the rest of the keyword is "
"interpreted as the name of a hash.  If it starts with a dollar sign, the "
"rest of the keyword is interpreted as a reference to a hash."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11339
msgid ""
"Note that you can omit the quotation marks (single or double) around the "
"hash key (almost) whenever Perl itself allows it:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11342
#, no-wrap
msgid "print $gettext@{Error@};\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11349
msgid ""
"The exact rule is: You can omit the surrounding quotes, when the hash key is "
"a valid C (!) identifier, i.e.@: when it starts with an underscore or an "
"ASCII letter and is followed by an arbitrary number of underscores, ASCII "
"letters or digits.  Other Unicode characters are @emph{not} allowed, "
"regardless of the @code{use utf8} pragma."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11352
#, no-wrap
msgid "Perl quote-like expressions"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11357
msgid ""
"Perl offers a plethora of different string constructs.  Those that can be "
"used either as arguments to functions or inside braces for hash lookups are "
"generally supported by @code{xgettext}."
msgstr ""

#. type: strong{#1}
#: original_texis/gettext.texi:11359
#, no-wrap
msgid "double-quoted strings"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11361 original_texis/gettext.texi:11367 original_texis/gettext.texi:11373 original_texis/gettext.texi:11384 original_texis/gettext.texi:11395 original_texis/gettext.texi:11412
msgid "@*"
msgstr ""

#. type: strong{#1}
#: original_texis/gettext.texi:11365
#, no-wrap
msgid "single-quoted strings"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11369
#, no-wrap
msgid "print gettext 'Hello World!';\n"
msgstr ""

#. type: strong{#1}
#: original_texis/gettext.texi:11371
#, no-wrap
msgid "the operator qq"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11376
#, no-wrap
msgid ""
"print gettext qq |Hello World!|;\n"
"print gettext qq <E-mail: <guido\\@@imperia.net>>;\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11381
msgid ""
"The operator @code{qq} is fully supported.  You can use arbitrary "
"delimiters, including the four bracketing delimiters (round, angle, square, "
"curly) that nest."
msgstr ""

#. type: strong{#1}
#: original_texis/gettext.texi:11382
#, no-wrap
msgid "the operator q"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11387
#, no-wrap
msgid ""
"print gettext q |Hello World!|;\n"
"print gettext q <E-mail: <guido@@imperia.net>>;\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11392
msgid ""
"The operator @code{q} is fully supported.  You can use arbitrary delimiters, "
"including the four bracketing delimiters (round, angle, square, curly) that "
"nest."
msgstr ""

#. type: strong{#1}
#: original_texis/gettext.texi:11393
#, no-wrap
msgid "the operator qx"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11398
#, no-wrap
msgid ""
"print gettext qx ;LANGUAGE=C /bin/date;\n"
"print gettext qx [/usr/bin/ls | grep '^[A-Z]*'];\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11403
msgid ""
"The operator @code{qx} is fully supported.  You can use arbitrary "
"delimiters, including the four bracketing delimiters (round, angle, square, "
"curly) that nest."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11409
msgid ""
"The example is actually a useless use of @code{gettext}.  It will invoke the "
"@code{gettext} function on the output of the command specified with the "
"@code{qx} operator.  The feature was included in order to make the interface "
"consistent (the parser will extract all strings and quote-like expressions)."
msgstr ""

#. type: strong{#1}
#: original_texis/gettext.texi:11410
#, no-wrap
msgid "here documents"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11417
#, no-wrap
msgid ""
"print gettext <<'EOF';\n"
"program not found in $PATH\n"
"EOF\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11423
#, no-wrap
msgid ""
"print ngettext <<EOF, <<\"EOF\";\n"
"one file deleted\n"
"EOF\n"
"several files deleted\n"
"EOF\n"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11429
msgid ""
"Here-documents are recognized.  If the delimiter is enclosed in single "
"quotes, the string is not interpolated.  If it is enclosed in double quotes "
"or has no quotes at all, the string is interpolated."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11431
msgid "Delimiters that start with a digit are not supported!"
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:11435
#, no-wrap
msgid "Invalid Uses Of String Interpolation"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11436
#, no-wrap
msgid "Perl invalid string interpolation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11441
msgid ""
"Perl is capable of interpolating variables into strings.  This offers some "
"nice features in localized programs but can also lead to problems."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11443
msgid "A common error is a construct like the following:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11446
#, no-wrap
msgid "print gettext \"This is the program $0!\\n\";\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11458
msgid ""
"Perl will interpolate at runtime the value of the variable @code{$0} into "
"the argument of the @code{gettext()} function.  Hence, this argument is not "
"a string constant but a variable argument (@code{$0} is a global variable "
"that holds the name of the Perl script being executed).  The interpolation "
"is performed by Perl before the string argument is passed to "
"@code{gettext()} and will therefore depend on the name of the script which "
"can only be determined at runtime.  Consequently, it is almost impossible "
"that a translation can be looked up at runtime (except if, by accident, the "
"interpolated string is found in the message catalog)."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11464
msgid ""
"The @code{xgettext} program will therefore terminate parsing with a fatal "
"error if it encounters a variable inside of an extracted string.  In "
"general, this will happen for all kinds of string interpolations that cannot "
"be safely performed at compile time.  If you absolutely know what you are "
"doing, you can always circumvent this behavior:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11468
#, no-wrap
msgid ""
"my $know_what_i_am_doing = \"This is program $0!\\n\";\n"
"print gettext $know_what_i_am_doing;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11474
msgid ""
"Since the parser only recognizes strings and quote-like expressions, but not "
"variables or other terms, the above construct will be accepted.  You will "
"have to find another way, however, to let your original string make it into "
"your message catalog."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11479
msgid ""
"If invoked with the option @code{--extract-all}, resp. @code{-a}, variable "
"interpolation will be accepted.  Rationale: You will generally use this "
"option in order to prepare your sources for internationalization."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11484
msgid ""
"Please see the manual page @samp{man perlop} for details of strings and "
"quote-like expressions that are subject to interpolation and those that are "
"not.  Safe interpolations (that will not lead to a fatal error) are:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11487
#, no-wrap
msgid "the escape sequences @code{\\t} (tab, HT, TAB), @code{\\n}"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11491
msgid ""
"(newline, NL), @code{\\r} (return, CR), @code{\\f} (form feed, FF), "
"@code{\\b} (backspace, BS), @code{\\a} (alarm, bell, BEL), and @code{\\e} "
"(escape, ESC)."
msgstr ""

#. type: item
#: original_texis/gettext.texi:11492
#, no-wrap
msgid "octal chars, like @code{\\033}"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11496
msgid ""
"@* Note that octal escapes in the range of 400-777 are translated into a "
"UTF-8 representation, regardless of the presence of the @code{use utf8} "
"pragma."
msgstr ""

#. type: item
#: original_texis/gettext.texi:11497
#, no-wrap
msgid "hex chars, like @code{\\x1b}"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11499
#, no-wrap
msgid "wide hex chars, like @code{\\x@{263a@}}"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:11503 original_texis/gettext.texi:11510
msgid ""
"@* Note that this escape is translated into a UTF-8 representation, "
"regardless of the presence of the @code{use utf8} pragma."
msgstr ""

#. type: item
#: original_texis/gettext.texi:11504
#, no-wrap
msgid "control chars, like @code{\\c[} (CTRL-[)"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11506
#, no-wrap
msgid "named Unicode chars, like @code{\\N@{LATIN CAPITAL LETTER C WITH CEDILLA@}}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11513
msgid "The following escapes are considered partially safe:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11516
#, no-wrap
msgid "@code{\\l} lowercase next char"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11518
#, no-wrap
msgid "@code{\\u} uppercase next char"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11520
#, no-wrap
msgid "@code{\\L} lowercase till \\E"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11522
#, no-wrap
msgid "@code{\\U} uppercase till \\E"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11524
#, no-wrap
msgid "@code{\\E} end case modification"
msgstr ""

#. type: item
#: original_texis/gettext.texi:11526
#, no-wrap
msgid "@code{\\Q} quote non-word characters till \\E"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11535
msgid ""
"These escapes are only considered safe if the string consists of ASCII "
"characters only.  Translation of characters outside the range defined by "
"ASCII is locale-dependent and can actually only be performed at runtime; "
"@code{xgettext} doesn't do these locale-dependent translations at extraction "
"time."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11540
msgid ""
"Except for the modifier @code{\\Q}, these translations, albeit valid, are "
"generally useless and only obfuscate your sources.  If a translation can be "
"safely performed at compile time you can just as well write what you mean."
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:11542
#, no-wrap
msgid "Valid Uses Of String Interpolation"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11543
#, no-wrap
msgid "Perl valid string interpolation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11548
msgid ""
"Perl is often used to generate sources for other programming languages or "
"arbitrary file formats.  Web applications that output HTML code make a "
"prominent example for such usage."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11552
msgid ""
"You will often come across situations where you want to intersperse code "
"written in the target (programming) language with translatable messages, "
"like in the following HTML example:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11562
#, no-wrap
msgid ""
"print gettext <<EOF;\n"
"<h1>My Homepage</h1>\n"
"<script language=\"JavaScript\"><!--\n"
"for (i = 0; i < 100; ++i) @{\n"
"    alert (\"Thank you so much for visiting my homepage!\");\n"
"@}\n"
"//--></script>\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11570
msgid ""
"The parser will extract the entire here document, and it will appear "
"entirely in the resulting PO file, including the JavaScript snippet embedded "
"in the HTML code.  If you exaggerate with constructs like the above, you "
"will run the risk that the translators of your package will look out for a "
"less challenging project.  You should consider an alternative expression "
"here:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11580
#, no-wrap
msgid ""
"print <<EOF;\n"
"<h1>$gettext@{\"My Homepage\"@}</h1>\n"
"<script language=\"JavaScript\"><!--\n"
"for (i = 0; i < 100; ++i) @{\n"
"    alert (\"$gettext@{'Thank you so much for visiting my homepage!'@}\");\n"
"@}\n"
"//--></script>\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11584
msgid ""
"Only the translatable portions of the code will be extracted here, and the "
"resulting PO file will begrudgingly improve in terms of readability."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11588
msgid ""
"You can interpolate hash lookups in all strings or quote-like expressions "
"that are subject to interpolation (see the manual page @samp{man perlop} for "
"details).  Double interpolation is invalid, however:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11592
#, no-wrap
msgid ""
"# TRANSLATORS: Replace \"the earth\" with the name of your planet.\n"
"print gettext qq@{Welcome to $gettext->@{\"the earth\"@}@};\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11598
msgid ""
"The @code{qq}-quoted string is recognized as an argument to @code{xgettext} "
"in the first place, and checked for invalid variable interpolation.  The "
"dollar sign of hash-dereferencing will therefore terminate the parser with "
"an ``invalid interpolation'' error."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11600
msgid "It is valid to interpolate hash lookups in regular expressions:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11606
#, no-wrap
msgid ""
"if ($var =~ /$gettext@{\"the earth\"@}/) @{\n"
"   print gettext \"Match!\\n\";\n"
"@}\n"
"s/$gettext@{\"U. S. A.\"@}/$gettext@{\"U. S. A.\"@} $gettext@{\"(dial "
"+0)\"@}/g;\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11610
#, no-wrap
msgid "Perl parentheses"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11618
msgid ""
"In Perl, parentheses around function arguments are mostly optional.  "
"@code{xgettext} will always assume that all recognized keywords (except for "
"hashes and hash references) are names of properly prototyped functions, and "
"will (hopefully) only require parentheses where Perl itself requires them.  "
"All constructs in the following example are therefore ok to use:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11625
#, no-wrap
msgid ""
"print gettext (\"Hello World!\\n\");\n"
"print gettext \"Hello World!\\n\";\n"
"print dgettext ($package => \"Hello World!\\n\");\n"
"print dgettext $package, \"Hello World!\\n\";\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11629
#, no-wrap
msgid ""
"# The \"fat comma\" => turns the left-hand side argument into a\n"
"# single-quoted string!\n"
"print dgettext smellovision => \"Hello World!\\n\";\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11644
#, no-wrap
msgid ""
"# The following assignment only works with prototyped functions.\n"
"# Otherwise, the functions will act as \"greedy\" list operators and\n"
"# eat up all following arguments.\n"
"my $anonymous_hash = @{\n"
"   planet => gettext \"earth\",\n"
"   cakes => ngettext \"one cake\", \"several cakes\", $n,\n"
"   still => $works,\n"
"@};\n"
"# The same without fat comma:\n"
"my $other_hash = @{\n"
"   'planet', gettext \"earth\",\n"
"   'cakes', ngettext \"one cake\", \"several cakes\", $n,\n"
"   'still', $works,\n"
"@};\n"
"\n"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11647
#, no-wrap
msgid ""
"# Parentheses are only significant for the first argument.\n"
"print dngettext 'package', (\"one cake\", \"several cakes\", $n), "
"$discarded;\n"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11652
#, no-wrap
msgid "Perl long lines"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11659
msgid ""
"The necessity of long messages can often lead to a cumbersome or unreadable "
"coding style.  Perl has several options that may prevent you from writing "
"unreadable code, and @code{xgettext} does its best to do likewise.  This is "
"where the dot operator (the string concatenation operator) may come in "
"handy:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11667
#, no-wrap
msgid ""
"print gettext (\"This is a very long\"\n"
"               . \" message that is still\"\n"
"               . \" readable, because\"\n"
"               . \" it is split into\"\n"
"               . \" multiple lines.\\n\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11674
msgid ""
"Perl is smart enough to concatenate these constant string fragments into one "
"long string at compile time, and so is @code{xgettext}.  You will only find "
"one long message in the resulting POT file."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11679
msgid ""
"Note that the future Perl 6 will probably use the underscore (@samp{_}) as "
"the string concatenation operator, and the dot (@samp{.}) for "
"dereferencing.  This new syntax is not yet supported by @code{xgettext}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11683
msgid ""
"If embedded newline characters are not an issue, or even desired, you may "
"also insert newline characters inside quoted strings wherever you feel like "
"it:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11691
#, no-wrap
msgid ""
"print gettext (\"<em>In HTML output\n"
"embedded newlines are generally no\n"
"problem, since adjacent whitespace\n"
"is always rendered into a single\n"
"space character.</em>\");\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11695
msgid "You may also consider to use here documents:"
msgstr ""

#. type: group
#: original_texis/gettext.texi:11705
#, no-wrap
msgid ""
"print gettext <<EOF;\n"
"<em>In HTML output\n"
"embedded newlines are generally no\n"
"problem, since adjacent whitespace\n"
"is always rendered into a single\n"
"space character.</em>\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11711
msgid ""
"Please do not forget that the line breaks are real, i.e.@: they translate "
"into newline characters that will consequently show up in the resulting POT "
"file."
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:11713
#, no-wrap
msgid "Bugs, Pitfalls, And Things That Do Not Work"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:11714
#, no-wrap
msgid "Perl pitfalls"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11720
msgid ""
"The foregoing sections should have proven that @code{xgettext} is quite "
"smart in extracting translatable strings from Perl sources.  Yet, some more "
"or less exotic constructs that could be expected to work, actually do not "
"work."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11724
msgid ""
"One of the more relevant limitations can be found in the implementation of "
"variable interpolation inside quoted strings.  Only simple hash lookups can "
"be used there:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11733
#, no-wrap
msgid ""
"print <<EOF;\n"
"$gettext@{\"The dot operator\"\n"
"          . \" does not work\"\n"
"          . \"here!\"@}\n"
"Likewise, you cannot @@@{[ gettext (\"interpolate function calls\") ]@}\n"
"inside quoted strings or quote-like expressions.\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11739
msgid ""
"This is valid Perl code and will actually trigger invocations of the "
"@code{gettext} function at runtime.  Yet, the Perl parser in @code{xgettext} "
"will fail to recognize the strings.  A less obvious example can be found in "
"the interpolation of regular expressions:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11742
#, no-wrap
msgid "s/<!--START_OF_WEEK-->/gettext (\"Sunday\")/e;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11749
msgid ""
"The modifier @code{e} will cause the substitution to be interpreted as an "
"evaluable statement.  Consequently, at runtime the function @code{gettext()} "
"is called, but again, the parser fails to extract the string ``Sunday''.  "
"Use a temporary variable as a simple workaround if you really happen to need "
"this feature:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11753
#, no-wrap
msgid ""
"my $sunday = gettext \"Sunday\";\n"
"s/<!--START_OF_WEEK-->/$sunday/;\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11756
msgid "Hash slices would also be handy but are not recognized:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11763
#, no-wrap
msgid ""
"my @@weekdays = @@gettext@{'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n"
"                        'Thursday', 'Friday', 'Saturday'@};\n"
"# Or even:\n"
"@@weekdays = @@gettext@{qw (Sunday Monday Tuesday Wednesday Thursday\n"
"                         Friday Saturday) @};\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11767
msgid ""
"This is perfectly valid usage of the tied hash @code{%gettext} but the "
"strings are not recognized and therefore will not be extracted."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11772
msgid ""
"Another caveat of the current version is its rudimentary support for "
"non-ASCII characters in identifiers.  You may encounter serious problems if "
"you use identifiers with characters outside the range of 'A'-'Z', 'a'-'z', "
"'0'-'9' and the underscore '_'."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11776
msgid ""
"Maybe some of these missing features will be implemented in future versions, "
"but since you can always make do without them at minimal effort, these todos "
"have very low priority."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11780
msgid ""
"A nasty problem are brace format strings that already contain braces as part "
"of the normal text, for example the usage strings typically encountered in "
"programs:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11783
#, no-wrap
msgid "die \"usage: $0 @{OPTIONS@} FILENAME...\\n\";\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11787
msgid ""
"If you want to internationalize this code with Perl brace format strings, "
"you will run into a problem:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11790
#, no-wrap
msgid ""
"die __x (\"usage: @{program@} @{OPTIONS@} FILENAME...\\n\", program => "
"$0);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11796
msgid ""
"Whereas @samp{@{program@}} is a placeholder, @samp{@{OPTIONS@}} is not and "
"should probably be translated. Yet, there is no way to teach the Perl parser "
"in @code{xgettext} to recognize the first one, and leave the other one "
"alone."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11804
msgid ""
"There are two possible work-arounds for this problem.  If you are sure that "
"your program will run under Perl 5.8.0 or newer (these Perl versions handle "
"positional parameters in @code{printf()}) or if you are sure that the "
"translator will not have to reorder the arguments in her translation -- for "
"example if you have only one brace placeholder in your string, or if it "
"describes a syntax, like in this one --, you can mark the string as "
"@code{no-perl-brace-format} and use @code{printf()}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11808
#, no-wrap
msgid ""
"# xgettext: no-perl-brace-format\n"
"die sprintf (\"usage: %s @{OPTIONS@} FILENAME...\\n\", $0);\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11812
msgid ""
"If you want to use the more portable Perl brace format, you will have to do "
"put placeholders in place of the literal braces:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:11816
#, no-wrap
msgid ""
"die __x (\"usage: @{program@} @{[@}OPTIONS@{]@} FILENAME...\\n\",\n"
"         program => $0, '[' => '@{', ']' => '@}');\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11824
msgid ""
"Perl brace format strings know no escaping mechanism.  No matter how this "
"escaping mechanism looked like, it would either give the programmer a hard "
"time, make translating Perl brace format strings heavy-going, or result in a "
"performance penalty at runtime, when the format directives get executed.  "
"Most of the time you will happily get along with @code{printf()} for this "
"special case."
msgstr ""

#. type: table
#: original_texis/gettext.texi:11832
msgid "mod_php4, mod_php4-core, phpdoc"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11835
msgid "php"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11838
msgid "@code{php}, @code{php3}, @code{php4}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11841
msgid "@code{\"abc\"}, @code{'abc'}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11848
msgid ""
"@code{gettext}, @code{dgettext}, @code{dcgettext}; starting with PHP 4.2.0 "
"also @code{ngettext}, @code{dngettext}, @code{dcngettext}"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11869
msgid "printf \"%2\\$d %1\\$d\""
msgstr ""

#. type: table
#: original_texis/gettext.texi:11872 original_texis/gettext.texi:11925 original_texis/gettext.texi:12048 original_texis/gettext.texi:12107
msgid "On platforms without gettext, the functions are not available."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:11878
msgid "An example is available in the @file{examples} directory: @code{hello-php}."
msgstr ""

#. type: table
#: original_texis/gettext.texi:11886
msgid "roxen"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11889
msgid "pike8.0 or pike7.8"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11892
msgid "pike"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11901
msgid "@code{gettext}, @code{dgettext}, @code{dcgettext}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11910
msgid "@code{setlocale} function"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11913
msgid "import Locale.Gettext;"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11937 original_texis/gettext.texi:11940
msgid "gcc"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11943
msgid "@code{c}, @code{h}."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11965
msgid "#include \"intl.h\""
msgstr ""

#. type: table
#: original_texis/gettext.texi:11977
msgid "Uses autoconf macros"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:11988 original_texis/gettext.texi:12000
msgid "lua"
msgstr ""

#. type: table
#: original_texis/gettext.texi:11997
msgid ""
"lua, lua-gettext @* You need to install the @code{lua-gettext} package from "
"@url{https://gitlab.com/sukhichev/lua-gettext/blob/master/README.us.md}.  "
"Debian and Ubuntu packages of it are available.  Download the appropriate "
"one, and install it through @samp{sudo dpkg -i lua-gettext_0.0_amd64.deb}."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12008
#, no-wrap
msgid "[[abc]]"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12010
#, no-wrap
msgid "[=[abc]=]"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12012
#, no-wrap
msgid "[==[abc]==]"
msgstr ""

#. type: item
#: original_texis/gettext.texi:12014
#, no-wrap
msgid "..."
msgstr ""

#. type: table
#: original_texis/gettext.texi:12024
msgid ""
"@code{gettext.gettext}, @code{gettext.dgettext}, @code{gettext.dcgettext}, "
"@code{gettext.ngettext}, @code{gettext.dngettext}, @code{gettext.dcngettext}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12036
msgid ""
"@code{require 'gettext'} or running lua interpreter with @code{-l gettext} "
"option"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12059 original_texis/gettext.texi:12065
msgid "js"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12062
msgid "gjs"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12073
#, no-wrap
msgid "`abc`"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12083
msgid ""
"@code{gettext}, @code{dgettext}, @code{dcgettext}, @code{ngettext}, "
"@code{dngettext}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12098
msgid "use, or emulate"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12118 original_texis/gettext.texi:12124
msgid "vala"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12121
msgid "valac"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12130
#, no-wrap
msgid "\"\"\"abc\"\"\""
msgstr ""

#. type: table
#: original_texis/gettext.texi:12140
msgid ""
"@code{gettext}, @code{dgettext}, @code{dcgettext}, @code{ngettext}, "
"@code{dngettext}, @code{dpgettext}, @code{dpgettext2}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12143
msgid "@code{textdomain} function, defined under the @code{Intl} namespace"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12146
msgid "@code{bindtextdomain} function, defined under the @code{Intl} namespace"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12149
msgid "Programmer must call @code{Intl.setlocale (LocaleCategory.ALL, \"\")}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12161
msgid "Same as for the C language."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12214
msgid ""
"While the GNU gettext tools deal mainly with POT and PO files, they can also "
"manipulate a couple of other data formats."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12225
msgid ""
"Here is a list of other data formats which can be internationalized using "
"GNU gettext."
msgstr ""

#. type: table
#: original_texis/gettext.texi:12247
msgid "@code{pot}, @code{po}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12255
#, no-wrap
msgid "RSJ"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12260
msgid ""
"RST is the format of resource string table files of the Free Pascal compiler "
"versions older than 3.0.0.  RSJ is the new format of resource string table "
"files, created by the Free Pascal compiler version 3.0.0 or newer."
msgstr ""

#. type: table
#: original_texis/gettext.texi:12267
msgid "fp-compiler"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12270
msgid "@code{rst}, @code{rsj}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12273
msgid "@code{xgettext}, @code{rstconv}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12281
msgid "glade, libglade, glade2, libglade2, intltool"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12284
msgid "glade, libglade2-dev, intltool"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12287
msgid "@code{glade}, @code{glade2}, @code{ui}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12290
msgid ""
"@code{xgettext}, @code{libglade-xgettext}, @code{xml-i18n-extract}, "
"@code{intltool-extract}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12298
msgid "glib2"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12301
msgid "libglib2.0-dev"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12304
msgid "gschema.xml"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12307
msgid "@code{xgettext}, @code{intltool-extract}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12314
msgid ""
"This file format is specified in "
"@url{https://www.freedesktop.org/software/appstream/docs/}."
msgstr ""

#. type: table
#: original_texis/gettext.texi:12318
msgid "appdata-tools, appstream, libappstream-glib, libappstream-glib-builder"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12321
msgid "appdata-tools, appstream, libappstream-glib-dev"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12324
msgid "@code{appdata.xml}, @code{metainfo.xml}"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12327
msgid "@code{xgettext}, @code{intltool-extract}, @code{itstool}"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12331
#, no-wrap
msgid "preparing rules for XML translation"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12340
msgid ""
"Marking translatable strings in an XML file is done through a separate "
"\"rule\" file, making use of the Internationalization Tag Set standard (ITS, "
"@uref{https://www.w3.org/TR/its20/}).  The currently supported ITS data "
"categories are: @samp{Translate}, @samp{Localization Note}, @samp{Elements "
"Within Text}, and @samp{Preserve Space}.  In addition to them, "
"@code{xgettext} also recognizes the following extended data categories:"
msgstr ""

#. type: item
#: original_texis/gettext.texi:12342
#, no-wrap
msgid "Context"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12346
msgid ""
"This data category associates @code{msgctxt} to the extracted text.  In the "
"global rule, the @code{contextRule} element contains the following:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12351 original_texis/gettext.texi:12372 original_texis/gettext.texi:12391
msgid ""
"A required @code{selector} attribute.  It contains an absolute selector that "
"selects the nodes to which this rule applies."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12355
msgid ""
"A required @code{contextPointer} attribute that contains a relative selector "
"pointing to a node that holds the @code{msgctxt} value."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12359
msgid ""
"An optional @code{textPointer} attribute that contains a relative selector "
"pointing to a node that holds the @code{msgid} value."
msgstr ""

#. type: item
#: original_texis/gettext.texi:12361
#, no-wrap
msgid "Escape Special Characters"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12367
msgid ""
"This data category indicates whether the special XML characters (@code{<}, "
"@code{>}, @code{&}, @code{\"}) are escaped with entity reference.  In the "
"global rule, the @code{escapeRule} element contains the following:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12375
msgid "A required @code{escape} attribute with the value @code{yes} or @code{no}."
msgstr ""

#. type: item
#: original_texis/gettext.texi:12377
#, no-wrap
msgid "Extended Preserve Space"
msgstr ""

#. type: table
#: original_texis/gettext.texi:12386
msgid ""
"This data category extends the standard @samp{Preserve Space} data category "
"with the additional values @samp{trim} and @samp{paragraph}.  @samp{trim} "
"means to remove the leading and trailing whitespaces of the content, but not "
"to normalize whitespaces in the middle.  @samp{paragraph} means to normalize "
"the content but keep the paragraph boundaries.  In the global rule, the "
"@code{preserveSpaceRule} element contains the following:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12395
msgid ""
"A required @code{space} attribute with the value @code{default}, "
"@code{preserve}, @code{trim}, or @code{paragraph}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12402
msgid ""
"All those extended data categories can only be expressed with global rules, "
"and the rule elements have to have the "
"@code{https://www.gnu.org/s/gettext/ns/its/extensions/1.0} namespace."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12404
msgid "Given the following XML document in a file @file{messages.xml}:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12415
#, no-wrap
msgid ""
"<?xml version=\"1.0\"?>\n"
"<messages>\n"
"  <message>\n"
"    <p>A translatable string</p>\n"
"  </message>\n"
"  <message>\n"
"    <p translatable=\"no\">A non-translatable string</p>\n"
"  </message>\n"
"</messages>\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12419
msgid ""
"To extract the first text content (\"A translatable string\"), but not the "
"second (\"A non-translatable string\"), the following ITS rules can be used:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12425
#, no-wrap
msgid ""
"<?xml version=\"1.0\"?>\n"
"<its:rules xmlns:its=\"http://www.w3.org/2005/11/its\" version=\"1.0\">\n"
"  <its:translateRule selector=\"/messages\" translate=\"no\"/>\n"
"  <its:translateRule selector=\"//message/p\" translate=\"yes\"/>\n"
"\n"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12431
#, no-wrap
msgid ""
"  <!-- If 'p' has an attribute 'translatable' with the value 'no', then\n"
"       the content is not translatable.  -->\n"
"  <its:translateRule selector=\"//message/p[@@translatable = 'no']\"\n"
"    translate=\"no\"/>\n"
"</its:rules>\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12436
msgid ""
"@samp{xgettext} needs another file called \"locating rule\" to associate an "
"ITS rule with an XML file.  If the above ITS file is saved as "
"@file{messages.its}, the locating rule would look like:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12445
#, no-wrap
msgid ""
"<?xml version=\"1.0\"?>\n"
"<locatingRules>\n"
"  <locatingRule name=\"Messages\" pattern=\"*.xml\">\n"
"    <documentRule localName=\"messages\" target=\"messages.its\"/>\n"
"  </locatingRule>\n"
"  <locatingRule name=\"Messages\" pattern=\"*.msg\" "
"target=\"messages.its\"/>\n"
"</locatingRules>\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12457
msgid ""
"The @code{locatingRule} element must have a @code{pattern} attribute, which "
"denotes either a literal file name or a wildcard pattern of the XML "
"file@footnote{Note that the file name matching is done after removing any "
"@code{.in} suffix from the input file name.  Thus the @code{pattern} "
"attribute must not include a pattern matching @code{.in}.  For example, if "
"the input file name is @file{foo.msg.in}, the pattern should be either "
"@code{*.msg} or just @code{*}, rather than @code{*.in}.}.  The "
"@code{locatingRule} element can have child @code{documentRule} element, "
"which adds checks on the content of the XML file."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12460
msgid ""
"The first rule matches any file with the @file{.xml} file extension, but it "
"only applies to XML files whose root element is @samp{<messages>}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12465
msgid ""
"The second rule indicates that the same ITS rule file are also applicable to "
"any file with the @file{.msg} file extension.  The optional @code{name} "
"attribute of @code{locatingRule} allows to choose rules by name, typically "
"with @code{xgettext}'s @code{-L} option."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12470
msgid ""
"The associated ITS rule file is indicated by the @code{target} attribute of "
"@code{locatingRule} or @code{documentRule}.  If it is specified in a "
"@code{documentRule} element, the parent @code{locatingRule} shouldn't have "
"the @code{target} attribute."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12476
msgid ""
"Locating rule files must have the @file{.loc} file extension.  Both ITS rule "
"files and locating rule files must be installed in the "
"@file{$prefix/share/gettext/its} directory.  Once those files are properly "
"installed, @code{xgettext} can extract translatable strings from the "
"matching XML files."
msgstr ""

#. type: subsubsection
#: original_texis/gettext.texi:12477
#, no-wrap
msgid "Two Use-cases of Translated Strings in XML"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12486
msgid ""
"For XML, there are two use-cases of translated strings.  One is the case "
"where the translated strings are directly consumed by programs, and the "
"other is the case where the translated strings are merged back to the "
"original XML document.  In the former case, special characters in the "
"extracted strings shouldn't be escaped, while they should in the latter "
"case.  To control wheter to escape special characters, the @samp{Escape "
"Special Characters} data category can be used."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12492
msgid ""
"To merge the translations, the @samp{msgfmt} program can be used with the "
"option @code{--xml}.  @xref{msgfmt Invocation}, for more details about how "
"one calls the @samp{msgfmt} program.  @samp{msgfmt}'s @code{--xml} option "
"doesn't perform character escaping, so translated strings can have arbitrary "
"XML constructs, such as elements for markup."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12516
msgid ""
"Here is a list of file formats that contain localized data and that the GNU "
"gettext tools can manipulate."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12529
msgid ""
"These file formats can be used with all of the @code{msg*} tools and with "
"the @code{xgettext} program."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12533
msgid ""
"If you just want to convert among these formats, you can use the "
"@code{msgcat} program (with the appropriate option) or the @code{xgettext} "
"program."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12546
msgid "po"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12554
msgid "properties"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12562
msgid "strings"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12569
msgid ""
"These file formats can be created through @code{msgfmt} and converted back "
"to PO format through @code{msgunfmt}."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12585
msgid "mo"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12588
msgid "See section @ref{MO Files} for details."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12595
msgid "class"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12599
msgid ""
"For more information, see the section @ref{Java} and the examples "
"@code{hello-java}, @code{hello-java-awt}, @code{hello-java-swing}."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12606
msgid "dll"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12609 original_texis/gettext.texi:12619
msgid "For more information, see the section @ref{C#}."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12616
msgid "resources"
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12626
msgid "msg"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12630
msgid ""
"For more information, see the section @ref{Tcl} and the examples "
"@code{hello-tcl}, @code{hello-tcl-tk}."
msgstr ""

#. type: code{#1}
#: original_texis/gettext.texi:12637
msgid "qm"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12641
msgid ""
"For more information, see the examples @code{hello-c++-qt} and "
"@code{hello-c++-kde}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12651
msgid ""
"The programmer produces a desktop entry file template with only the English "
"strings.  These strings get included in the POT file, by way of "
"@code{xgettext} (usually by listing the template in @code{po/POTFILES.in}).  "
"The translators produce PO files, one for each language.  Finally, an "
"@code{msgfmt --desktop} invocation collects all the translations in the "
"desktop entry file."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12653
msgid "For more information, see the example @code{hello-c-gnome3}."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12659
msgid ""
"See the section @ref{Preparing ITS Rules} and @ref{msgfmt Invocation}, "
"subsection ``XML mode operations''."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12667
msgid ""
"We would like to conclude this GNU @code{gettext} manual by presenting an "
"history of the Translation Project so far.  We finally give a few pointers "
"for those who want to do further research or readings about Native Language "
"Support matters."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12676
#, no-wrap
msgid "history of GNU @code{gettext}"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12683
msgid ""
"Internationalization concerns and algorithms have been informally and "
"casually discussed for years in GNU, sometimes around GNU @code{libc}, maybe "
"around the incoming @code{Hurd}, or otherwise (nobody clearly remembers).  "
"And even then, when the work started for real, this was somewhat "
"independently of these previous discussions."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12694
msgid ""
"This all began in July 1994, when Patrick D'Cruze had the idea and "
"initiative of internationalizing version 3.9.2 of GNU @code{fileutils}.  He "
"then asked Jim Meyering, the maintainer, how to get those changes folded "
"into an official release.  That first draft was full of @code{#ifdef}s and "
"somewhat disconcerting, and Jim wanted to find nicer ways.  Patrick and Jim "
"shared some tries and experimentations in this area.  Then, feeling that "
"this might eventually have a deeper impact on GNU, Jim wanted to know what "
"standards were, and contacted Richard Stallman, who very quickly and "
"verbally described an overall design for what was meant to become "
"@code{glocale}, at that time."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12704
msgid ""
"Jim implemented @code{glocale} and got a lot of exhausting feedback from "
"Patrick and Richard, of course, but also from Mitchum DSouza (who wrote a "
"@code{catgets}-like package), Roland McGrath, maybe David MacKenzie, "
"Fran@,{c}ois Pinard, and Paul Eggert, all pushing and pulling in various "
"directions, not always compatible, to the extent that after a couple of test "
"releases, @code{glocale} was torn apart.  In particular, Paul Eggert -- "
"always keeping an eye on developments in Solaris -- advocated the use of the "
"@code{gettext} API over @code{glocale}'s @code{catgets}-based API."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12715
msgid ""
"While Jim took some distance and time and became dad for a second time, "
"Roland wanted to get GNU @code{libc} internationalized, and got Ulrich "
"Drepper involved in that project.  Instead of starting from @code{glocale}, "
"Ulrich rewrote something from scratch, but more conforming to the set of "
"guidelines who emerged out of the @code{glocale} effort.  Then, Ulrich got "
"people from the previous forum to involve themselves into this new project, "
"and the switch from @code{glocale} to what was first named @code{msgutils}, "
"renamed @code{nlsutils}, and later @code{gettext}, became officially "
"accepted by Richard in May 1995 or so."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12723
msgid ""
"Let's summarize by saying that Ulrich Drepper wrote GNU @code{gettext} in "
"April 1995.  The first official release of the package, including PO mode, "
"occurred in July 1995, and was numbered 0.7.  Other people contributed to "
"the effort by providing a discussion forum around Ulrich, writing little "
"pieces of code, or testing.  These are quoted in the @code{THANKS} file "
"which comes with the GNU @code{gettext} distribution."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12735
msgid ""
"While this was being done, Fran@,{c}ois adapted half a dozen of GNU packages "
"to @code{glocale} first, then later to @code{gettext}, putting them in "
"pretest, so providing along the way an effective user environment for fine "
"tuning the evolving tools.  He also took the responsibility of organizing "
"and coordinating the Translation Project.  After nearly a year of informal "
"exchanges between people from many countries, translator teams started to "
"exist in May 1995, through the creation and support by Patrick D'Cruze of "
"twenty unmoderated mailing lists for that many native languages, and two "
"moderated lists: one for reaching all teams at once, the other for reaching "
"all willing maintainers of internationalized free software packages."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12739
msgid ""
"Fran@,{c}ois also wrote PO mode in June 1995 with the collaboration of Greg "
"McGary, as a kind of contribution to Ulrich's package.  He also gave a hand "
"with the GNU @code{gettext} Texinfo manual."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12742
msgid ""
"In 1997, Ulrich Drepper released the GNU libc 2.0, which included the "
"@code{gettext}, @code{textdomain} and @code{bindtextdomain} functions."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12746
msgid ""
"In 2000, Ulrich Drepper added plural form handling (the @code{ngettext} "
"function) to GNU libc.  Later, in 2001, he released GNU libc 2.2.x, which is "
"the first free C library with full internationalization support."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12752
msgid ""
"Ulrich being quite busy in his role of General Maintainer of GNU libc, he "
"handed over the GNU @code{gettext} maintenance to Bruno Haible in 2000.  "
"Bruno added the plural form handling to the tools as well, added support for "
"UTF-8 and CJK locales, and wrote a few new tools for manipulating PO files."
msgstr ""

#. type: include
#: original_texis/gettext.texi:12753
#, no-wrap
msgid "nls.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12757
#, no-wrap
msgid "related reading"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12758
#, no-wrap
msgid "bibliography"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12766
msgid ""
"Eugene H. Dorr (@file{dorre@@well.com}) maintains an interesting "
"bibliography on internationalization matters, called "
"@cite{Internationalization Reference List}, which is available as:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12768
#, no-wrap
msgid "ftp://ftp.ora.com/pub/examples/nutshell/ujip/doc/i18n-books.txt\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12780
msgid ""
"Michael Gschwind (@file{mike@@vlsivie.tuwien.ac.at}) maintains a Frequently "
"Asked Questions (FAQ) list, entitled @cite{Programming for "
"Internationalisation}.  This FAQ discusses writing programs which can handle "
"different language conventions, character sets, etc.; and is applicable to "
"all character set encodings, with particular emphasis on @w{ISO 8859-1}.  It "
"is regularly published in Usenet groups @file{comp.unix.questions}, "
"@file{comp.std.internat}, @file{comp.software.international}, "
"@file{comp.lang.c}, @file{comp.windows.x}, @file{comp.std.c}, "
"@file{comp.answers} and @file{news.answers}.  The home location of this "
"document is:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12782
#, no-wrap
msgid "ftp://ftp.vlsivie.tuwien.ac.at/pub/8bit/ISO-programming\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12787
msgid ""
"Patrick D'Cruze (@file{pdcruze@@li.org}) wrote a tutorial about NLS matters, "
"and Jochen Hein (@file{Hein@@student.tu-clausthal.de}) took over the "
"responsibility of maintaining it.  It may be found as:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12790
#, no-wrap
msgid ""
"ftp://sunsite.unc.edu/pub/Linux/utils/nls/catalogs/Incoming/...\n"
"     ...locale-tutorial-0.8.txt.gz\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12793
msgid "This site is mirrored in:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12795
#, no-wrap
msgid "ftp://ftp.ibp.fr/pub/linux/sunsite/\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12798
msgid "A French version of the same tutorial should be findable at:"
msgstr ""

#. type: example
#: original_texis/gettext.texi:12800
#, no-wrap
msgid "ftp://ftp.ibp.fr/pub/linux/french/docs/\n"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12803
msgid "together with French translations of many Linux-related documents."
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12806
#, no-wrap
msgid "language codes"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12807
#, no-wrap
msgid "ISO 639"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12813
msgid ""
"The @w{ISO 639} standard defines two-letter codes for many languages, and "
"three-letter codes for more rarely used languages.  All abbreviations for "
"languages used in the Translation Project should come from this standard."
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12824
msgid ""
"For the commonly used languages, the @w{ISO 639-1} standard defines "
"two-letter codes."
msgstr ""

#. type: include
#: original_texis/gettext.texi:12826
#, no-wrap
msgid "iso-639.texi"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12835
msgid ""
"For rarely used languages, the @w{ISO 639-2} standard defines three-letter "
"codes.  Here is the current list, reduced to only living languages with at "
"least one million of speakers."
msgstr ""

#. type: include
#: original_texis/gettext.texi:12837
#, no-wrap
msgid "iso-639-2.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12842
#, no-wrap
msgid "country codes"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12843
#, no-wrap
msgid "ISO 3166"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12848
msgid ""
"The @w{ISO 3166} standard defines two character codes for many countries and "
"territories.  All abbreviations for countries used in the Translation "
"Project should come from this standard."
msgstr ""

#. type: include
#: original_texis/gettext.texi:12850
#, no-wrap
msgid "iso-3166.texi"
msgstr ""

#. type: Plain text
#: original_texis/gettext.texi:12859
msgid ""
"The files of this package are covered by the licenses indicated in each "
"particular file or directory.  Here is a summary:"
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12865
msgid ""
"The @code{libintl} and @code{libasprintf} libraries are covered by the GNU "
"Lesser General Public License (LGPL).  A copy of the license is included in "
"@ref{GNU LGPL}."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12870
msgid ""
"The executable programs of this package and the @code{libgettextpo} library "
"are covered by the GNU General Public License (GPL).  A copy of the license "
"is included in @ref{GNU GPL}."
msgstr ""

#. type: itemize
#: original_texis/gettext.texi:12889
msgid ""
"This manual is free documentation.  It is dually licensed under the GNU FDL "
"and the GNU GPL.  This means that you can redistribute this manual under "
"either of these two licenses, at your choice.  @* This manual is covered by "
"the GNU FDL.  Permission is granted to copy, distribute and/or modify this "
"document under the terms of the GNU Free Documentation License (FDL), either "
"version 1.2 of the License, or (at your option) any later version published "
"by the Free Software Foundation (FSF); with no Invariant Sections, with no "
"Front-Cover Text, and with no Back-Cover Texts.  A copy of the license is "
"included in @ref{GNU FDL}.  @* This manual is covered by the GNU GPL.  You "
"can redistribute it and/or modify it under the terms of the GNU General "
"Public License (GPL), either version 2 of the License, or (at your option) "
"any later version published by the Free Software Foundation (FSF).  A copy "
"of the license is included in @ref{GNU GPL}."
msgstr ""

#. type: appendixsec
#: original_texis/gettext.texi:12899
#, no-wrap
msgid "GNU GENERAL PUBLIC LICENSE"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12900
#, no-wrap
msgid "GPL, GNU General Public License"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12901
#, no-wrap
msgid "License, GNU GPL"
msgstr ""

#. type: include
#: original_texis/gettext.texi:12902
#, no-wrap
msgid "gpl.texi"
msgstr ""

#. type: appendixsec
#: original_texis/gettext.texi:12905
#, no-wrap
msgid "GNU LESSER GENERAL PUBLIC LICENSE"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12906
#, no-wrap
msgid "LGPL, GNU Lesser General Public License"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12907
#, no-wrap
msgid "License, GNU LGPL"
msgstr ""

#. type: include
#: original_texis/gettext.texi:12908
#, no-wrap
msgid "lgpl.texi"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12912
#, no-wrap
msgid "FDL, GNU Free Documentation License"
msgstr ""

#. type: cindex
#: original_texis/gettext.texi:12913
#, no-wrap
msgid "License, GNU FDL"
msgstr ""

#. type: include
#: original_texis/gettext.texi:12914
#, no-wrap
msgid "fdl.texi"
msgstr ""
